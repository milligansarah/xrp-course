/*! For license information please see main.3fc4a2a6.js.LICENSE.txt */
!function(){var e={698:function(e,t,n){var o=n(791),a=n(7);function r(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var i=r(o),s=r(a),l=function(){return l=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},l.apply(this,arguments)},u=function(e){var t,n=e.bgColor,o=e.completed,a=e.baseBgColor,r=e.height,s=e.width,u=e.margin,c=e.padding,d=e.borderRadius,h=e.labelAlignment,p=e.labelColor,f=e.labelSize,m=e.isLabelVisible,y=e.customLabelStyles,g=e.transitionDuration,b=e.transitionTimingFunction,v=e.className,w=e.dir,k=e.ariaValuemin,x=e.ariaValuemax,T=e.ariaValuetext,C=e.maxCompleted,S=e.customLabel,j=e.animateOnRender,P=e.barContainerClassName,R=e.completedClassName,O=e.labelClassName,I=e.initCompletedOnAnimation,E=void 0===I?0:I,_="left"===(t=h)?"flex-start":"center"===t?"center":"right"===t?"flex-end":null,D="number"===typeof E?"".concat(E,"%"):E,A=function(e,t){if(e){var n=Number(t)/e;return n>1?"100%":"".concat(100*n,"%")}return D}(C,o),N=i.useState(D),L=N[0],z=N[1],M={height:r,background:a,borderRadius:d,padding:c,width:s,margin:u,overflow:"hidden"},F={height:r,width:j?L:A,background:n,transition:"width ".concat(g||"1s"," ").concat(b||"ease-in-out"),borderRadius:"inherit",display:"flex",alignItems:"center",justifyContent:"outside"!==h&&_?_:"normal"},W=l({padding:"outside"===h?"0 0 0 5px":"5px",color:p,fontWeight:"bold",fontSize:f,display:m?"initial":"none"},y),B={display:"outside"===h?"flex":"initial",alignItems:"outside"===h?"center":"initial"},H="number"===typeof o?"".concat(o,"%"):"".concat(o),Y=S||H;return i.useEffect((function(){j&&requestAnimationFrame((function(){return z(A)}))}),[A,j]),i.createElement("div",{style:v?void 0:B,className:v,dir:w,role:"progressbar","aria-valuenow":parseFloat(Y),"aria-valuemin":k,"aria-valuemax":x,"aria-valuetext":"".concat(null===T?Y:T)},i.createElement("div",{style:P?void 0:M,className:P},i.createElement("div",{style:R?void 0:F,className:R},"outside"!==h&&i.createElement("span",{style:O?void 0:W,className:O},Y))),"outside"===h&&i.createElement("span",{style:O?void 0:W,className:O},Y))};u.propTypes={completed:s.oneOfType([s.string,s.number]).isRequired,bgColor:s.string,baseBgColor:s.string,height:s.string,width:s.string,borderRadius:s.string,margin:s.string,padding:s.string,labelAlignment:s.oneOf(["left","center","right","outside"]),labelColor:s.string,labelSize:s.string,isLabelVisible:s.bool,className:s.string,dir:s.oneOf(["rtl","ltr","auto"]),maxCompleted:s.number,customLabel:s.string,animateOnRender:s.bool,barContainerClassName:s.string,completedClassName:s.string,labelClassName:s.string,initCompletedOnAnimation:s.oneOfType([s.string,s.number])},u.defaultProps={bgColor:"#6a1b9a",height:"20px",width:"100%",borderRadius:"50px",labelAlignment:"right",baseBgColor:"#e0e0de",labelColor:"#fff",labelSize:"15px",isLabelVisible:!0,dir:"ltr",ariaValuemin:0,ariaValuemax:100,ariaValuetext:null,maxCompleted:100,animateOnRender:!1,initCompletedOnAnimation:0},t.Z=u},776:function(e,t){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.Doctype=t.CDATA=t.Tag=t.Style=t.Script=t.Comment=t.Directive=t.Text=t.Root=t.isTag=t.ElementType=void 0,function(e){e.Root="root",e.Text="text",e.Directive="directive",e.Comment="comment",e.Script="script",e.Style="style",e.Tag="tag",e.CDATA="cdata",e.Doctype="doctype"}(n=t.ElementType||(t.ElementType={})),t.isTag=function(e){return e.type===n.Tag||e.type===n.Script||e.type===n.Style},t.Root=n.Root,t.Text=n.Text,t.Directive=n.Directive,t.Comment=n.Comment,t.Script=n.Script,t.Style=n.Style,t.Tag=n.Tag,t.CDATA=n.CDATA,t.Doctype=n.Doctype},127:function(e,t){t.CASE_SENSITIVE_TAG_NAMES=["animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","linearGradient","radialGradient","textPath"]},409:function(e){var t="html",n="head",o="body",a=/<([a-zA-Z]+[0-9]?)/,r=/<head[^]*>/i,i=/<body[^]*>/i,s=function(){throw new Error("This browser does not support `document.implementation.createHTMLDocument`")},l=function(){throw new Error("This browser does not support `DOMParser.prototype.parseFromString`")},u="object"===typeof window&&window.DOMParser;if("function"===typeof u){var c=new u;s=l=function(e,t){return t&&(e="<"+t+">"+e+"</"+t+">"),c.parseFromString(e,"text/html")}}if("object"===typeof document&&document.implementation){var d=document.implementation.createHTMLDocument();s=function(e,t){return t?(d.documentElement.querySelector(t).innerHTML=e,d):(d.documentElement.innerHTML=e,d)}}var h,p="object"===typeof document?document.createElement("template"):{};p.content&&(h=function(e){return p.innerHTML=e,p.content.childNodes}),e.exports=function(e){var u,c,d,p,f=e.match(a);switch(f&&f[1]&&(u=f[1].toLowerCase()),u){case t:return c=l(e),r.test(e)||(d=c.querySelector(n))&&d.parentNode.removeChild(d),i.test(e)||(d=c.querySelector(o))&&d.parentNode.removeChild(d),c.querySelectorAll(t);case n:case o:return p=(c=s(e)).querySelectorAll(u),i.test(e)&&r.test(e)?p[0].parentNode.childNodes:p;default:return h?h(e):(d=s(e,o).querySelector(o)).childNodes}}},159:function(e,t,n){var o=n(409),a=n(716).formatDOM,r=/<(![a-zA-Z\s]+)>/;e.exports=function(e){if("string"!==typeof e)throw new TypeError("First argument must be a string");if(""===e)return[];var t,n=e.match(r);return n&&n[1]&&(t=n[1]),a(o(e),null,t)}},716:function(e,t,n){for(var o,a=n(538),r=n(127).CASE_SENSITIVE_TAG_NAMES,i=a.Comment,s=a.Element,l=a.ProcessingInstruction,u=a.Text,c={},d=0,h=r.length;d<h;d++)o=r[d],c[o.toLowerCase()]=o;function p(e){for(var t,n={},o=0,a=e.length;o<a;o++)n[(t=e[o]).name]=t.value;return n}function f(e){var t=function(e){return c[e]}(e=e.toLowerCase());return t||e}t.formatAttributes=p,t.formatDOM=function e(t,n,o){n=n||null;for(var a,r=[],c=0,d=t.length;c<d;c++){var h,m=t[c];switch(m.nodeType){case 1:a=f(m.nodeName),(h=new s(a,p(m.attributes))).children=e("template"===a?m.content.childNodes:m.childNodes,h);break;case 3:h=new u(m.nodeValue);break;case 8:h=new i(m.nodeValue);break;default:continue}var y=r[c-1]||null;y&&(y.next=h),h.parent=n,h.prev=y,h.next=null,r.push(h)}return o&&((h=new l(o.substring(0,o.indexOf(" ")).toLowerCase(),o)).next=r[0]||null,h.parent=n,r.unshift(h),r[1]&&(r[1].prev=r[0])),r}},538:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,a)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),a=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||o(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.DomHandler=void 0;var r=n(776),i=n(362);a(n(362),t);var s={withStartIndices:!1,withEndIndices:!1,xmlMode:!1},l=function(){function e(e,t,n){this.dom=[],this.root=new i.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null,"function"===typeof t&&(n=t,t=s),"object"===typeof e&&(t=e,e=void 0),this.callback=null!==e&&void 0!==e?e:null,this.options=null!==t&&void 0!==t?t:s,this.elementCB=null!==n&&void 0!==n?n:null}return e.prototype.onparserinit=function(e){this.parser=e},e.prototype.onreset=function(){this.dom=[],this.root=new i.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null},e.prototype.onend=function(){this.done||(this.done=!0,this.parser=null,this.handleCallback(null))},e.prototype.onerror=function(e){this.handleCallback(e)},e.prototype.onclosetag=function(){this.lastNode=null;var e=this.tagStack.pop();this.options.withEndIndices&&(e.endIndex=this.parser.endIndex),this.elementCB&&this.elementCB(e)},e.prototype.onopentag=function(e,t){var n=this.options.xmlMode?r.ElementType.Tag:void 0,o=new i.Element(e,t,void 0,n);this.addNode(o),this.tagStack.push(o)},e.prototype.ontext=function(e){var t=this.lastNode;if(t&&t.type===r.ElementType.Text)t.data+=e,this.options.withEndIndices&&(t.endIndex=this.parser.endIndex);else{var n=new i.Text(e);this.addNode(n),this.lastNode=n}},e.prototype.oncomment=function(e){if(this.lastNode&&this.lastNode.type===r.ElementType.Comment)this.lastNode.data+=e;else{var t=new i.Comment(e);this.addNode(t),this.lastNode=t}},e.prototype.oncommentend=function(){this.lastNode=null},e.prototype.oncdatastart=function(){var e=new i.Text(""),t=new i.CDATA([e]);this.addNode(t),e.parent=t,this.lastNode=e},e.prototype.oncdataend=function(){this.lastNode=null},e.prototype.onprocessinginstruction=function(e,t){var n=new i.ProcessingInstruction(e,t);this.addNode(n)},e.prototype.handleCallback=function(e){if("function"===typeof this.callback)this.callback(e,this.dom);else if(e)throw e},e.prototype.addNode=function(e){var t=this.tagStack[this.tagStack.length-1],n=t.children[t.children.length-1];this.options.withStartIndices&&(e.startIndex=this.parser.startIndex),this.options.withEndIndices&&(e.endIndex=this.parser.endIndex),t.children.push(e),n&&(e.prev=n,n.next=e),e.parent=t,this.lastNode=null},e}();t.DomHandler=l,t.default=l},362:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!==typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),a=this&&this.__assign||function(){return a=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.cloneNode=t.hasChildren=t.isDocument=t.isDirective=t.isComment=t.isText=t.isCDATA=t.isTag=t.Element=t.Document=t.CDATA=t.NodeWithChildren=t.ProcessingInstruction=t.Comment=t.Text=t.DataNode=t.Node=void 0;var r=n(776),i=function(){function e(){this.parent=null,this.prev=null,this.next=null,this.startIndex=null,this.endIndex=null}return Object.defineProperty(e.prototype,"parentNode",{get:function(){return this.parent},set:function(e){this.parent=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"previousSibling",{get:function(){return this.prev},set:function(e){this.prev=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"nextSibling",{get:function(){return this.next},set:function(e){this.next=e},enumerable:!1,configurable:!0}),e.prototype.cloneNode=function(e){return void 0===e&&(e=!1),k(this,e)},e}();t.Node=i;var s=function(e){function t(t){var n=e.call(this)||this;return n.data=t,n}return o(t,e),Object.defineProperty(t.prototype,"nodeValue",{get:function(){return this.data},set:function(e){this.data=e},enumerable:!1,configurable:!0}),t}(i);t.DataNode=s;var l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=r.ElementType.Text,t}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 3},enumerable:!1,configurable:!0}),t}(s);t.Text=l;var u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=r.ElementType.Comment,t}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 8},enumerable:!1,configurable:!0}),t}(s);t.Comment=u;var c=function(e){function t(t,n){var o=e.call(this,n)||this;return o.name=t,o.type=r.ElementType.Directive,o}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),t}(s);t.ProcessingInstruction=c;var d=function(e){function t(t){var n=e.call(this)||this;return n.children=t,n}return o(t,e),Object.defineProperty(t.prototype,"firstChild",{get:function(){var e;return null!==(e=this.children[0])&&void 0!==e?e:null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lastChild",{get:function(){return this.children.length>0?this.children[this.children.length-1]:null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"childNodes",{get:function(){return this.children},set:function(e){this.children=e},enumerable:!1,configurable:!0}),t}(i);t.NodeWithChildren=d;var h=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=r.ElementType.CDATA,t}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 4},enumerable:!1,configurable:!0}),t}(d);t.CDATA=h;var p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=r.ElementType.Root,t}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 9},enumerable:!1,configurable:!0}),t}(d);t.Document=p;var f=function(e){function t(t,n,o,a){void 0===o&&(o=[]),void 0===a&&(a="script"===t?r.ElementType.Script:"style"===t?r.ElementType.Style:r.ElementType.Tag);var i=e.call(this,o)||this;return i.name=t,i.attribs=n,i.type=a,i}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"tagName",{get:function(){return this.name},set:function(e){this.name=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"attributes",{get:function(){var e=this;return Object.keys(this.attribs).map((function(t){var n,o;return{name:t,value:e.attribs[t],namespace:null===(n=e["x-attribsNamespace"])||void 0===n?void 0:n[t],prefix:null===(o=e["x-attribsPrefix"])||void 0===o?void 0:o[t]}}))},enumerable:!1,configurable:!0}),t}(d);function m(e){return(0,r.isTag)(e)}function y(e){return e.type===r.ElementType.CDATA}function g(e){return e.type===r.ElementType.Text}function b(e){return e.type===r.ElementType.Comment}function v(e){return e.type===r.ElementType.Directive}function w(e){return e.type===r.ElementType.Root}function k(e,t){var n;if(void 0===t&&(t=!1),g(e))n=new l(e.data);else if(b(e))n=new u(e.data);else if(m(e)){var o=t?x(e.children):[],r=new f(e.name,a({},e.attribs),o);o.forEach((function(e){return e.parent=r})),null!=e.namespace&&(r.namespace=e.namespace),e["x-attribsNamespace"]&&(r["x-attribsNamespace"]=a({},e["x-attribsNamespace"])),e["x-attribsPrefix"]&&(r["x-attribsPrefix"]=a({},e["x-attribsPrefix"])),n=r}else if(y(e)){o=t?x(e.children):[];var i=new h(o);o.forEach((function(e){return e.parent=i})),n=i}else if(w(e)){o=t?x(e.children):[];var s=new p(o);o.forEach((function(e){return e.parent=s})),e["x-mode"]&&(s["x-mode"]=e["x-mode"]),n=s}else{if(!v(e))throw new Error("Not implemented yet: ".concat(e.type));var d=new c(e.name,e.data);null!=e["x-name"]&&(d["x-name"]=e["x-name"],d["x-publicId"]=e["x-publicId"],d["x-systemId"]=e["x-systemId"]),n=d}return n.startIndex=e.startIndex,n.endIndex=e.endIndex,null!=e.sourceCodeLocation&&(n.sourceCodeLocation=e.sourceCodeLocation),n}function x(e){for(var t=e.map((function(e){return k(e,!0)})),n=1;n<t.length;n++)t[n].prev=t[n-1],t[n-1].next=t[n];return t}t.Element=f,t.isTag=m,t.isCDATA=y,t.isText=g,t.isComment=b,t.isDirective=v,t.isDocument=w,t.hasChildren=function(e){return Object.prototype.hasOwnProperty.call(e,"children")},t.cloneNode=k},854:function(e,t,n){var o=n(936),a=n(159),r=n(131),i=n(595);a="function"===typeof a.default?a.default:a;var s={lowerCaseAttributeNames:!1};function l(e,t){if("string"!==typeof e)throw new TypeError("First argument must be a string");return""===e?[]:i(a(e,(t=t||{}).htmlparser2||s),t)}l.domToReact=i,l.htmlToDOM=a,l.attributesToProps=r,l.Comment=o.Comment,l.Element=o.Element,l.ProcessingInstruction=o.ProcessingInstruction,l.Text=o.Text,e.exports=l,l.default=l},131:function(e,t,n){var o=n(195),a=n(141),r=["checked","value"],i=["input","select","textarea"],s={reset:!0,submit:!0};function l(e){return o.possibleStandardNames[e]}e.exports=function(e,t){var n,u,c,d,h,p={},f=(e=e||{}).type&&s[e.type];for(n in e)if(c=e[n],o.isCustomAttribute(n))p[n]=c;else if(d=l(u=n.toLowerCase()))switch(h=o.getPropertyInfo(d),-1===r.indexOf(d)||-1===i.indexOf(t)||f||(d=l("default"+u)),p[d]=c,h&&h.type){case o.BOOLEAN:p[d]=!0;break;case o.OVERLOADED_BOOLEAN:""===c&&(p[d]=!0)}else a.PRESERVE_CUSTOM_ATTRIBUTES&&(p[n]=c);return a.setStyleProp(e.style,p),p}},595:function(e,t,n){var o=n(791),a=n(131),r=n(141),i=r.setStyleProp,s=r.canTextBeChildOfNode;function l(e){return r.PRESERVE_CUSTOM_ATTRIBUTES&&"tag"===e.type&&r.isCustomComponent(e.name,e.attribs)}e.exports=function e(t,n){for(var u,c,d,h,p,f=(n=n||{}).library||o,m=f.cloneElement,y=f.createElement,g=f.isValidElement,b=[],v="function"===typeof n.replace,w=n.transform||r.returnFirstArg,k=n.trim,x=0,T=t.length;x<T;x++)if(u=t[x],v&&g(d=n.replace(u)))T>1&&(d=m(d,{key:d.key||x})),b.push(w(d,u,x));else if("text"!==u.type){switch(h=u.attribs,l(u)?i(h.style,h):h&&(h=a(h,u.name)),p=null,u.type){case"script":case"style":u.children[0]&&(h.dangerouslySetInnerHTML={__html:u.children[0].data});break;case"tag":"textarea"===u.name&&u.children[0]?h.defaultValue=u.children[0].data:u.children&&u.children.length&&(p=e(u.children,n));break;default:continue}T>1&&(h.key=x),b.push(w(y(u.name,h,p),u,x))}else{if((c=!u.data.trim().length)&&u.parent&&!s(u.parent))continue;if(k&&c)continue;b.push(w(u.data,u,x))}return 1===b.length?b[0]:b}},141:function(e,t,n){var o=n(791),a=n(792).default;var r=new Set(["annotation-xml","color-profile","font-face","font-face-src","font-face-uri","font-face-format","font-face-name","missing-glyph"]);var i={reactCompat:!0};var s=o.version.split(".")[0]>=16,l=new Set(["tr","tbody","thead","tfoot","colgroup","table","head","html","frameset"]);e.exports={PRESERVE_CUSTOM_ATTRIBUTES:s,ELEMENTS_WITH_NO_TEXT_CHILDREN:l,invertObject:function(e,t){if(!e||"object"!==typeof e)throw new TypeError("First argument must be an object");var n="function"===typeof t,o={},a={};for(var r in e){var i=e[r];n&&(o=t(r,i))&&2===o.length?a[o[0]]=o[1]:"string"===typeof i&&(a[i]=r)}return a},isCustomComponent:function(e,t){return-1===e.indexOf("-")?t&&"string"===typeof t.is:!r.has(e)},setStyleProp:function(e,t){if(null!==e&&void 0!==e)try{t.style=a(e,i)}catch(n){t.style={}}},canTextBeChildOfNode:function(e){return!l.has(e.name)},returnFirstArg:function(e){return e}}},936:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,a)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),a=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||o(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.DomHandler=void 0;var r=n(776),i=n(262);a(n(262),t);var s={withStartIndices:!1,withEndIndices:!1,xmlMode:!1},l=function(){function e(e,t,n){this.dom=[],this.root=new i.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null,"function"===typeof t&&(n=t,t=s),"object"===typeof e&&(t=e,e=void 0),this.callback=null!==e&&void 0!==e?e:null,this.options=null!==t&&void 0!==t?t:s,this.elementCB=null!==n&&void 0!==n?n:null}return e.prototype.onparserinit=function(e){this.parser=e},e.prototype.onreset=function(){this.dom=[],this.root=new i.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null},e.prototype.onend=function(){this.done||(this.done=!0,this.parser=null,this.handleCallback(null))},e.prototype.onerror=function(e){this.handleCallback(e)},e.prototype.onclosetag=function(){this.lastNode=null;var e=this.tagStack.pop();this.options.withEndIndices&&(e.endIndex=this.parser.endIndex),this.elementCB&&this.elementCB(e)},e.prototype.onopentag=function(e,t){var n=this.options.xmlMode?r.ElementType.Tag:void 0,o=new i.Element(e,t,void 0,n);this.addNode(o),this.tagStack.push(o)},e.prototype.ontext=function(e){var t=this.lastNode;if(t&&t.type===r.ElementType.Text)t.data+=e,this.options.withEndIndices&&(t.endIndex=this.parser.endIndex);else{var n=new i.Text(e);this.addNode(n),this.lastNode=n}},e.prototype.oncomment=function(e){if(this.lastNode&&this.lastNode.type===r.ElementType.Comment)this.lastNode.data+=e;else{var t=new i.Comment(e);this.addNode(t),this.lastNode=t}},e.prototype.oncommentend=function(){this.lastNode=null},e.prototype.oncdatastart=function(){var e=new i.Text(""),t=new i.CDATA([e]);this.addNode(t),e.parent=t,this.lastNode=e},e.prototype.oncdataend=function(){this.lastNode=null},e.prototype.onprocessinginstruction=function(e,t){var n=new i.ProcessingInstruction(e,t);this.addNode(n)},e.prototype.handleCallback=function(e){if("function"===typeof this.callback)this.callback(e,this.dom);else if(e)throw e},e.prototype.addNode=function(e){var t=this.tagStack[this.tagStack.length-1],n=t.children[t.children.length-1];this.options.withStartIndices&&(e.startIndex=this.parser.startIndex),this.options.withEndIndices&&(e.endIndex=this.parser.endIndex),t.children.push(e),n&&(e.prev=n,n.next=e),e.parent=t,this.lastNode=null},e}();t.DomHandler=l,t.default=l},262:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!==typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),a=this&&this.__assign||function(){return a=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.cloneNode=t.hasChildren=t.isDocument=t.isDirective=t.isComment=t.isText=t.isCDATA=t.isTag=t.Element=t.Document=t.CDATA=t.NodeWithChildren=t.ProcessingInstruction=t.Comment=t.Text=t.DataNode=t.Node=void 0;var r=n(776),i=function(){function e(){this.parent=null,this.prev=null,this.next=null,this.startIndex=null,this.endIndex=null}return Object.defineProperty(e.prototype,"parentNode",{get:function(){return this.parent},set:function(e){this.parent=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"previousSibling",{get:function(){return this.prev},set:function(e){this.prev=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"nextSibling",{get:function(){return this.next},set:function(e){this.next=e},enumerable:!1,configurable:!0}),e.prototype.cloneNode=function(e){return void 0===e&&(e=!1),k(this,e)},e}();t.Node=i;var s=function(e){function t(t){var n=e.call(this)||this;return n.data=t,n}return o(t,e),Object.defineProperty(t.prototype,"nodeValue",{get:function(){return this.data},set:function(e){this.data=e},enumerable:!1,configurable:!0}),t}(i);t.DataNode=s;var l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=r.ElementType.Text,t}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 3},enumerable:!1,configurable:!0}),t}(s);t.Text=l;var u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=r.ElementType.Comment,t}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 8},enumerable:!1,configurable:!0}),t}(s);t.Comment=u;var c=function(e){function t(t,n){var o=e.call(this,n)||this;return o.name=t,o.type=r.ElementType.Directive,o}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),t}(s);t.ProcessingInstruction=c;var d=function(e){function t(t){var n=e.call(this)||this;return n.children=t,n}return o(t,e),Object.defineProperty(t.prototype,"firstChild",{get:function(){var e;return null!==(e=this.children[0])&&void 0!==e?e:null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lastChild",{get:function(){return this.children.length>0?this.children[this.children.length-1]:null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"childNodes",{get:function(){return this.children},set:function(e){this.children=e},enumerable:!1,configurable:!0}),t}(i);t.NodeWithChildren=d;var h=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=r.ElementType.CDATA,t}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 4},enumerable:!1,configurable:!0}),t}(d);t.CDATA=h;var p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=r.ElementType.Root,t}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 9},enumerable:!1,configurable:!0}),t}(d);t.Document=p;var f=function(e){function t(t,n,o,a){void 0===o&&(o=[]),void 0===a&&(a="script"===t?r.ElementType.Script:"style"===t?r.ElementType.Style:r.ElementType.Tag);var i=e.call(this,o)||this;return i.name=t,i.attribs=n,i.type=a,i}return o(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"tagName",{get:function(){return this.name},set:function(e){this.name=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"attributes",{get:function(){var e=this;return Object.keys(this.attribs).map((function(t){var n,o;return{name:t,value:e.attribs[t],namespace:null===(n=e["x-attribsNamespace"])||void 0===n?void 0:n[t],prefix:null===(o=e["x-attribsPrefix"])||void 0===o?void 0:o[t]}}))},enumerable:!1,configurable:!0}),t}(d);function m(e){return(0,r.isTag)(e)}function y(e){return e.type===r.ElementType.CDATA}function g(e){return e.type===r.ElementType.Text}function b(e){return e.type===r.ElementType.Comment}function v(e){return e.type===r.ElementType.Directive}function w(e){return e.type===r.ElementType.Root}function k(e,t){var n;if(void 0===t&&(t=!1),g(e))n=new l(e.data);else if(b(e))n=new u(e.data);else if(m(e)){var o=t?x(e.children):[],r=new f(e.name,a({},e.attribs),o);o.forEach((function(e){return e.parent=r})),null!=e.namespace&&(r.namespace=e.namespace),e["x-attribsNamespace"]&&(r["x-attribsNamespace"]=a({},e["x-attribsNamespace"])),e["x-attribsPrefix"]&&(r["x-attribsPrefix"]=a({},e["x-attribsPrefix"])),n=r}else if(y(e)){o=t?x(e.children):[];var i=new h(o);o.forEach((function(e){return e.parent=i})),n=i}else if(w(e)){o=t?x(e.children):[];var s=new p(o);o.forEach((function(e){return e.parent=s})),e["x-mode"]&&(s["x-mode"]=e["x-mode"]),n=s}else{if(!v(e))throw new Error("Not implemented yet: ".concat(e.type));var d=new c(e.name,e.data);null!=e["x-name"]&&(d["x-name"]=e["x-name"],d["x-publicId"]=e["x-publicId"],d["x-systemId"]=e["x-systemId"]),n=d}return n.startIndex=e.startIndex,n.endIndex=e.endIndex,null!=e.sourceCodeLocation&&(n.sourceCodeLocation=e.sourceCodeLocation),n}function x(e){for(var t=e.map((function(e){return k(e,!0)})),n=1;n<t.length;n++)t[n].prev=t[n-1],t[n-1].next=t[n];return t}t.Element=f,t.isTag=m,t.isCDATA=y,t.isText=g,t.isComment=b,t.isDirective=v,t.isDocument=w,t.hasChildren=function(e){return Object.prototype.hasOwnProperty.call(e,"children")},t.cloneNode=k},65:function(e){var t=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,n=/\n/g,o=/^\s*/,a=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,r=/^:\s*/,i=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,s=/^[;\s]*/,l=/^\s+|\s+$/g,u="";function c(e){return e?e.replace(l,u):u}e.exports=function(e,l){if("string"!==typeof e)throw new TypeError("First argument must be a string");if(!e)return[];l=l||{};var d=1,h=1;function p(e){var t=e.match(n);t&&(d+=t.length);var o=e.lastIndexOf("\n");h=~o?e.length-o:h+e.length}function f(){var e={line:d,column:h};return function(t){return t.position=new m(e),v(),t}}function m(e){this.start=e,this.end={line:d,column:h},this.source=l.source}m.prototype.content=e;var y=[];function g(t){var n=new Error(l.source+":"+d+":"+h+": "+t);if(n.reason=t,n.filename=l.source,n.line=d,n.column=h,n.source=e,!l.silent)throw n;y.push(n)}function b(t){var n=t.exec(e);if(n){var o=n[0];return p(o),e=e.slice(o.length),n}}function v(){b(o)}function w(e){var t;for(e=e||[];t=k();)!1!==t&&e.push(t);return e}function k(){var t=f();if("/"==e.charAt(0)&&"*"==e.charAt(1)){for(var n=2;u!=e.charAt(n)&&("*"!=e.charAt(n)||"/"!=e.charAt(n+1));)++n;if(n+=2,u===e.charAt(n-1))return g("End of comment missing");var o=e.slice(2,n-2);return h+=2,p(o),e=e.slice(n),h+=2,t({type:"comment",comment:o})}}function x(){var e=f(),n=b(a);if(n){if(k(),!b(r))return g("property missing ':'");var o=b(i),l=e({type:"declaration",property:c(n[0].replace(t,u)),value:o?c(o[0].replace(t,u)):u});return b(s),l}}return v(),function(){var e,t=[];for(w(t);e=x();)!1!==e&&(t.push(e),w(t));return t}()}},888:function(e,t,n){"use strict";var o=n(47);function a(){}function r(){}r.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,r,i){if(i!==o){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:r,resetWarningCache:a};return n.PropTypes=n,n}},7:function(e,t,n){e.exports=n(888)()},47:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},553:function(e,t,n){var o;e.exports=(o=n(791),function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){e.exports=n(2)()},function(e,t){e.exports=o},function(e,t,n){"use strict";var o=n(3);function a(){}function r(){}r.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,r,i){if(i!==o){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:r,resetWarningCache:a};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";n.r(t);var o=n(1),a=n.n(o),r=n(0),i=n.n(r),s=function(e){return 0!==e};function l(){return(l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function d(e,t){return(d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,o=m(e);if(t){var a=m(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return p(this,n)}}function p(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return f(e)}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(i,e);var t,n,o,r=h(i);function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),y(f(t=r.call(this,e)),"continueOpenCollapsible",(function(){var e=f(t).innerRef;t.setState({height:e.scrollHeight,transition:"height ".concat(t.props.transitionTime,"ms ").concat(t.props.easing),isClosed:!1,hasBeenOpened:!0,inTransition:s(e.scrollHeight),shouldOpenOnNextCycle:!1})})),y(f(t),"handleTriggerClick",(function(e){t.props.triggerDisabled||t.state.inTransition||(e.preventDefault(),t.props.handleTriggerClick?t.props.handleTriggerClick(t.props.accordionPosition):!0===t.state.isClosed?(t.openCollapsible(),t.props.onOpening(),t.props.onTriggerOpening()):(t.closeCollapsible(),t.props.onClosing(),t.props.onTriggerClosing()))})),y(f(t),"handleTransitionEnd",(function(e){e.target===t.innerRef&&(t.state.isClosed?(t.setState({inTransition:!1}),t.props.onClose()):(t.setState({height:"auto",overflow:t.props.overflowWhenOpen,inTransition:!1}),t.props.onOpen()))})),y(f(t),"setInnerRef",(function(e){return t.innerRef=e})),t.timeout=void 0,t.contentId=e.contentElementId||"collapsible-content-".concat(Date.now()),t.triggerId=e.triggerElementProps.id||"collapsible-trigger-".concat(Date.now()),e.open?t.state={isClosed:!1,shouldSwitchAutoOnNextCycle:!1,height:"auto",transition:"none",hasBeenOpened:!0,overflow:e.overflowWhenOpen,inTransition:!1}:t.state={isClosed:!0,shouldSwitchAutoOnNextCycle:!1,height:0,transition:"height ".concat(e.transitionTime,"ms ").concat(e.easing),hasBeenOpened:!1,overflow:"hidden",inTransition:!1},t}return t=i,(n=[{key:"componentDidUpdate",value:function(e,t){var n=this;this.state.shouldOpenOnNextCycle&&this.continueOpenCollapsible(),"auto"!==t.height&&0!==t.height||!0!==this.state.shouldSwitchAutoOnNextCycle||(window.clearTimeout(this.timeout),this.timeout=window.setTimeout((function(){n.setState({height:0,overflow:"hidden",isClosed:!0,shouldSwitchAutoOnNextCycle:!1})}),50)),e.open!==this.props.open&&(!0===this.props.open?(this.openCollapsible(),this.props.onOpening()):(this.closeCollapsible(),this.props.onClosing()))}},{key:"componentWillUnmount",value:function(){window.clearTimeout(this.timeout)}},{key:"closeCollapsible",value:function(){var e=this.innerRef;this.setState({shouldSwitchAutoOnNextCycle:!0,height:e.scrollHeight,transition:"height ".concat(this.props.transitionCloseTime?this.props.transitionCloseTime:this.props.transitionTime,"ms ").concat(this.props.easing),inTransition:s(e.scrollHeight)})}},{key:"openCollapsible",value:function(){this.setState({inTransition:s(this.innerRef.scrollHeight),shouldOpenOnNextCycle:!0})}},{key:"renderNonClickableTriggerElement",value:function(){var e=this.props,t=e.triggerSibling,n=e.classParentString;if(!t)return null;switch(u(t)){case"string":return a.a.createElement("span",{className:"".concat(n,"__trigger-sibling")},t);case"function":return t();case"object":return t;default:return null}}},{key:"render",value:function(){var e=this,t={height:this.state.height,WebkitTransition:this.state.transition,msTransition:this.state.transition,transition:this.state.transition,overflow:this.state.overflow},n=this.state.isClosed?"is-closed":"is-open",o=this.props.triggerDisabled?"is-disabled":"",r=!1===this.state.isClosed&&void 0!==this.props.triggerWhenOpen?this.props.triggerWhenOpen:this.props.trigger,i=this.props.contentContainerTagName,s=this.props.triggerTagName,u=this.props.lazyRender&&!this.state.hasBeenOpened&&this.state.isClosed&&!this.state.inTransition?null:this.props.children,c=this.props,d=c.classParentString,h=c.contentOuterClassName,p=c.contentInnerClassName,f="".concat(d,"__trigger ").concat(n," ").concat(o," ").concat(this.state.isClosed?this.props.triggerClassName:this.props.triggerOpenedClassName),m="".concat(d," ").concat(this.state.isClosed?this.props.className:this.props.openedClassName),y="".concat(d,"__contentOuter ").concat(h),g="".concat(d,"__contentInner ").concat(p);return a.a.createElement(i,l({className:m.trim()},this.props.containerElementProps),a.a.createElement(s,l({id:this.triggerId,className:f.trim(),onClick:this.handleTriggerClick,style:this.props.triggerStyle&&this.props.triggerStyle,onKeyPress:function(t){var n=t.key;(" "===n&&"button"!==e.props.triggerTagName.toLowerCase()||"Enter"===n)&&e.handleTriggerClick(t)},tabIndex:this.props.tabIndex&&this.props.tabIndex,"aria-expanded":!this.state.isClosed,"aria-disabled":this.props.triggerDisabled,"aria-controls":this.contentId,role:"button"},this.props.triggerElementProps),r),this.renderNonClickableTriggerElement(),a.a.createElement("div",{id:this.contentId,className:y.trim(),style:t,onTransitionEnd:this.handleTransitionEnd,ref:this.setInnerRef,hidden:this.props.contentHiddenWhenClosed&&this.state.isClosed&&!this.state.inTransition,role:"region","aria-labelledby":this.triggerId},a.a.createElement("div",{className:g.trim()},u)))}}])&&c(t.prototype,n),o&&c(t,o),Object.defineProperty(t,"prototype",{writable:!1}),i}(o.Component);g.propTypes={transitionTime:i.a.number,transitionCloseTime:i.a.number,triggerTagName:i.a.string,easing:i.a.string,open:i.a.bool,containerElementProps:i.a.object,triggerElementProps:i.a.object,contentElementId:i.a.string,classParentString:i.a.string,className:i.a.string,openedClassName:i.a.string,triggerStyle:i.a.object,triggerClassName:i.a.string,triggerOpenedClassName:i.a.string,contentOuterClassName:i.a.string,contentInnerClassName:i.a.string,accordionPosition:i.a.oneOfType([i.a.string,i.a.number]),handleTriggerClick:i.a.func,onOpen:i.a.func,onClose:i.a.func,onOpening:i.a.func,onClosing:i.a.func,onTriggerOpening:i.a.func,onTriggerClosing:i.a.func,trigger:i.a.oneOfType([i.a.string,i.a.element]),triggerWhenOpen:i.a.oneOfType([i.a.string,i.a.element]),triggerDisabled:i.a.bool,lazyRender:i.a.bool,overflowWhenOpen:i.a.oneOf(["hidden","visible","auto","scroll","inherit","initial","unset"]),contentHiddenWhenClosed:i.a.bool,triggerSibling:i.a.oneOfType([i.a.string,i.a.element,i.a.func]),tabIndex:i.a.number,contentContainerTagName:i.a.string,children:i.a.oneOfType([i.a.string,i.a.element])},g.defaultProps={transitionTime:400,transitionCloseTime:null,triggerTagName:"span",easing:"linear",open:!1,classParentString:"Collapsible",triggerDisabled:!1,lazyRender:!1,overflowWhenOpen:"hidden",contentHiddenWhenClosed:!1,openedClassName:"",triggerStyle:null,triggerClassName:"",triggerOpenedClassName:"",contentOuterClassName:"",contentInnerClassName:"",className:"",triggerSibling:null,onOpen:function(){},onClose:function(){},onOpening:function(){},onClosing:function(){},onTriggerOpening:function(){},onTriggerClosing:function(){},tabIndex:null,contentContainerTagName:"div",triggerElementProps:{}},t.default=g}]))},463:function(e,t,n){"use strict";var o=n(791),a=n(296);function r(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(s[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,o,a,r,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=o,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=r,this.removeEmptyString=i}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,o){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0!==a.type:o||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,o){if(null===t||"undefined"===typeof t||function(e,t,n,o){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!o&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,o))return!0;if(o)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,o)&&(n=null),o||null===a?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,o=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,o?e.setAttributeNS(o,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=Symbol.for("react.element"),x=Symbol.for("react.portal"),T=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),S=Symbol.for("react.profiler"),j=Symbol.for("react.provider"),P=Symbol.for("react.context"),R=Symbol.for("react.forward_ref"),O=Symbol.for("react.suspense"),I=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),_=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var A=Symbol.iterator;function N(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=A&&e[A]||e["@@iterator"])?e:null}var L,z=Object.assign;function M(e){if(void 0===L)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);L=t&&t[1]||""}return"\n"+L+e}var F=!1;function W(e,t){if(!e||F)return"";F=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var o=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){o=u}e.call(t.prototype)}else{try{throw Error()}catch(u){o=u}e()}}catch(u){if(u&&o&&"string"===typeof u.stack){for(var a=u.stack.split("\n"),r=o.stack.split("\n"),i=a.length-1,s=r.length-1;1<=i&&0<=s&&a[i]!==r[s];)s--;for(;1<=i&&0<=s;i--,s--)if(a[i]!==r[s]){if(1!==i||1!==s)do{if(i--,0>--s||a[i]!==r[s]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=s);break}}}finally{F=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?M(e):""}function B(e){switch(e.tag){case 5:return M(e.type);case 16:return M("Lazy");case 13:return M("Suspense");case 19:return M("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case T:return"Fragment";case x:return"Portal";case S:return"Profiler";case C:return"StrictMode";case O:return"Suspense";case I:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case j:return(e._context.displayName||"Context")+".Provider";case R:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case E:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case _:t=e._payload,e=e._init;try{return H(e(t))}catch(n){}}return null}function Y(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function X(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function U(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function V(e){e._valueTracker||(e._valueTracker=function(e){var t=U(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),o=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,r=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){o=""+e,r.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return o},setValue:function(e){o=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),o="";return e&&(o=U(e)?e.checked?"true":"false":e.value),(e=o)!==n&&(t.setValue(e),!0)}function G(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function $(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function J(e,t){var n=null==t.defaultValue?"":t.defaultValue,o=null!=t.checked?t.checked:t.defaultChecked;n=X(null!=t.value?t.value:n),e._wrapperState={initialChecked:o,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function K(e,t){Q(e,t);var n=X(t.value),o=t.type;if(null!=n)"number"===o?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===o||"reset"===o)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,X(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var o=t.type;if(!("submit"!==o&&"reset"!==o||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,o){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&o&&(e[n].defaultSelected=!0)}else{for(n=""+X(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(o&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(r(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(r(92));if(te(n)){if(1<n.length)throw Error(r(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:X(n)}}function re(e,t){var n=X(t.value),o=X(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=o&&(e.defaultValue=""+o)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?se(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,o){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ye(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var o=0===n.indexOf("--"),a=me(n,t[n],o);"float"===n&&(n="cssFloat"),o?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ge=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ge[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(r(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(r(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(r(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(r(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var xe=null,Te=null,Ce=null;function Se(e){if(e=wa(e)){if("function"!==typeof xe)throw Error(r(280));var t=e.stateNode;t&&(t=xa(t),xe(e.stateNode,e.type,t))}}function je(e){Te?Ce?Ce.push(e):Ce=[e]:Te=e}function Pe(){if(Te){var e=Te,t=Ce;if(Ce=Te=null,Se(e),t)for(e=0;e<t.length;e++)Se(t[e])}}function Re(e,t){return e(t)}function Oe(){}var Ie=!1;function Ee(e,t,n){if(Ie)return e(t,n);Ie=!0;try{return Re(e,t,n)}finally{Ie=!1,(null!==Te||null!==Ce)&&(Oe(),Pe())}}function _e(e,t){var n=e.stateNode;if(null===n)return null;var o=xa(n);if(null===o)return null;n=o[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(o=!o.disabled)||(o=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!o;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(r(231,t,typeof n));return n}var De=!1;if(c)try{var Ae={};Object.defineProperty(Ae,"passive",{get:function(){De=!0}}),window.addEventListener("test",Ae,Ae),window.removeEventListener("test",Ae,Ae)}catch(ce){De=!1}function Ne(e,t,n,o,a,r,i,s,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Le=!1,ze=null,Me=!1,Fe=null,We={onError:function(e){Le=!0,ze=e}};function Be(e,t,n,o,a,r,i,s,l){Le=!1,ze=null,Ne.apply(We,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Xe(e){if(He(e)!==e)throw Error(r(188))}function Ue(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(r(188));return t!==e?null:e}for(var n=e,o=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(o=a.return)){n=o;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Xe(a),e;if(i===o)return Xe(a),t;i=i.sibling}throw Error(r(188))}if(n.return!==o.return)n=a,o=i;else{for(var s=!1,l=a.child;l;){if(l===n){s=!0,n=a,o=i;break}if(l===o){s=!0,o=a,n=i;break}l=l.sibling}if(!s){for(l=i.child;l;){if(l===n){s=!0,n=i,o=a;break}if(l===o){s=!0,o=i,n=a;break}l=l.sibling}if(!s)throw Error(r(189))}}if(n.alternate!==o)throw Error(r(190))}if(3!==n.tag)throw Error(r(188));return n.stateNode.current===n?e:t}(e))?Ve(e):null}function Ve(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ve(e);if(null!==t)return t;e=e.sibling}return null}var qe=a.unstable_scheduleCallback,Ge=a.unstable_cancelCallback,$e=a.unstable_shouldYield,Je=a.unstable_requestPaint,Qe=a.unstable_now,Ke=a.unstable_getCurrentPriorityLevel,Ze=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,ot=a.unstable_IdlePriority,at=null,rt=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(st(e)/lt|0)|0},st=Math.log,lt=Math.LN2;var ut=64,ct=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var o=0,a=e.suspendedLanes,r=e.pingedLanes,i=268435455&n;if(0!==i){var s=i&~a;0!==s?o=dt(s):0!==(r&=i)&&(o=dt(r))}else 0!==(i=n&~a)?o=dt(i):0!==r&&(o=dt(r));if(0===o)return 0;if(0!==t&&t!==o&&0===(t&a)&&((a=o&-o)>=(r=t&-t)||16===a&&0!==(4194240&r)))return t;if(0!==(4&o)&&(o|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=o;0<t;)a=1<<(n=31-it(t)),o|=e[n],t&=~a;return o}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function yt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function gt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var o=31-it(n),a=1<<o;a&t|e[o]&t&&(e[o]|=t),n&=~a}}var vt=0;function wt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var kt,xt,Tt,Ct,St,jt=!1,Pt=[],Rt=null,Ot=null,It=null,Et=new Map,_t=new Map,Dt=[],At="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Nt(e,t){switch(e){case"focusin":case"focusout":Rt=null;break;case"dragenter":case"dragleave":Ot=null;break;case"mouseover":case"mouseout":It=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":_t.delete(t.pointerId)}}function Lt(e,t,n,o,a,r){return null===e||e.nativeEvent!==r?(e={blockedOn:t,domEventName:n,eventSystemFlags:o,nativeEvent:r,targetContainers:[a]},null!==t&&(null!==(t=wa(t))&&xt(t)),e):(e.eventSystemFlags|=o,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function zt(e){var t=va(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void St(e.priority,(function(){Tt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=wa(n))&&xt(t),e.blockedOn=n,!1;var o=new(n=e.nativeEvent).constructor(n.type,n);we=o,n.target.dispatchEvent(o),we=null,t.shift()}return!0}function Ft(e,t,n){Mt(e)&&n.delete(t)}function Wt(){jt=!1,null!==Rt&&Mt(Rt)&&(Rt=null),null!==Ot&&Mt(Ot)&&(Ot=null),null!==It&&Mt(It)&&(It=null),Et.forEach(Ft),_t.forEach(Ft)}function Bt(e,t){e.blockedOn===t&&(e.blockedOn=null,jt||(jt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Wt)))}function Ht(e){function t(t){return Bt(t,e)}if(0<Pt.length){Bt(Pt[0],e);for(var n=1;n<Pt.length;n++){var o=Pt[n];o.blockedOn===e&&(o.blockedOn=null)}}for(null!==Rt&&Bt(Rt,e),null!==Ot&&Bt(Ot,e),null!==It&&Bt(It,e),Et.forEach(t),_t.forEach(t),n=0;n<Dt.length;n++)(o=Dt[n]).blockedOn===e&&(o.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)zt(n),null===n.blockedOn&&Dt.shift()}var Yt=w.ReactCurrentBatchConfig,Xt=!0;function Ut(e,t,n,o){var a=vt,r=Yt.transition;Yt.transition=null;try{vt=1,qt(e,t,n,o)}finally{vt=a,Yt.transition=r}}function Vt(e,t,n,o){var a=vt,r=Yt.transition;Yt.transition=null;try{vt=4,qt(e,t,n,o)}finally{vt=a,Yt.transition=r}}function qt(e,t,n,o){if(Xt){var a=$t(e,t,n,o);if(null===a)Uo(e,t,o,Gt,n),Nt(e,o);else if(function(e,t,n,o,a){switch(t){case"focusin":return Rt=Lt(Rt,e,t,n,o,a),!0;case"dragenter":return Ot=Lt(Ot,e,t,n,o,a),!0;case"mouseover":return It=Lt(It,e,t,n,o,a),!0;case"pointerover":var r=a.pointerId;return Et.set(r,Lt(Et.get(r)||null,e,t,n,o,a)),!0;case"gotpointercapture":return r=a.pointerId,_t.set(r,Lt(_t.get(r)||null,e,t,n,o,a)),!0}return!1}(a,e,t,n,o))o.stopPropagation();else if(Nt(e,o),4&t&&-1<At.indexOf(e)){for(;null!==a;){var r=wa(a);if(null!==r&&kt(r),null===(r=$t(e,t,n,o))&&Uo(e,t,o,Gt,n),r===a)break;a=r}null!==a&&o.stopPropagation()}else Uo(e,t,o,null,n)}}var Gt=null;function $t(e,t,n,o){if(Gt=null,null!==(e=va(e=ke(o))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ye(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Gt=e,null}function Jt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ke()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case ot:return 536870912;default:return 16}default:return 16}}var Qt=null,Kt=null,Zt=null;function en(){if(Zt)return Zt;var e,t,n=Kt,o=n.length,a="value"in Qt?Qt.value:Qt.textContent,r=a.length;for(e=0;e<o&&n[e]===a[e];e++);var i=o-e;for(t=1;t<=i&&n[o-t]===a[r-t];t++);return Zt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function on(){return!1}function an(e){function t(t,n,o,a,r){for(var i in this._reactName=t,this._targetInst=o,this.type=n,this.nativeEvent=a,this.target=r,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:on,this.isPropagationStopped=on,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var rn,sn,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(un),dn=z({},un,{view:0,detail:0}),hn=an(dn),pn=z({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(rn=e.screenX-ln.screenX,sn=e.screenY-ln.screenY):sn=rn=0,ln=e),rn)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),fn=an(pn),mn=an(z({},pn,{dataTransfer:0})),yn=an(z({},dn,{relatedTarget:0})),gn=an(z({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=an(bn),wn=an(z({},un,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Tn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Tn[e])&&!!t[e]}function Sn(){return Cn}var jn=z({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Pn=an(jn),Rn=an(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=an(z({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),In=an(z({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),En=z({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),_n=an(En),Dn=[9,13,27,32],An=c&&"CompositionEvent"in window,Nn=null;c&&"documentMode"in document&&(Nn=document.documentMode);var Ln=c&&"TextEvent"in window&&!Nn,zn=c&&(!An||Nn&&8<Nn&&11>=Nn),Mn=String.fromCharCode(32),Fn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1;var Yn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Xn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Yn[e.type]:"textarea"===t}function Un(e,t,n,o){je(o),0<(t=qo(t,"onChange")).length&&(n=new cn("onChange","change",null,n,o),e.push({event:n,listeners:t}))}var Vn=null,qn=null;function Gn(e){Fo(e,0)}function $n(e){if(q(ka(e)))return e}function Jn(e,t){if("change"===e)return t}var Qn=!1;if(c){var Kn;if(c){var Zn="oninput"in document;if(!Zn){var eo=document.createElement("div");eo.setAttribute("oninput","return;"),Zn="function"===typeof eo.oninput}Kn=Zn}else Kn=!1;Qn=Kn&&(!document.documentMode||9<document.documentMode)}function to(){Vn&&(Vn.detachEvent("onpropertychange",no),qn=Vn=null)}function no(e){if("value"===e.propertyName&&$n(qn)){var t=[];Un(t,qn,e,ke(e)),Ee(Gn,t)}}function oo(e,t,n){"focusin"===e?(to(),qn=n,(Vn=t).attachEvent("onpropertychange",no)):"focusout"===e&&to()}function ao(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return $n(qn)}function ro(e,t){if("click"===e)return $n(t)}function io(e,t){if("input"===e||"change"===e)return $n(t)}var so="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function lo(e,t){if(so(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(o=0;o<n.length;o++){var a=n[o];if(!d.call(t,a)||!so(e[a],t[a]))return!1}return!0}function uo(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function co(e,t){var n,o=uo(e);for(e=0;o;){if(3===o.nodeType){if(n=e+o.textContent.length,e<=t&&n>=t)return{node:o,offset:t-e};e=n}e:{for(;o;){if(o.nextSibling){o=o.nextSibling;break e}o=o.parentNode}o=void 0}o=uo(o)}}function ho(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ho(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function po(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(o){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function fo(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function mo(e){var t=po(),n=e.focusedElem,o=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ho(n.ownerDocument.documentElement,n)){if(null!==o&&fo(n))if(t=o.start,void 0===(e=o.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,r=Math.min(o.start,a);o=void 0===o.end?r:Math.min(o.end,a),!e.extend&&r>o&&(a=o,o=r,r=a),a=co(n,r);var i=co(n,o);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),r>o?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var yo=c&&"documentMode"in document&&11>=document.documentMode,go=null,bo=null,vo=null,wo=!1;function ko(e,t,n){var o=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;wo||null==go||go!==G(o)||("selectionStart"in(o=go)&&fo(o)?o={start:o.selectionStart,end:o.selectionEnd}:o={anchorNode:(o=(o.ownerDocument&&o.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:o.anchorOffset,focusNode:o.focusNode,focusOffset:o.focusOffset},vo&&lo(vo,o)||(vo=o,0<(o=qo(bo,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:o}),t.target=go)))}function xo(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var To={animationend:xo("Animation","AnimationEnd"),animationiteration:xo("Animation","AnimationIteration"),animationstart:xo("Animation","AnimationStart"),transitionend:xo("Transition","TransitionEnd")},Co={},So={};function jo(e){if(Co[e])return Co[e];if(!To[e])return e;var t,n=To[e];for(t in n)if(n.hasOwnProperty(t)&&t in So)return Co[e]=n[t];return e}c&&(So=document.createElement("div").style,"AnimationEvent"in window||(delete To.animationend.animation,delete To.animationiteration.animation,delete To.animationstart.animation),"TransitionEvent"in window||delete To.transitionend.transition);var Po=jo("animationend"),Ro=jo("animationiteration"),Oo=jo("animationstart"),Io=jo("transitionend"),Eo=new Map,_o="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Do(e,t){Eo.set(e,t),l(t,[e])}for(var Ao=0;Ao<_o.length;Ao++){var No=_o[Ao];Do(No.toLowerCase(),"on"+(No[0].toUpperCase()+No.slice(1)))}Do(Po,"onAnimationEnd"),Do(Ro,"onAnimationIteration"),Do(Oo,"onAnimationStart"),Do("dblclick","onDoubleClick"),Do("focusin","onFocus"),Do("focusout","onBlur"),Do(Io,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Lo="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),zo=new Set("cancel close invalid load scroll toggle".split(" ").concat(Lo));function Mo(e,t,n){var o=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,o,a,i,s,l,u){if(Be.apply(this,arguments),Le){if(!Le)throw Error(r(198));var c=ze;Le=!1,ze=null,Me||(Me=!0,Fe=c)}}(o,t,void 0,e),e.currentTarget=null}function Fo(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var o=e[n],a=o.event;o=o.listeners;e:{var r=void 0;if(t)for(var i=o.length-1;0<=i;i--){var s=o[i],l=s.instance,u=s.currentTarget;if(s=s.listener,l!==r&&a.isPropagationStopped())break e;Mo(a,s,u),r=l}else for(i=0;i<o.length;i++){if(l=(s=o[i]).instance,u=s.currentTarget,s=s.listener,l!==r&&a.isPropagationStopped())break e;Mo(a,s,u),r=l}}}if(Me)throw e=Fe,Me=!1,Fe=null,e}function Wo(e,t){var n=t[ya];void 0===n&&(n=t[ya]=new Set);var o=e+"__bubble";n.has(o)||(Xo(t,e,2,!1),n.add(o))}function Bo(e,t,n){var o=0;t&&(o|=4),Xo(n,e,o,t)}var Ho="_reactListening"+Math.random().toString(36).slice(2);function Yo(e){if(!e[Ho]){e[Ho]=!0,i.forEach((function(t){"selectionchange"!==t&&(zo.has(t)||Bo(t,!1,e),Bo(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ho]||(t[Ho]=!0,Bo("selectionchange",!1,t))}}function Xo(e,t,n,o){switch(Jt(t)){case 1:var a=Ut;break;case 4:a=Vt;break;default:a=qt}n=a.bind(null,t,n,e),a=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),o?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Uo(e,t,n,o,a){var r=o;if(0===(1&t)&&0===(2&t)&&null!==o)e:for(;;){if(null===o)return;var i=o.tag;if(3===i||4===i){var s=o.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===i)for(i=o.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==s;){if(null===(i=va(s)))return;if(5===(l=i.tag)||6===l){o=r=i;continue e}s=s.parentNode}}o=o.return}Ee((function(){var o=r,a=ke(n),i=[];e:{var s=Eo.get(e);if(void 0!==s){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=Pn;break;case"focusin":u="focus",l=yn;break;case"focusout":u="blur",l=yn;break;case"beforeblur":case"afterblur":l=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=On;break;case Po:case Ro:case Oo:l=gn;break;case Io:l=In;break;case"scroll":l=hn;break;case"wheel":l=_n;break;case"copy":case"cut":case"paste":l=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Rn}var c=0!==(4&t),d=!c&&"scroll"===e,h=c?null!==s?s+"Capture":null:s;c=[];for(var p,f=o;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==h&&(null!=(m=_e(f,h))&&c.push(Vo(f,m,p)))),d)break;f=f.return}0<c.length&&(s=new l(s,u,null,n,a),i.push({event:s,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||n===we||!(u=n.relatedTarget||n.fromElement)||!va(u)&&!u[ma])&&(l||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=o,null!==(u=(u=n.relatedTarget||n.toElement)?va(u):null)&&(u!==(d=He(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=o),l!==u)){if(c=fn,m="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=Rn,m="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==l?s:ka(l),p=null==u?s:ka(u),(s=new c(m,f+"leave",l,n,a)).target=d,s.relatedTarget=p,m=null,va(a)===o&&((c=new c(h,f+"enter",u,n,a)).target=p,c.relatedTarget=d,m=c),d=m,l&&u)e:{for(h=u,f=0,p=c=l;p;p=Go(p))f++;for(p=0,m=h;m;m=Go(m))p++;for(;0<f-p;)c=Go(c),f--;for(;0<p-f;)h=Go(h),p--;for(;f--;){if(c===h||null!==h&&c===h.alternate)break e;c=Go(c),h=Go(h)}c=null}else c=null;null!==l&&$o(i,s,l,c,!1),null!==u&&null!==d&&$o(i,d,u,c,!0)}if("select"===(l=(s=o?ka(o):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var y=Jn;else if(Xn(s))if(Qn)y=io;else{y=ao;var g=oo}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(y=ro);switch(y&&(y=y(e,o))?Un(i,y,n,a):(g&&g(e,s,o),"focusout"===e&&(g=s._wrapperState)&&g.controlled&&"number"===s.type&&ee(s,"number",s.value)),g=o?ka(o):window,e){case"focusin":(Xn(g)||"true"===g.contentEditable)&&(go=g,bo=o,vo=null);break;case"focusout":vo=bo=go=null;break;case"mousedown":wo=!0;break;case"contextmenu":case"mouseup":case"dragend":wo=!1,ko(i,n,a);break;case"selectionchange":if(yo)break;case"keydown":case"keyup":ko(i,n,a)}var b;if(An)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Hn?Wn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(zn&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Hn&&(b=en()):(Kt="value"in(Qt=a)?Qt.value:Qt.textContent,Hn=!0)),0<(g=qo(o,v)).length&&(v=new wn(v,e,null,n,a),i.push({event:v,listeners:g}),b?v.data=b:null!==(b=Bn(n))&&(v.data=b))),(b=Ln?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(Fn=!0,Mn);case"textInput":return(e=t.data)===Mn&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!An&&Wn(e,t)?(e=en(),Zt=Kt=Qt=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(o=qo(o,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:o}),a.data=b))}Fo(i,t)}))}function Vo(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qo(e,t){for(var n=t+"Capture",o=[];null!==e;){var a=e,r=a.stateNode;5===a.tag&&null!==r&&(a=r,null!=(r=_e(e,n))&&o.unshift(Vo(e,r,a)),null!=(r=_e(e,t))&&o.push(Vo(e,r,a))),e=e.return}return o}function Go(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function $o(e,t,n,o,a){for(var r=t._reactName,i=[];null!==n&&n!==o;){var s=n,l=s.alternate,u=s.stateNode;if(null!==l&&l===o)break;5===s.tag&&null!==u&&(s=u,a?null!=(l=_e(n,r))&&i.unshift(Vo(n,l,s)):a||null!=(l=_e(n,r))&&i.push(Vo(n,l,s))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Jo=/\r\n?/g,Qo=/\u0000|\uFFFD/g;function Ko(e){return("string"===typeof e?e:""+e).replace(Jo,"\n").replace(Qo,"")}function Zo(e,t,n){if(t=Ko(t),Ko(e)!==t&&n)throw Error(r(425))}function ea(){}var ta=null,na=null;function oa(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var aa="function"===typeof setTimeout?setTimeout:void 0,ra="function"===typeof clearTimeout?clearTimeout:void 0,ia="function"===typeof Promise?Promise:void 0,sa="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ia?function(e){return ia.resolve(null).then(e).catch(la)}:aa;function la(e){setTimeout((function(){throw e}))}function ua(e,t){var n=t,o=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===o)return e.removeChild(a),void Ht(t);o--}else"$"!==n&&"$?"!==n&&"$!"!==n||o++;n=a}while(n);Ht(t)}function ca(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function da(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ha=Math.random().toString(36).slice(2),pa="__reactFiber$"+ha,fa="__reactProps$"+ha,ma="__reactContainer$"+ha,ya="__reactEvents$"+ha,ga="__reactListeners$"+ha,ba="__reactHandles$"+ha;function va(e){var t=e[pa];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ma]||n[pa]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=da(e);null!==e;){if(n=e[pa])return n;e=da(e)}return t}n=(e=n).parentNode}return null}function wa(e){return!(e=e[pa]||e[ma])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ka(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(r(33))}function xa(e){return e[fa]||null}var Ta=[],Ca=-1;function Sa(e){return{current:e}}function ja(e){0>Ca||(e.current=Ta[Ca],Ta[Ca]=null,Ca--)}function Pa(e,t){Ca++,Ta[Ca]=e.current,e.current=t}var Ra={},Oa=Sa(Ra),Ia=Sa(!1),Ea=Ra;function _a(e,t){var n=e.type.contextTypes;if(!n)return Ra;var o=e.stateNode;if(o&&o.__reactInternalMemoizedUnmaskedChildContext===t)return o.__reactInternalMemoizedMaskedChildContext;var a,r={};for(a in n)r[a]=t[a];return o&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=r),r}function Da(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Aa(){ja(Ia),ja(Oa)}function Na(e,t,n){if(Oa.current!==Ra)throw Error(r(168));Pa(Oa,t),Pa(Ia,n)}function La(e,t,n){var o=e.stateNode;if(t=t.childContextTypes,"function"!==typeof o.getChildContext)return n;for(var a in o=o.getChildContext())if(!(a in t))throw Error(r(108,Y(e)||"Unknown",a));return z({},n,o)}function za(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ra,Ea=Oa.current,Pa(Oa,e),Pa(Ia,Ia.current),!0}function Ma(e,t,n){var o=e.stateNode;if(!o)throw Error(r(169));n?(e=La(e,t,Ea),o.__reactInternalMemoizedMergedChildContext=e,ja(Ia),ja(Oa),Pa(Oa,e)):ja(Ia),Pa(Ia,n)}var Fa=null,Wa=!1,Ba=!1;function Ha(e){null===Fa?Fa=[e]:Fa.push(e)}function Ya(){if(!Ba&&null!==Fa){Ba=!0;var e=0,t=vt;try{var n=Fa;for(vt=1;e<n.length;e++){var o=n[e];do{o=o(!0)}while(null!==o)}Fa=null,Wa=!1}catch(a){throw null!==Fa&&(Fa=Fa.slice(e+1)),qe(Ze,Ya),a}finally{vt=t,Ba=!1}}return null}var Xa=[],Ua=0,Va=null,qa=0,Ga=[],$a=0,Ja=null,Qa=1,Ka="";function Za(e,t){Xa[Ua++]=qa,Xa[Ua++]=Va,Va=e,qa=t}function er(e,t,n){Ga[$a++]=Qa,Ga[$a++]=Ka,Ga[$a++]=Ja,Ja=e;var o=Qa;e=Ka;var a=32-it(o)-1;o&=~(1<<a),n+=1;var r=32-it(t)+a;if(30<r){var i=a-a%5;r=(o&(1<<i)-1).toString(32),o>>=i,a-=i,Qa=1<<32-it(t)+a|n<<a|o,Ka=r+e}else Qa=1<<r|n<<a|o,Ka=e}function tr(e){null!==e.return&&(Za(e,1),er(e,1,0))}function nr(e){for(;e===Va;)Va=Xa[--Ua],Xa[Ua]=null,qa=Xa[--Ua],Xa[Ua]=null;for(;e===Ja;)Ja=Ga[--$a],Ga[$a]=null,Ka=Ga[--$a],Ga[$a]=null,Qa=Ga[--$a],Ga[$a]=null}var or=null,ar=null,rr=!1,ir=null;function sr(e,t){var n=_u(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function lr(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,or=e,ar=ca(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,or=e,ar=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ja?{id:Qa,overflow:Ka}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_u(18,null,null,0)).stateNode=t,n.return=e,e.child=n,or=e,ar=null,!0);default:return!1}}function ur(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function cr(e){if(rr){var t=ar;if(t){var n=t;if(!lr(e,t)){if(ur(e))throw Error(r(418));t=ca(n.nextSibling);var o=or;t&&lr(e,t)?sr(o,n):(e.flags=-4097&e.flags|2,rr=!1,or=e)}}else{if(ur(e))throw Error(r(418));e.flags=-4097&e.flags|2,rr=!1,or=e}}}function dr(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;or=e}function hr(e){if(e!==or)return!1;if(!rr)return dr(e),rr=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!oa(e.type,e.memoizedProps)),t&&(t=ar)){if(ur(e))throw pr(),Error(r(418));for(;t;)sr(e,t),t=ca(t.nextSibling)}if(dr(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(r(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ar=ca(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ar=null}}else ar=or?ca(e.stateNode.nextSibling):null;return!0}function pr(){for(var e=ar;e;)e=ca(e.nextSibling)}function fr(){ar=or=null,rr=!1}function mr(e){null===ir?ir=[e]:ir.push(e)}var yr=w.ReactCurrentBatchConfig;function gr(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var br=Sa(null),vr=null,wr=null,kr=null;function xr(){kr=wr=vr=null}function Tr(e){var t=br.current;ja(br),e._currentValue=t}function Cr(e,t,n){for(;null!==e;){var o=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==o&&(o.childLanes|=t)):null!==o&&(o.childLanes&t)!==t&&(o.childLanes|=t),e===n)break;e=e.return}}function Sr(e,t){vr=e,kr=wr=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(ws=!0),e.firstContext=null)}function jr(e){var t=e._currentValue;if(kr!==e)if(e={context:e,memoizedValue:t,next:null},null===wr){if(null===vr)throw Error(r(308));wr=e,vr.dependencies={lanes:0,firstContext:e}}else wr=wr.next=e;return t}var Pr=null;function Rr(e){null===Pr?Pr=[e]:Pr.push(e)}function Or(e,t,n,o){var a=t.interleaved;return null===a?(n.next=n,Rr(t)):(n.next=a.next,a.next=n),t.interleaved=n,Ir(e,o)}function Ir(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Er=!1;function _r(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Dr(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ar(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Nr(e,t,n){var o=e.updateQueue;if(null===o)return null;if(o=o.shared,0!==(2&Ol)){var a=o.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),o.pending=t,Ir(e,n)}return null===(a=o.interleaved)?(t.next=t,Rr(o)):(t.next=a.next,a.next=t),o.interleaved=t,Ir(e,n)}function Lr(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var o=t.lanes;n|=o&=e.pendingLanes,t.lanes=n,bt(e,n)}}function zr(e,t){var n=e.updateQueue,o=e.alternate;if(null!==o&&n===(o=o.updateQueue)){var a=null,r=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===r?a=r=i:r=r.next=i,n=n.next}while(null!==n);null===r?a=r=t:r=r.next=t}else a=r=t;return n={baseState:o.baseState,firstBaseUpdate:a,lastBaseUpdate:r,shared:o.shared,effects:o.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Mr(e,t,n,o){var a=e.updateQueue;Er=!1;var r=a.firstBaseUpdate,i=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var l=s,u=l.next;l.next=null,null===i?r=u:i.next=u,i=l;var c=e.alternate;null!==c&&((s=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===s?c.firstBaseUpdate=u:s.next=u,c.lastBaseUpdate=l))}if(null!==r){var d=a.baseState;for(i=0,c=u=l=null,s=r;;){var h=s.lane,p=s.eventTime;if((o&h)===h){null!==c&&(c=c.next={eventTime:p,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var f=e,m=s;switch(h=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(h="function"===typeof(f=m.payload)?f.call(p,d,h):f)||void 0===h)break e;d=z({},d,h);break e;case 2:Er=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(h=a.effects)?a.effects=[s]:h.push(s))}else p={eventTime:p,lane:h,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===c?(u=c=p,l=d):c=c.next=p,i|=h;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(h=s).next,h.next=null,a.lastBaseUpdate=h,a.shared.pending=null}}if(null===c&&(l=d),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===r&&(a.shared.lanes=0);zl|=i,e.lanes=i,e.memoizedState=d}}function Fr(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var o=e[t],a=o.callback;if(null!==a){if(o.callback=null,o=n,"function"!==typeof a)throw Error(r(191,a));a.call(o)}}}var Wr=(new o.Component).refs;function Br(e,t,n,o){n=null===(n=n(o,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Hr={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var o=tu(),a=nu(e),r=Ar(o,a);r.payload=t,void 0!==n&&null!==n&&(r.callback=n),null!==(t=Nr(e,r,a))&&(ou(t,e,a,o),Lr(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var o=tu(),a=nu(e),r=Ar(o,a);r.tag=1,r.payload=t,void 0!==n&&null!==n&&(r.callback=n),null!==(t=Nr(e,r,a))&&(ou(t,e,a,o),Lr(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tu(),o=nu(e),a=Ar(n,o);a.tag=2,void 0!==t&&null!==t&&(a.callback=t),null!==(t=Nr(e,a,o))&&(ou(t,e,o,n),Lr(t,e,o))}};function Yr(e,t,n,o,a,r,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(o,r,i):!t.prototype||!t.prototype.isPureReactComponent||(!lo(n,o)||!lo(a,r))}function Xr(e,t,n){var o=!1,a=Ra,r=t.contextType;return"object"===typeof r&&null!==r?r=jr(r):(a=Da(t)?Ea:Oa.current,r=(o=null!==(o=t.contextTypes)&&void 0!==o)?_a(e,a):Ra),t=new t(n,r),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Hr,e.stateNode=t,t._reactInternals=e,o&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=r),t}function Ur(e,t,n,o){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,o),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,o),t.state!==e&&Hr.enqueueReplaceState(t,t.state,null)}function Vr(e,t,n,o){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=Wr,_r(e);var r=t.contextType;"object"===typeof r&&null!==r?a.context=jr(r):(r=Da(t)?Ea:Oa.current,a.context=_a(e,r)),a.state=e.memoizedState,"function"===typeof(r=t.getDerivedStateFromProps)&&(Br(e,t,r,n),a.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(t=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Hr.enqueueReplaceState(a,a.state,null),Mr(e,n,a,o),a.state=e.memoizedState),"function"===typeof a.componentDidMount&&(e.flags|=4194308)}function qr(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(r(309));var o=n.stateNode}if(!o)throw Error(r(147,e));var a=o,i=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;t===Wr&&(t=a.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!==typeof e)throw Error(r(284));if(!n._owner)throw Error(r(290,e))}return e}function Gr(e,t){throw e=Object.prototype.toString.call(t),Error(r(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function $r(e){return(0,e._init)(e._payload)}function Jr(e){function t(t,n){if(e){var o=t.deletions;null===o?(t.deletions=[n],t.flags|=16):o.push(n)}}function n(n,o){if(!e)return null;for(;null!==o;)t(n,o),o=o.sibling;return null}function o(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Au(e,t)).index=0,e.sibling=null,e}function i(t,n,o){return t.index=o,e?null!==(o=t.alternate)?(o=o.index)<n?(t.flags|=2,n):o:(t.flags|=2,n):(t.flags|=1048576,n)}function s(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,o){return null===t||6!==t.tag?((t=Mu(n,e.mode,o)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,o){var r=n.type;return r===T?d(e,t,n.props.children,o,n.key):null!==t&&(t.elementType===r||"object"===typeof r&&null!==r&&r.$$typeof===_&&$r(r)===t.type)?((o=a(t,n.props)).ref=qr(e,t,n),o.return=e,o):((o=Nu(n.type,n.key,n.props,null,e.mode,o)).ref=qr(e,t,n),o.return=e,o)}function c(e,t,n,o){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Fu(n,e.mode,o)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,o,r){return null===t||7!==t.tag?((t=Lu(n,e.mode,o,r)).return=e,t):((t=a(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Mu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case k:return(n=Nu(t.type,t.key,t.props,null,e.mode,n)).ref=qr(e,null,t),n.return=e,n;case x:return(t=Fu(t,e.mode,n)).return=e,t;case _:return h(e,(0,t._init)(t._payload),n)}if(te(t)||N(t))return(t=Lu(t,e.mode,n,null)).return=e,t;Gr(e,t)}return null}function p(e,t,n,o){var a=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==a?null:l(e,t,""+n,o);if("object"===typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?u(e,t,n,o):null;case x:return n.key===a?c(e,t,n,o):null;case _:return p(e,t,(a=n._init)(n._payload),o)}if(te(n)||N(n))return null!==a?null:d(e,t,n,o,null);Gr(e,n)}return null}function f(e,t,n,o,a){if("string"===typeof o&&""!==o||"number"===typeof o)return l(t,e=e.get(n)||null,""+o,a);if("object"===typeof o&&null!==o){switch(o.$$typeof){case k:return u(t,e=e.get(null===o.key?n:o.key)||null,o,a);case x:return c(t,e=e.get(null===o.key?n:o.key)||null,o,a);case _:return f(e,t,n,(0,o._init)(o._payload),a)}if(te(o)||N(o))return d(t,e=e.get(n)||null,o,a,null);Gr(t,o)}return null}function m(a,r,s,l){for(var u=null,c=null,d=r,m=r=0,y=null;null!==d&&m<s.length;m++){d.index>m?(y=d,d=null):y=d.sibling;var g=p(a,d,s[m],l);if(null===g){null===d&&(d=y);break}e&&d&&null===g.alternate&&t(a,d),r=i(g,r,m),null===c?u=g:c.sibling=g,c=g,d=y}if(m===s.length)return n(a,d),rr&&Za(a,m),u;if(null===d){for(;m<s.length;m++)null!==(d=h(a,s[m],l))&&(r=i(d,r,m),null===c?u=d:c.sibling=d,c=d);return rr&&Za(a,m),u}for(d=o(a,d);m<s.length;m++)null!==(y=f(d,a,m,s[m],l))&&(e&&null!==y.alternate&&d.delete(null===y.key?m:y.key),r=i(y,r,m),null===c?u=y:c.sibling=y,c=y);return e&&d.forEach((function(e){return t(a,e)})),rr&&Za(a,m),u}function y(a,s,l,u){var c=N(l);if("function"!==typeof c)throw Error(r(150));if(null==(l=c.call(l)))throw Error(r(151));for(var d=c=null,m=s,y=s=0,g=null,b=l.next();null!==m&&!b.done;y++,b=l.next()){m.index>y?(g=m,m=null):g=m.sibling;var v=p(a,m,b.value,u);if(null===v){null===m&&(m=g);break}e&&m&&null===v.alternate&&t(a,m),s=i(v,s,y),null===d?c=v:d.sibling=v,d=v,m=g}if(b.done)return n(a,m),rr&&Za(a,y),c;if(null===m){for(;!b.done;y++,b=l.next())null!==(b=h(a,b.value,u))&&(s=i(b,s,y),null===d?c=b:d.sibling=b,d=b);return rr&&Za(a,y),c}for(m=o(a,m);!b.done;y++,b=l.next())null!==(b=f(m,a,y,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?y:b.key),s=i(b,s,y),null===d?c=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(a,e)})),rr&&Za(a,y),c}return function e(o,r,i,l){if("object"===typeof i&&null!==i&&i.type===T&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case k:e:{for(var u=i.key,c=r;null!==c;){if(c.key===u){if((u=i.type)===T){if(7===c.tag){n(o,c.sibling),(r=a(c,i.props.children)).return=o,o=r;break e}}else if(c.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===_&&$r(u)===c.type){n(o,c.sibling),(r=a(c,i.props)).ref=qr(o,c,i),r.return=o,o=r;break e}n(o,c);break}t(o,c),c=c.sibling}i.type===T?((r=Lu(i.props.children,o.mode,l,i.key)).return=o,o=r):((l=Nu(i.type,i.key,i.props,null,o.mode,l)).ref=qr(o,r,i),l.return=o,o=l)}return s(o);case x:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(o,r.sibling),(r=a(r,i.children||[])).return=o,o=r;break e}n(o,r);break}t(o,r),r=r.sibling}(r=Fu(i,o.mode,l)).return=o,o=r}return s(o);case _:return e(o,r,(c=i._init)(i._payload),l)}if(te(i))return m(o,r,i,l);if(N(i))return y(o,r,i,l);Gr(o,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==r&&6===r.tag?(n(o,r.sibling),(r=a(r,i)).return=o,o=r):(n(o,r),(r=Mu(i,o.mode,l)).return=o,o=r),s(o)):n(o,r)}}var Qr=Jr(!0),Kr=Jr(!1),Zr={},ei=Sa(Zr),ti=Sa(Zr),ni=Sa(Zr);function oi(e){if(e===Zr)throw Error(r(174));return e}function ai(e,t){switch(Pa(ni,t),Pa(ti,e),Pa(ei,Zr),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ja(ei),Pa(ei,t)}function ri(){ja(ei),ja(ti),ja(ni)}function ii(e){oi(ni.current);var t=oi(ei.current),n=le(t,e.type);t!==n&&(Pa(ti,e),Pa(ei,n))}function si(e){ti.current===e&&(ja(ei),ja(ti))}var li=Sa(0);function ui(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ci=[];function di(){for(var e=0;e<ci.length;e++)ci[e]._workInProgressVersionPrimary=null;ci.length=0}var hi=w.ReactCurrentDispatcher,pi=w.ReactCurrentBatchConfig,fi=0,mi=null,yi=null,gi=null,bi=!1,vi=!1,wi=0,ki=0;function xi(){throw Error(r(321))}function Ti(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!so(e[n],t[n]))return!1;return!0}function Ci(e,t,n,o,a,i){if(fi=i,mi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,hi.current=null===e||null===e.memoizedState?ss:ls,e=n(o,a),vi){i=0;do{if(vi=!1,wi=0,25<=i)throw Error(r(301));i+=1,gi=yi=null,t.updateQueue=null,hi.current=us,e=n(o,a)}while(vi)}if(hi.current=is,t=null!==yi&&null!==yi.next,fi=0,gi=yi=mi=null,bi=!1,t)throw Error(r(300));return e}function Si(){var e=0!==wi;return wi=0,e}function ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===gi?mi.memoizedState=gi=e:gi=gi.next=e,gi}function Pi(){if(null===yi){var e=mi.alternate;e=null!==e?e.memoizedState:null}else e=yi.next;var t=null===gi?mi.memoizedState:gi.next;if(null!==t)gi=t,yi=e;else{if(null===e)throw Error(r(310));e={memoizedState:(yi=e).memoizedState,baseState:yi.baseState,baseQueue:yi.baseQueue,queue:yi.queue,next:null},null===gi?mi.memoizedState=gi=e:gi=gi.next=e}return gi}function Ri(e,t){return"function"===typeof t?t(e):t}function Oi(e){var t=Pi(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var o=yi,a=o.baseQueue,i=n.pending;if(null!==i){if(null!==a){var s=a.next;a.next=i.next,i.next=s}o.baseQueue=a=i,n.pending=null}if(null!==a){i=a.next,o=o.baseState;var l=s=null,u=null,c=i;do{var d=c.lane;if((fi&d)===d)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),o=c.hasEagerState?c.eagerState:e(o,c.action);else{var h={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=h,s=o):u=u.next=h,mi.lanes|=d,zl|=d}c=c.next}while(null!==c&&c!==i);null===u?s=o:u.next=l,so(o,t.memoizedState)||(ws=!0),t.memoizedState=o,t.baseState=s,t.baseQueue=u,n.lastRenderedState=o}if(null!==(e=n.interleaved)){a=e;do{i=a.lane,mi.lanes|=i,zl|=i,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ii(e){var t=Pi(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var o=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var s=a=a.next;do{i=e(i,s.action),s=s.next}while(s!==a);so(i,t.memoizedState)||(ws=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,o]}function Ei(){}function _i(e,t){var n=mi,o=Pi(),a=t(),i=!so(o.memoizedState,a);if(i&&(o.memoizedState=a,ws=!0),o=o.queue,Xi(Ni.bind(null,n,o,e),[e]),o.getSnapshot!==t||i||null!==gi&&1&gi.memoizedState.tag){if(n.flags|=2048,Fi(9,Ai.bind(null,n,o,a,t),void 0,null),null===Il)throw Error(r(349));0!==(30&fi)||Di(n,t,a)}return a}function Di(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=mi.updateQueue)?(t={lastEffect:null,stores:null},mi.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ai(e,t,n,o){t.value=n,t.getSnapshot=o,Li(t)&&zi(e)}function Ni(e,t,n){return n((function(){Li(t)&&zi(e)}))}function Li(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!so(e,n)}catch(o){return!0}}function zi(e){var t=Ir(e,1);null!==t&&ou(t,e,1,-1)}function Mi(e){var t=ji();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ri,lastRenderedState:e},t.queue=e,e=e.dispatch=ns.bind(null,mi,e),[t.memoizedState,e]}function Fi(e,t,n,o){return e={tag:e,create:t,destroy:n,deps:o,next:null},null===(t=mi.updateQueue)?(t={lastEffect:null,stores:null},mi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(o=n.next,n.next=e,e.next=o,t.lastEffect=e),e}function Wi(){return Pi().memoizedState}function Bi(e,t,n,o){var a=ji();mi.flags|=e,a.memoizedState=Fi(1|t,n,void 0,void 0===o?null:o)}function Hi(e,t,n,o){var a=Pi();o=void 0===o?null:o;var r=void 0;if(null!==yi){var i=yi.memoizedState;if(r=i.destroy,null!==o&&Ti(o,i.deps))return void(a.memoizedState=Fi(t,n,r,o))}mi.flags|=e,a.memoizedState=Fi(1|t,n,r,o)}function Yi(e,t){return Bi(8390656,8,e,t)}function Xi(e,t){return Hi(2048,8,e,t)}function Ui(e,t){return Hi(4,2,e,t)}function Vi(e,t){return Hi(4,4,e,t)}function qi(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Gi(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Hi(4,4,qi.bind(null,t,e),n)}function $i(){}function Ji(e,t){var n=Pi();t=void 0===t?null:t;var o=n.memoizedState;return null!==o&&null!==t&&Ti(t,o[1])?o[0]:(n.memoizedState=[e,t],e)}function Qi(e,t){var n=Pi();t=void 0===t?null:t;var o=n.memoizedState;return null!==o&&null!==t&&Ti(t,o[1])?o[0]:(e=e(),n.memoizedState=[e,t],e)}function Ki(e,t,n){return 0===(21&fi)?(e.baseState&&(e.baseState=!1,ws=!0),e.memoizedState=n):(so(n,t)||(n=mt(),mi.lanes|=n,zl|=n,e.baseState=!0),t)}function Zi(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var o=pi.transition;pi.transition={};try{e(!1),t()}finally{vt=n,pi.transition=o}}function es(){return Pi().memoizedState}function ts(e,t,n){var o=nu(e);if(n={lane:o,action:n,hasEagerState:!1,eagerState:null,next:null},os(e))as(t,n);else if(null!==(n=Or(e,t,n,o))){ou(n,e,o,tu()),rs(n,t,o)}}function ns(e,t,n){var o=nu(e),a={lane:o,action:n,hasEagerState:!1,eagerState:null,next:null};if(os(e))as(t,a);else{var r=e.alternate;if(0===e.lanes&&(null===r||0===r.lanes)&&null!==(r=t.lastRenderedReducer))try{var i=t.lastRenderedState,s=r(i,n);if(a.hasEagerState=!0,a.eagerState=s,so(s,i)){var l=t.interleaved;return null===l?(a.next=a,Rr(t)):(a.next=l.next,l.next=a),void(t.interleaved=a)}}catch(u){}null!==(n=Or(e,t,a,o))&&(ou(n,e,o,a=tu()),rs(n,t,o))}}function os(e){var t=e.alternate;return e===mi||null!==t&&t===mi}function as(e,t){vi=bi=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function rs(e,t,n){if(0!==(4194240&n)){var o=t.lanes;n|=o&=e.pendingLanes,t.lanes=n,bt(e,n)}}var is={readContext:jr,useCallback:xi,useContext:xi,useEffect:xi,useImperativeHandle:xi,useInsertionEffect:xi,useLayoutEffect:xi,useMemo:xi,useReducer:xi,useRef:xi,useState:xi,useDebugValue:xi,useDeferredValue:xi,useTransition:xi,useMutableSource:xi,useSyncExternalStore:xi,useId:xi,unstable_isNewReconciler:!1},ss={readContext:jr,useCallback:function(e,t){return ji().memoizedState=[e,void 0===t?null:t],e},useContext:jr,useEffect:Yi,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Bi(4194308,4,qi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Bi(4194308,4,e,t)},useInsertionEffect:function(e,t){return Bi(4,2,e,t)},useMemo:function(e,t){var n=ji();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var o=ji();return t=void 0!==n?n(t):t,o.memoizedState=o.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},o.queue=e,e=e.dispatch=ts.bind(null,mi,e),[o.memoizedState,e]},useRef:function(e){return e={current:e},ji().memoizedState=e},useState:Mi,useDebugValue:$i,useDeferredValue:function(e){return ji().memoizedState=e},useTransition:function(){var e=Mi(!1),t=e[0];return e=Zi.bind(null,e[1]),ji().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var o=mi,a=ji();if(rr){if(void 0===n)throw Error(r(407));n=n()}else{if(n=t(),null===Il)throw Error(r(349));0!==(30&fi)||Di(o,t,n)}a.memoizedState=n;var i={value:n,getSnapshot:t};return a.queue=i,Yi(Ni.bind(null,o,i,e),[e]),o.flags|=2048,Fi(9,Ai.bind(null,o,i,n,t),void 0,null),n},useId:function(){var e=ji(),t=Il.identifierPrefix;if(rr){var n=Ka;t=":"+t+"R"+(n=(Qa&~(1<<32-it(Qa)-1)).toString(32)+n),0<(n=wi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ki++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ls={readContext:jr,useCallback:Ji,useContext:jr,useEffect:Xi,useImperativeHandle:Gi,useInsertionEffect:Ui,useLayoutEffect:Vi,useMemo:Qi,useReducer:Oi,useRef:Wi,useState:function(){return Oi(Ri)},useDebugValue:$i,useDeferredValue:function(e){return Ki(Pi(),yi.memoizedState,e)},useTransition:function(){return[Oi(Ri)[0],Pi().memoizedState]},useMutableSource:Ei,useSyncExternalStore:_i,useId:es,unstable_isNewReconciler:!1},us={readContext:jr,useCallback:Ji,useContext:jr,useEffect:Xi,useImperativeHandle:Gi,useInsertionEffect:Ui,useLayoutEffect:Vi,useMemo:Qi,useReducer:Ii,useRef:Wi,useState:function(){return Ii(Ri)},useDebugValue:$i,useDeferredValue:function(e){var t=Pi();return null===yi?t.memoizedState=e:Ki(t,yi.memoizedState,e)},useTransition:function(){return[Ii(Ri)[0],Pi().memoizedState]},useMutableSource:Ei,useSyncExternalStore:_i,useId:es,unstable_isNewReconciler:!1};function cs(e,t){try{var n="",o=t;do{n+=B(o),o=o.return}while(o);var a=n}catch(r){a="\nError generating stack: "+r.message+"\n"+r.stack}return{value:e,source:t,stack:a,digest:null}}function ds(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hs(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var ps="function"===typeof WeakMap?WeakMap:Map;function fs(e,t,n){(n=Ar(-1,n)).tag=3,n.payload={element:null};var o=t.value;return n.callback=function(){Ul||(Ul=!0,Vl=o),hs(0,t)},n}function ms(e,t,n){(n=Ar(-1,n)).tag=3;var o=e.type.getDerivedStateFromError;if("function"===typeof o){var a=t.value;n.payload=function(){return o(a)},n.callback=function(){hs(0,t)}}var r=e.stateNode;return null!==r&&"function"===typeof r.componentDidCatch&&(n.callback=function(){hs(0,t),"function"!==typeof o&&(null===ql?ql=new Set([this]):ql.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function ys(e,t,n){var o=e.pingCache;if(null===o){o=e.pingCache=new ps;var a=new Set;o.set(t,a)}else void 0===(a=o.get(t))&&(a=new Set,o.set(t,a));a.has(n)||(a.add(n),e=ju.bind(null,e,t,n),t.then(e,e))}function gs(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bs(e,t,n,o,a){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ar(-1,1)).tag=2,Nr(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var vs=w.ReactCurrentOwner,ws=!1;function ks(e,t,n,o){t.child=null===e?Kr(t,null,n,o):Qr(t,e.child,n,o)}function xs(e,t,n,o,a){n=n.render;var r=t.ref;return Sr(t,a),o=Ci(e,t,n,o,r,a),n=Si(),null===e||ws?(rr&&n&&tr(t),t.flags|=1,ks(e,t,o,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Us(e,t,a))}function Ts(e,t,n,o,a){if(null===e){var r=n.type;return"function"!==typeof r||Du(r)||void 0!==r.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Nu(n.type,null,o,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=r,Cs(e,t,r,o,a))}if(r=e.child,0===(e.lanes&a)){var i=r.memoizedProps;if((n=null!==(n=n.compare)?n:lo)(i,o)&&e.ref===t.ref)return Us(e,t,a)}return t.flags|=1,(e=Au(r,o)).ref=t.ref,e.return=t,t.child=e}function Cs(e,t,n,o,a){if(null!==e){var r=e.memoizedProps;if(lo(r,o)&&e.ref===t.ref){if(ws=!1,t.pendingProps=o=r,0===(e.lanes&a))return t.lanes=e.lanes,Us(e,t,a);0!==(131072&e.flags)&&(ws=!0)}}return Ps(e,t,n,o,a)}function Ss(e,t,n){var o=t.pendingProps,a=o.children,r=null!==e?e.memoizedState:null;if("hidden"===o.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Pa(Al,Dl),Dl|=n;else{if(0===(1073741824&n))return e=null!==r?r.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Pa(Al,Dl),Dl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},o=null!==r?r.baseLanes:n,Pa(Al,Dl),Dl|=o}else null!==r?(o=r.baseLanes|n,t.memoizedState=null):o=n,Pa(Al,Dl),Dl|=o;return ks(e,t,a,n),t.child}function js(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ps(e,t,n,o,a){var r=Da(n)?Ea:Oa.current;return r=_a(t,r),Sr(t,a),n=Ci(e,t,n,o,r,a),o=Si(),null===e||ws?(rr&&o&&tr(t),t.flags|=1,ks(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Us(e,t,a))}function Rs(e,t,n,o,a){if(Da(n)){var r=!0;za(t)}else r=!1;if(Sr(t,a),null===t.stateNode)Xs(e,t),Xr(t,n,o),Vr(t,n,o,a),o=!0;else if(null===e){var i=t.stateNode,s=t.memoizedProps;i.props=s;var l=i.context,u=n.contextType;"object"===typeof u&&null!==u?u=jr(u):u=_a(t,u=Da(n)?Ea:Oa.current);var c=n.getDerivedStateFromProps,d="function"===typeof c||"function"===typeof i.getSnapshotBeforeUpdate;d||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(s!==o||l!==u)&&Ur(t,i,o,u),Er=!1;var h=t.memoizedState;i.state=h,Mr(t,o,i,a),l=t.memoizedState,s!==o||h!==l||Ia.current||Er?("function"===typeof c&&(Br(t,n,c,o),l=t.memoizedState),(s=Er||Yr(t,n,s,o,h,l,u))?(d||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4194308)):("function"===typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=o,t.memoizedState=l),i.props=o,i.state=l,i.context=u,o=s):("function"===typeof i.componentDidMount&&(t.flags|=4194308),o=!1)}else{i=t.stateNode,Dr(e,t),s=t.memoizedProps,u=t.type===t.elementType?s:gr(t.type,s),i.props=u,d=t.pendingProps,h=i.context,"object"===typeof(l=n.contextType)&&null!==l?l=jr(l):l=_a(t,l=Da(n)?Ea:Oa.current);var p=n.getDerivedStateFromProps;(c="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(s!==d||h!==l)&&Ur(t,i,o,l),Er=!1,h=t.memoizedState,i.state=h,Mr(t,o,i,a);var f=t.memoizedState;s!==d||h!==f||Ia.current||Er?("function"===typeof p&&(Br(t,n,p,o),f=t.memoizedState),(u=Er||Yr(t,n,u,o,h,f,l)||!1)?(c||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(o,f,l),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(o,f,l)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof i.componentDidUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=o,t.memoizedState=f),i.props=o,i.state=f,i.context=l,o=u):("function"!==typeof i.componentDidUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),o=!1)}return Os(e,t,n,o,r,a)}function Os(e,t,n,o,a,r){js(e,t);var i=0!==(128&t.flags);if(!o&&!i)return a&&Ma(t,n,!1),Us(e,t,r);o=t.stateNode,vs.current=t;var s=i&&"function"!==typeof n.getDerivedStateFromError?null:o.render();return t.flags|=1,null!==e&&i?(t.child=Qr(t,e.child,null,r),t.child=Qr(t,null,s,r)):ks(e,t,s,r),t.memoizedState=o.state,a&&Ma(t,n,!0),t.child}function Is(e){var t=e.stateNode;t.pendingContext?Na(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Na(0,t.context,!1),ai(e,t.containerInfo)}function Es(e,t,n,o,a){return fr(),mr(a),t.flags|=256,ks(e,t,n,o),t.child}var _s,Ds,As,Ns,Ls={dehydrated:null,treeContext:null,retryLane:0};function zs(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ms(e,t,n){var o,a=t.pendingProps,i=li.current,s=!1,l=0!==(128&t.flags);if((o=l)||(o=(null===e||null!==e.memoizedState)&&0!==(2&i)),o?(s=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Pa(li,1&i),null===e)return cr(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=a.children,e=a.fallback,s?(a=t.mode,s=t.child,l={mode:"hidden",children:l},0===(1&a)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=zu(l,a,0,null),e=Lu(e,a,n,null),s.return=t,e.return=t,s.sibling=e,t.child=s,t.child.memoizedState=zs(n),t.memoizedState=Ls,e):Fs(t,l));if(null!==(i=e.memoizedState)&&null!==(o=i.dehydrated))return function(e,t,n,o,a,i,s){if(n)return 256&t.flags?(t.flags&=-257,Ws(e,t,s,o=ds(Error(r(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=o.fallback,a=t.mode,o=zu({mode:"visible",children:o.children},a,0,null),(i=Lu(i,a,s,null)).flags|=2,o.return=t,i.return=t,o.sibling=i,t.child=o,0!==(1&t.mode)&&Qr(t,e.child,null,s),t.child.memoizedState=zs(s),t.memoizedState=Ls,i);if(0===(1&t.mode))return Ws(e,t,s,null);if("$!"===a.data){if(o=a.nextSibling&&a.nextSibling.dataset)var l=o.dgst;return o=l,Ws(e,t,s,o=ds(i=Error(r(419)),o,void 0))}if(l=0!==(s&e.childLanes),ws||l){if(null!==(o=Il)){switch(s&-s){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(o.suspendedLanes|s))?0:a)&&a!==i.retryLane&&(i.retryLane=a,Ir(e,a),ou(o,e,a,-1))}return yu(),Ws(e,t,s,o=ds(Error(r(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Ru.bind(null,e),a._reactRetry=t,null):(e=i.treeContext,ar=ca(a.nextSibling),or=t,rr=!0,ir=null,null!==e&&(Ga[$a++]=Qa,Ga[$a++]=Ka,Ga[$a++]=Ja,Qa=e.id,Ka=e.overflow,Ja=t),t=Fs(t,o.children),t.flags|=4096,t)}(e,t,l,a,o,i,n);if(s){s=a.fallback,l=t.mode,o=(i=e.child).sibling;var u={mode:"hidden",children:a.children};return 0===(1&l)&&t.child!==i?((a=t.child).childLanes=0,a.pendingProps=u,t.deletions=null):(a=Au(i,u)).subtreeFlags=14680064&i.subtreeFlags,null!==o?s=Au(o,s):(s=Lu(s,l,n,null)).flags|=2,s.return=t,a.return=t,a.sibling=s,t.child=a,a=s,s=t.child,l=null===(l=e.child.memoizedState)?zs(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~n,t.memoizedState=Ls,a}return e=(s=e.child).sibling,a=Au(s,{mode:"visible",children:a.children}),0===(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Fs(e,t){return(t=zu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ws(e,t,n,o){return null!==o&&mr(o),Qr(t,e.child,null,n),(e=Fs(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bs(e,t,n){e.lanes|=t;var o=e.alternate;null!==o&&(o.lanes|=t),Cr(e.return,t,n)}function Hs(e,t,n,o,a){var r=e.memoizedState;null===r?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:o,tail:n,tailMode:a}:(r.isBackwards=t,r.rendering=null,r.renderingStartTime=0,r.last=o,r.tail=n,r.tailMode=a)}function Ys(e,t,n){var o=t.pendingProps,a=o.revealOrder,r=o.tail;if(ks(e,t,o.children,n),0!==(2&(o=li.current)))o=1&o|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bs(e,n,t);else if(19===e.tag)Bs(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}o&=1}if(Pa(li,o),0===(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ui(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Hs(t,!1,a,n,r);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ui(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Hs(t,!0,n,null,r);break;case"together":Hs(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Xs(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Us(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zl|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(r(153));if(null!==t.child){for(n=Au(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Au(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Vs(e,t){if(!rr)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var o=null;null!==n;)null!==n.alternate&&(o=n),n=n.sibling;null===o?t||null===e.tail?e.tail=null:e.tail.sibling=null:o.sibling=null}}function qs(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,o=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,o|=14680064&a.subtreeFlags,o|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,o|=a.subtreeFlags,o|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=o,e.childLanes=n,t}function Gs(e,t,n){var o=t.pendingProps;switch(nr(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qs(t),null;case 1:case 17:return Da(t.type)&&Aa(),qs(t),null;case 3:return o=t.stateNode,ri(),ja(Ia),ja(Oa),di(),o.pendingContext&&(o.context=o.pendingContext,o.pendingContext=null),null!==e&&null!==e.child||(hr(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ir&&(su(ir),ir=null))),Ds(e,t),qs(t),null;case 5:si(t);var a=oi(ni.current);if(n=t.type,null!==e&&null!=t.stateNode)As(e,t,n,o,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!o){if(null===t.stateNode)throw Error(r(166));return qs(t),null}if(e=oi(ei.current),hr(t)){o=t.stateNode,n=t.type;var i=t.memoizedProps;switch(o[pa]=t,o[fa]=i,e=0!==(1&t.mode),n){case"dialog":Wo("cancel",o),Wo("close",o);break;case"iframe":case"object":case"embed":Wo("load",o);break;case"video":case"audio":for(a=0;a<Lo.length;a++)Wo(Lo[a],o);break;case"source":Wo("error",o);break;case"img":case"image":case"link":Wo("error",o),Wo("load",o);break;case"details":Wo("toggle",o);break;case"input":J(o,i),Wo("invalid",o);break;case"select":o._wrapperState={wasMultiple:!!i.multiple},Wo("invalid",o);break;case"textarea":ae(o,i),Wo("invalid",o)}for(var l in be(n,i),a=null,i)if(i.hasOwnProperty(l)){var u=i[l];"children"===l?"string"===typeof u?o.textContent!==u&&(!0!==i.suppressHydrationWarning&&Zo(o.textContent,u,e),a=["children",u]):"number"===typeof u&&o.textContent!==""+u&&(!0!==i.suppressHydrationWarning&&Zo(o.textContent,u,e),a=["children",""+u]):s.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Wo("scroll",o)}switch(n){case"input":V(o),Z(o,i,!0);break;case"textarea":V(o),ie(o);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(o.onclick=ea)}o=a,t.updateQueue=o,null!==o&&(t.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof o.is?e=l.createElement(n,{is:o.is}):(e=l.createElement(n),"select"===n&&(l=e,o.multiple?l.multiple=!0:o.size&&(l.size=o.size))):e=l.createElementNS(e,n),e[pa]=t,e[fa]=o,_s(e,t,!1,!1),t.stateNode=e;e:{switch(l=ve(n,o),n){case"dialog":Wo("cancel",e),Wo("close",e),a=o;break;case"iframe":case"object":case"embed":Wo("load",e),a=o;break;case"video":case"audio":for(a=0;a<Lo.length;a++)Wo(Lo[a],e);a=o;break;case"source":Wo("error",e),a=o;break;case"img":case"image":case"link":Wo("error",e),Wo("load",e),a=o;break;case"details":Wo("toggle",e),a=o;break;case"input":J(e,o),a=$(e,o),Wo("invalid",e);break;case"option":default:a=o;break;case"select":e._wrapperState={wasMultiple:!!o.multiple},a=z({},o,{value:void 0}),Wo("invalid",e);break;case"textarea":ae(e,o),a=oe(e,o),Wo("invalid",e)}for(i in be(n,a),u=a)if(u.hasOwnProperty(i)){var c=u[i];"style"===i?ye(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===i?"string"===typeof c?("textarea"!==n||""!==c)&&he(e,c):"number"===typeof c&&he(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(s.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Wo("scroll",e):null!=c&&v(e,i,c,l))}switch(n){case"input":V(e),Z(e,o,!1);break;case"textarea":V(e),ie(e);break;case"option":null!=o.value&&e.setAttribute("value",""+X(o.value));break;case"select":e.multiple=!!o.multiple,null!=(i=o.value)?ne(e,!!o.multiple,i,!1):null!=o.defaultValue&&ne(e,!!o.multiple,o.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=ea)}switch(n){case"button":case"input":case"select":case"textarea":o=!!o.autoFocus;break e;case"img":o=!0;break e;default:o=!1}}o&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qs(t),null;case 6:if(e&&null!=t.stateNode)Ns(e,t,e.memoizedProps,o);else{if("string"!==typeof o&&null===t.stateNode)throw Error(r(166));if(n=oi(ni.current),oi(ei.current),hr(t)){if(o=t.stateNode,n=t.memoizedProps,o[pa]=t,(i=o.nodeValue!==n)&&null!==(e=or))switch(e.tag){case 3:Zo(o.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zo(o.nodeValue,n,0!==(1&e.mode))}i&&(t.flags|=4)}else(o=(9===n.nodeType?n:n.ownerDocument).createTextNode(o))[pa]=t,t.stateNode=o}return qs(t),null;case 13:if(ja(li),o=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rr&&null!==ar&&0!==(1&t.mode)&&0===(128&t.flags))pr(),fr(),t.flags|=98560,i=!1;else if(i=hr(t),null!==o&&null!==o.dehydrated){if(null===e){if(!i)throw Error(r(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(r(317));i[pa]=t}else fr(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qs(t),i=!1}else null!==ir&&(su(ir),ir=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((o=null!==o)!==(null!==e&&null!==e.memoizedState)&&o&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&li.current)?0===Nl&&(Nl=3):yu())),null!==t.updateQueue&&(t.flags|=4),qs(t),null);case 4:return ri(),Ds(e,t),null===e&&Yo(t.stateNode.containerInfo),qs(t),null;case 10:return Tr(t.type._context),qs(t),null;case 19:if(ja(li),null===(i=t.memoizedState))return qs(t),null;if(o=0!==(128&t.flags),null===(l=i.rendering))if(o)Vs(i,!1);else{if(0!==Nl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ui(e))){for(t.flags|=128,Vs(i,!1),null!==(o=l.updateQueue)&&(t.updateQueue=o,t.flags|=4),t.subtreeFlags=0,o=n,n=t.child;null!==n;)e=o,(i=n).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Pa(li,1&li.current|2),t.child}e=e.sibling}null!==i.tail&&Qe()>Yl&&(t.flags|=128,o=!0,Vs(i,!1),t.lanes=4194304)}else{if(!o)if(null!==(e=ui(l))){if(t.flags|=128,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Vs(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!rr)return qs(t),null}else 2*Qe()-i.renderingStartTime>Yl&&1073741824!==n&&(t.flags|=128,o=!0,Vs(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=i.last)?n.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Qe(),t.sibling=null,n=li.current,Pa(li,o?1&n|2:1&n),t):(qs(t),null);case 22:case 23:return hu(),o=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==o&&(t.flags|=8192),o&&0!==(1&t.mode)?0!==(1073741824&Dl)&&(qs(t),6&t.subtreeFlags&&(t.flags|=8192)):qs(t),null;case 24:case 25:return null}throw Error(r(156,t.tag))}function $s(e,t){switch(nr(t),t.tag){case 1:return Da(t.type)&&Aa(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ri(),ja(Ia),ja(Oa),di(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return si(t),null;case 13:if(ja(li),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(r(340));fr()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return ja(li),null;case 4:return ri(),null;case 10:return Tr(t.type._context),null;case 22:case 23:return hu(),null;default:return null}}_s=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ds=function(){},As=function(e,t,n,o){var a=e.memoizedProps;if(a!==o){e=t.stateNode,oi(ei.current);var r,i=null;switch(n){case"input":a=$(e,a),o=$(e,o),i=[];break;case"select":a=z({},a,{value:void 0}),o=z({},o,{value:void 0}),i=[];break;case"textarea":a=oe(e,a),o=oe(e,o),i=[];break;default:"function"!==typeof a.onClick&&"function"===typeof o.onClick&&(e.onclick=ea)}for(c in be(n,o),n=null,a)if(!o.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var l=a[c];for(r in l)l.hasOwnProperty(r)&&(n||(n={}),n[r]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(s.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in o){var u=o[c];if(l=null!=a?a[c]:void 0,o.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(r in l)!l.hasOwnProperty(r)||u&&u.hasOwnProperty(r)||(n||(n={}),n[r]="");for(r in u)u.hasOwnProperty(r)&&l[r]!==u[r]&&(n||(n={}),n[r]=u[r])}else n||(i||(i=[]),i.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!==typeof u&&"number"!==typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(s.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Wo("scroll",e),i||l===u||(i=[])):(i=i||[]).push(c,u))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Ns=function(e,t,n,o){n!==o&&(t.flags|=4)};var Js=!1,Qs=!1,Ks="function"===typeof WeakSet?WeakSet:Set,Zs=null;function el(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(o){Su(e,t,o)}else n.current=null}function tl(e,t,n){try{n()}catch(o){Su(e,t,o)}}var nl=!1;function ol(e,t,n){var o=t.updateQueue;if(null!==(o=null!==o?o.lastEffect:null)){var a=o=o.next;do{if((a.tag&e)===e){var r=a.destroy;a.destroy=void 0,void 0!==r&&tl(t,n,r)}a=a.next}while(a!==o)}}function al(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var o=n.create;n.destroy=o()}n=n.next}while(n!==t)}}function rl(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function il(e){var t=e.alternate;null!==t&&(e.alternate=null,il(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[pa],delete t[fa],delete t[ya],delete t[ga],delete t[ba])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ul(e,t,n){var o=e.tag;if(5===o||6===o)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=ea));else if(4!==o&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}function cl(e,t,n){var o=e.tag;if(5===o||6===o)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==o&&null!==(e=e.child))for(cl(e,t,n),e=e.sibling;null!==e;)cl(e,t,n),e=e.sibling}var dl=null,hl=!1;function pl(e,t,n){for(n=n.child;null!==n;)fl(e,t,n),n=n.sibling}function fl(e,t,n){if(rt&&"function"===typeof rt.onCommitFiberUnmount)try{rt.onCommitFiberUnmount(at,n)}catch(s){}switch(n.tag){case 5:Qs||el(n,t);case 6:var o=dl,a=hl;dl=null,pl(e,t,n),hl=a,null!==(dl=o)&&(hl?(e=dl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):dl.removeChild(n.stateNode));break;case 18:null!==dl&&(hl?(e=dl,n=n.stateNode,8===e.nodeType?ua(e.parentNode,n):1===e.nodeType&&ua(e,n),Ht(e)):ua(dl,n.stateNode));break;case 4:o=dl,a=hl,dl=n.stateNode.containerInfo,hl=!0,pl(e,t,n),dl=o,hl=a;break;case 0:case 11:case 14:case 15:if(!Qs&&(null!==(o=n.updateQueue)&&null!==(o=o.lastEffect))){a=o=o.next;do{var r=a,i=r.destroy;r=r.tag,void 0!==i&&(0!==(2&r)||0!==(4&r))&&tl(n,t,i),a=a.next}while(a!==o)}pl(e,t,n);break;case 1:if(!Qs&&(el(n,t),"function"===typeof(o=n.stateNode).componentWillUnmount))try{o.props=n.memoizedProps,o.state=n.memoizedState,o.componentWillUnmount()}catch(s){Su(n,t,s)}pl(e,t,n);break;case 21:pl(e,t,n);break;case 22:1&n.mode?(Qs=(o=Qs)||null!==n.memoizedState,pl(e,t,n),Qs=o):pl(e,t,n);break;default:pl(e,t,n)}}function ml(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ks),t.forEach((function(t){var o=Ou.bind(null,e,t);n.has(t)||(n.add(t),t.then(o,o))}))}}function yl(e,t){var n=t.deletions;if(null!==n)for(var o=0;o<n.length;o++){var a=n[o];try{var i=e,s=t,l=s;e:for(;null!==l;){switch(l.tag){case 5:dl=l.stateNode,hl=!1;break e;case 3:case 4:dl=l.stateNode.containerInfo,hl=!0;break e}l=l.return}if(null===dl)throw Error(r(160));fl(i,s,a),dl=null,hl=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(c){Su(a,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var n=e.alternate,o=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(yl(t,e),bl(e),4&o){try{ol(3,e,e.return),al(3,e)}catch(y){Su(e,e.return,y)}try{ol(5,e,e.return)}catch(y){Su(e,e.return,y)}}break;case 1:yl(t,e),bl(e),512&o&&null!==n&&el(n,n.return);break;case 5:if(yl(t,e),bl(e),512&o&&null!==n&&el(n,n.return),32&e.flags){var a=e.stateNode;try{he(a,"")}catch(y){Su(e,e.return,y)}}if(4&o&&null!=(a=e.stateNode)){var i=e.memoizedProps,s=null!==n?n.memoizedProps:i,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===i.type&&null!=i.name&&Q(a,i),ve(l,s);var c=ve(l,i);for(s=0;s<u.length;s+=2){var d=u[s],h=u[s+1];"style"===d?ye(a,h):"dangerouslySetInnerHTML"===d?de(a,h):"children"===d?he(a,h):v(a,d,h,c)}switch(l){case"input":K(a,i);break;case"textarea":re(a,i);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var f=i.value;null!=f?ne(a,!!i.multiple,f,!1):p!==!!i.multiple&&(null!=i.defaultValue?ne(a,!!i.multiple,i.defaultValue,!0):ne(a,!!i.multiple,i.multiple?[]:"",!1))}a[fa]=i}catch(y){Su(e,e.return,y)}}break;case 6:if(yl(t,e),bl(e),4&o){if(null===e.stateNode)throw Error(r(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(y){Su(e,e.return,y)}}break;case 3:if(yl(t,e),bl(e),4&o&&null!==n&&n.memoizedState.isDehydrated)try{Ht(t.containerInfo)}catch(y){Su(e,e.return,y)}break;case 4:default:yl(t,e),bl(e);break;case 13:yl(t,e),bl(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Hl=Qe())),4&o&&ml(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Qs=(c=Qs)||d,yl(t,e),Qs=c):yl(t,e),bl(e),8192&o){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!d&&0!==(1&e.mode))for(Zs=e,d=e.child;null!==d;){for(h=Zs=d;null!==Zs;){switch(f=(p=Zs).child,p.tag){case 0:case 11:case 14:case 15:ol(4,p,p.return);break;case 1:el(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){o=p,n=p.return;try{t=o,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(y){Su(o,n,y)}}break;case 5:el(p,p.return);break;case 22:if(null!==p.memoizedState){xl(h);continue}}null!==f?(f.return=p,Zs=f):xl(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{a=h.stateNode,c?"function"===typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=h.stateNode,s=void 0!==(u=h.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,l.style.display=me("display",s))}catch(y){Su(e,e.return,y)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=c?"":h.memoizedProps}catch(y){Su(e,e.return,y)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:yl(t,e),bl(e),4&o&&ml(e);case 21:}}function bl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(sl(n)){var o=n;break e}n=n.return}throw Error(r(160))}switch(o.tag){case 5:var a=o.stateNode;32&o.flags&&(he(a,""),o.flags&=-33),cl(e,ll(e),a);break;case 3:case 4:var i=o.stateNode.containerInfo;ul(e,ll(e),i);break;default:throw Error(r(161))}}catch(s){Su(e,e.return,s)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function vl(e,t,n){Zs=e,wl(e,t,n)}function wl(e,t,n){for(var o=0!==(1&e.mode);null!==Zs;){var a=Zs,r=a.child;if(22===a.tag&&o){var i=null!==a.memoizedState||Js;if(!i){var s=a.alternate,l=null!==s&&null!==s.memoizedState||Qs;s=Js;var u=Qs;if(Js=i,(Qs=l)&&!u)for(Zs=a;null!==Zs;)l=(i=Zs).child,22===i.tag&&null!==i.memoizedState?Tl(a):null!==l?(l.return=i,Zs=l):Tl(a);for(;null!==r;)Zs=r,wl(r,t,n),r=r.sibling;Zs=a,Js=s,Qs=u}kl(e)}else 0!==(8772&a.subtreeFlags)&&null!==r?(r.return=a,Zs=r):kl(e)}}function kl(e){for(;null!==Zs;){var t=Zs;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qs||al(5,t);break;case 1:var o=t.stateNode;if(4&t.flags&&!Qs)if(null===n)o.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:gr(t.type,n.memoizedProps);o.componentDidUpdate(a,n.memoizedState,o.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Fr(t,i,o);break;case 3:var s=t.updateQueue;if(null!==s){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Fr(t,s,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Ht(h)}}}break;default:throw Error(r(163))}Qs||512&t.flags&&rl(t)}catch(p){Su(t,t.return,p)}}if(t===e){Zs=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zs=n;break}Zs=t.return}}function xl(e){for(;null!==Zs;){var t=Zs;if(t===e){Zs=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zs=n;break}Zs=t.return}}function Tl(e){for(;null!==Zs;){var t=Zs;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{al(4,t)}catch(l){Su(t,n,l)}break;case 1:var o=t.stateNode;if("function"===typeof o.componentDidMount){var a=t.return;try{o.componentDidMount()}catch(l){Su(t,a,l)}}var r=t.return;try{rl(t)}catch(l){Su(t,r,l)}break;case 5:var i=t.return;try{rl(t)}catch(l){Su(t,i,l)}}}catch(l){Su(t,t.return,l)}if(t===e){Zs=null;break}var s=t.sibling;if(null!==s){s.return=t.return,Zs=s;break}Zs=t.return}}var Cl,Sl=Math.ceil,jl=w.ReactCurrentDispatcher,Pl=w.ReactCurrentOwner,Rl=w.ReactCurrentBatchConfig,Ol=0,Il=null,El=null,_l=0,Dl=0,Al=Sa(0),Nl=0,Ll=null,zl=0,Ml=0,Fl=0,Wl=null,Bl=null,Hl=0,Yl=1/0,Xl=null,Ul=!1,Vl=null,ql=null,Gl=!1,$l=null,Jl=0,Ql=0,Kl=null,Zl=-1,eu=0;function tu(){return 0!==(6&Ol)?Qe():-1!==Zl?Zl:Zl=Qe()}function nu(e){return 0===(1&e.mode)?1:0!==(2&Ol)&&0!==_l?_l&-_l:null!==yr.transition?(0===eu&&(eu=mt()),eu):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Jt(e.type)}function ou(e,t,n,o){if(50<Ql)throw Ql=0,Kl=null,Error(r(185));gt(e,n,o),0!==(2&Ol)&&e===Il||(e===Il&&(0===(2&Ol)&&(Ml|=n),4===Nl&&lu(e,_l)),au(e,o),1===n&&0===Ol&&0===(1&t.mode)&&(Yl=Qe()+500,Wa&&Ya()))}function au(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,r=e.pendingLanes;0<r;){var i=31-it(r),s=1<<i,l=a[i];-1===l?0!==(s&n)&&0===(s&o)||(a[i]=pt(s,t)):l<=t&&(e.expiredLanes|=s),r&=~s}}(e,t);var o=ht(e,e===Il?_l:0);if(0===o)null!==n&&Ge(n),e.callbackNode=null,e.callbackPriority=0;else if(t=o&-o,e.callbackPriority!==t){if(null!=n&&Ge(n),1===t)0===e.tag?function(e){Wa=!0,Ha(e)}(uu.bind(null,e)):Ha(uu.bind(null,e)),sa((function(){0===(6&Ol)&&Ya()})),n=null;else{switch(wt(o)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=ot}n=Iu(n,ru.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ru(e,t){if(Zl=-1,eu=0,0!==(6&Ol))throw Error(r(327));var n=e.callbackNode;if(Tu()&&e.callbackNode!==n)return null;var o=ht(e,e===Il?_l:0);if(0===o)return null;if(0!==(30&o)||0!==(o&e.expiredLanes)||t)t=gu(e,o);else{t=o;var a=Ol;Ol|=2;var i=mu();for(Il===e&&_l===t||(Xl=null,Yl=Qe()+500,pu(e,t));;)try{vu();break}catch(l){fu(e,l)}xr(),jl.current=i,Ol=a,null!==El?t=0:(Il=null,_l=0,t=Nl)}if(0!==t){if(2===t&&(0!==(a=ft(e))&&(o=a,t=iu(e,a))),1===t)throw n=Ll,pu(e,0),lu(e,o),au(e,Qe()),n;if(6===t)lu(e,o);else{if(a=e.current.alternate,0===(30&o)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var o=0;o<n.length;o++){var a=n[o],r=a.getSnapshot;a=a.value;try{if(!so(r(),a))return!1}catch(s){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=gu(e,o))&&(0!==(i=ft(e))&&(o=i,t=iu(e,i))),1===t))throw n=Ll,pu(e,0),lu(e,o),au(e,Qe()),n;switch(e.finishedWork=a,e.finishedLanes=o,t){case 0:case 1:throw Error(r(345));case 2:case 5:xu(e,Bl,Xl);break;case 3:if(lu(e,o),(130023424&o)===o&&10<(t=Hl+500-Qe())){if(0!==ht(e,0))break;if(((a=e.suspendedLanes)&o)!==o){tu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=aa(xu.bind(null,e,Bl,Xl),t);break}xu(e,Bl,Xl);break;case 4:if(lu(e,o),(4194240&o)===o)break;for(t=e.eventTimes,a=-1;0<o;){var s=31-it(o);i=1<<s,(s=t[s])>a&&(a=s),o&=~i}if(o=a,10<(o=(120>(o=Qe()-o)?120:480>o?480:1080>o?1080:1920>o?1920:3e3>o?3e3:4320>o?4320:1960*Sl(o/1960))-o)){e.timeoutHandle=aa(xu.bind(null,e,Bl,Xl),o);break}xu(e,Bl,Xl);break;default:throw Error(r(329))}}}return au(e,Qe()),e.callbackNode===n?ru.bind(null,e):null}function iu(e,t){var n=Wl;return e.current.memoizedState.isDehydrated&&(pu(e,t).flags|=256),2!==(e=gu(e,t))&&(t=Bl,Bl=n,null!==t&&su(t)),e}function su(e){null===Bl?Bl=e:Bl.push.apply(Bl,e)}function lu(e,t){for(t&=~Fl,t&=~Ml,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),o=1<<n;e[n]=-1,t&=~o}}function uu(e){if(0!==(6&Ol))throw Error(r(327));Tu();var t=ht(e,0);if(0===(1&t))return au(e,Qe()),null;var n=gu(e,t);if(0!==e.tag&&2===n){var o=ft(e);0!==o&&(t=o,n=iu(e,o))}if(1===n)throw n=Ll,pu(e,0),lu(e,t),au(e,Qe()),n;if(6===n)throw Error(r(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,xu(e,Bl,Xl),au(e,Qe()),null}function cu(e,t){var n=Ol;Ol|=1;try{return e(t)}finally{0===(Ol=n)&&(Yl=Qe()+500,Wa&&Ya())}}function du(e){null!==$l&&0===$l.tag&&0===(6&Ol)&&Tu();var t=Ol;Ol|=1;var n=Rl.transition,o=vt;try{if(Rl.transition=null,vt=1,e)return e()}finally{vt=o,Rl.transition=n,0===(6&(Ol=t))&&Ya()}}function hu(){Dl=Al.current,ja(Al)}function pu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ra(n)),null!==El)for(n=El.return;null!==n;){var o=n;switch(nr(o),o.tag){case 1:null!==(o=o.type.childContextTypes)&&void 0!==o&&Aa();break;case 3:ri(),ja(Ia),ja(Oa),di();break;case 5:si(o);break;case 4:ri();break;case 13:case 19:ja(li);break;case 10:Tr(o.type._context);break;case 22:case 23:hu()}n=n.return}if(Il=e,El=e=Au(e.current,null),_l=Dl=t,Nl=0,Ll=null,Fl=Ml=zl=0,Bl=Wl=null,null!==Pr){for(t=0;t<Pr.length;t++)if(null!==(o=(n=Pr[t]).interleaved)){n.interleaved=null;var a=o.next,r=n.pending;if(null!==r){var i=r.next;r.next=a,o.next=i}n.pending=o}Pr=null}return e}function fu(e,t){for(;;){var n=El;try{if(xr(),hi.current=is,bi){for(var o=mi.memoizedState;null!==o;){var a=o.queue;null!==a&&(a.pending=null),o=o.next}bi=!1}if(fi=0,gi=yi=mi=null,vi=!1,wi=0,Pl.current=null,null===n||null===n.return){Nl=1,Ll=t,El=null;break}e:{var i=e,s=n.return,l=n,u=t;if(t=_l,l.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u,d=l,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=gs(s);if(null!==f){f.flags&=-257,bs(f,s,l,0,t),1&f.mode&&ys(i,c,t),u=c;var m=(t=f).updateQueue;if(null===m){var y=new Set;y.add(u),t.updateQueue=y}else m.add(u);break e}if(0===(1&t)){ys(i,c,t),yu();break e}u=Error(r(426))}else if(rr&&1&l.mode){var g=gs(s);if(null!==g){0===(65536&g.flags)&&(g.flags|=256),bs(g,s,l,0,t),mr(cs(u,l));break e}}i=u=cs(u,l),4!==Nl&&(Nl=2),null===Wl?Wl=[i]:Wl.push(i),i=s;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,zr(i,fs(0,u,t));break e;case 1:l=u;var b=i.type,v=i.stateNode;if(0===(128&i.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===ql||!ql.has(v)))){i.flags|=65536,t&=-t,i.lanes|=t,zr(i,ms(i,l,t));break e}}i=i.return}while(null!==i)}ku(n)}catch(w){t=w,El===n&&null!==n&&(El=n=n.return);continue}break}}function mu(){var e=jl.current;return jl.current=is,null===e?is:e}function yu(){0!==Nl&&3!==Nl&&2!==Nl||(Nl=4),null===Il||0===(268435455&zl)&&0===(268435455&Ml)||lu(Il,_l)}function gu(e,t){var n=Ol;Ol|=2;var o=mu();for(Il===e&&_l===t||(Xl=null,pu(e,t));;)try{bu();break}catch(a){fu(e,a)}if(xr(),Ol=n,jl.current=o,null!==El)throw Error(r(261));return Il=null,_l=0,Nl}function bu(){for(;null!==El;)wu(El)}function vu(){for(;null!==El&&!$e();)wu(El)}function wu(e){var t=Cl(e.alternate,e,Dl);e.memoizedProps=e.pendingProps,null===t?ku(e):El=t,Pl.current=null}function ku(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Gs(n,t,Dl)))return void(El=n)}else{if(null!==(n=$s(n,t)))return n.flags&=32767,void(El=n);if(null===e)return Nl=6,void(El=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(El=t);El=t=e}while(null!==t);0===Nl&&(Nl=5)}function xu(e,t,n){var o=vt,a=Rl.transition;try{Rl.transition=null,vt=1,function(e,t,n,o){do{Tu()}while(null!==$l);if(0!==(6&Ol))throw Error(r(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(r(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var o=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-it(n),r=1<<a;t[a]=0,o[a]=-1,e[a]=-1,n&=~r}}(e,i),e===Il&&(El=Il=null,_l=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Gl||(Gl=!0,Iu(tt,(function(){return Tu(),null}))),i=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||i){i=Rl.transition,Rl.transition=null;var s=vt;vt=1;var l=Ol;Ol|=4,Pl.current=null,function(e,t){if(ta=Xt,fo(e=po())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var o=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(o&&0!==o.rangeCount){n=o.anchorNode;var a=o.anchorOffset,i=o.focusNode;o=o.focusOffset;try{n.nodeType,i.nodeType}catch(k){n=null;break e}var s=0,l=-1,u=-1,c=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==a&&3!==h.nodeType||(l=s+a),h!==i||0!==o&&3!==h.nodeType||(u=s+o),3===h.nodeType&&(s+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++c===a&&(l=s),p===i&&++d===o&&(u=s),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(na={focusedElem:e,selectionRange:n},Xt=!1,Zs=t;null!==Zs;)if(e=(t=Zs).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Zs=e;else for(;null!==Zs;){t=Zs;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var y=m.memoizedProps,g=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?y:gr(t.type,y),g);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(r(163))}}catch(k){Su(t,t.return,k)}if(null!==(e=t.sibling)){e.return=t.return,Zs=e;break}Zs=t.return}m=nl,nl=!1}(e,n),gl(n,e),mo(na),Xt=!!ta,na=ta=null,e.current=n,vl(n,e,a),Je(),Ol=l,vt=s,Rl.transition=i}else e.current=n;if(Gl&&(Gl=!1,$l=e,Jl=a),i=e.pendingLanes,0===i&&(ql=null),function(e){if(rt&&"function"===typeof rt.onCommitFiberRoot)try{rt.onCommitFiberRoot(at,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),au(e,Qe()),null!==t)for(o=e.onRecoverableError,n=0;n<t.length;n++)a=t[n],o(a.value,{componentStack:a.stack,digest:a.digest});if(Ul)throw Ul=!1,e=Vl,Vl=null,e;0!==(1&Jl)&&0!==e.tag&&Tu(),i=e.pendingLanes,0!==(1&i)?e===Kl?Ql++:(Ql=0,Kl=e):Ql=0,Ya()}(e,t,n,o)}finally{Rl.transition=a,vt=o}return null}function Tu(){if(null!==$l){var e=wt(Jl),t=Rl.transition,n=vt;try{if(Rl.transition=null,vt=16>e?16:e,null===$l)var o=!1;else{if(e=$l,$l=null,Jl=0,0!==(6&Ol))throw Error(r(331));var a=Ol;for(Ol|=4,Zs=e.current;null!==Zs;){var i=Zs,s=i.child;if(0!==(16&Zs.flags)){var l=i.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Zs=c;null!==Zs;){var d=Zs;switch(d.tag){case 0:case 11:case 15:ol(8,d,i)}var h=d.child;if(null!==h)h.return=d,Zs=h;else for(;null!==Zs;){var p=(d=Zs).sibling,f=d.return;if(il(d),d===c){Zs=null;break}if(null!==p){p.return=f,Zs=p;break}Zs=f}}}var m=i.alternate;if(null!==m){var y=m.child;if(null!==y){m.child=null;do{var g=y.sibling;y.sibling=null,y=g}while(null!==y)}}Zs=i}}if(0!==(2064&i.subtreeFlags)&&null!==s)s.return=i,Zs=s;else e:for(;null!==Zs;){if(0!==(2048&(i=Zs).flags))switch(i.tag){case 0:case 11:case 15:ol(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Zs=b;break e}Zs=i.return}}var v=e.current;for(Zs=v;null!==Zs;){var w=(s=Zs).child;if(0!==(2064&s.subtreeFlags)&&null!==w)w.return=s,Zs=w;else e:for(s=v;null!==Zs;){if(0!==(2048&(l=Zs).flags))try{switch(l.tag){case 0:case 11:case 15:al(9,l)}}catch(x){Su(l,l.return,x)}if(l===s){Zs=null;break e}var k=l.sibling;if(null!==k){k.return=l.return,Zs=k;break e}Zs=l.return}}if(Ol=a,Ya(),rt&&"function"===typeof rt.onPostCommitFiberRoot)try{rt.onPostCommitFiberRoot(at,e)}catch(x){}o=!0}return o}finally{vt=n,Rl.transition=t}}return!1}function Cu(e,t,n){e=Nr(e,t=fs(0,t=cs(n,t),1),1),t=tu(),null!==e&&(gt(e,1,t),au(e,t))}function Su(e,t,n){if(3===e.tag)Cu(e,e,n);else for(;null!==t;){if(3===t.tag){Cu(t,e,n);break}if(1===t.tag){var o=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof o.componentDidCatch&&(null===ql||!ql.has(o))){t=Nr(t,e=ms(t,e=cs(n,e),1),1),e=tu(),null!==t&&(gt(t,1,e),au(t,e));break}}t=t.return}}function ju(e,t,n){var o=e.pingCache;null!==o&&o.delete(t),t=tu(),e.pingedLanes|=e.suspendedLanes&n,Il===e&&(_l&n)===n&&(4===Nl||3===Nl&&(130023424&_l)===_l&&500>Qe()-Hl?pu(e,0):Fl|=n),au(e,t)}function Pu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=tu();null!==(e=Ir(e,t))&&(gt(e,t,n),au(e,n))}function Ru(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Pu(e,n)}function Ou(e,t){var n=0;switch(e.tag){case 13:var o=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:o=e.stateNode;break;default:throw Error(r(314))}null!==o&&o.delete(t),Pu(e,n)}function Iu(e,t){return qe(e,t)}function Eu(e,t,n,o){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=o,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _u(e,t,n,o){return new Eu(e,t,n,o)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Au(e,t){var n=e.alternate;return null===n?((n=_u(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Nu(e,t,n,o,a,i){var s=2;if(o=e,"function"===typeof e)Du(e)&&(s=1);else if("string"===typeof e)s=5;else e:switch(e){case T:return Lu(n.children,a,i,t);case C:s=8,a|=8;break;case S:return(e=_u(12,n,t,2|a)).elementType=S,e.lanes=i,e;case O:return(e=_u(13,n,t,a)).elementType=O,e.lanes=i,e;case I:return(e=_u(19,n,t,a)).elementType=I,e.lanes=i,e;case D:return zu(n,a,i,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case j:s=10;break e;case P:s=9;break e;case R:s=11;break e;case E:s=14;break e;case _:s=16,o=null;break e}throw Error(r(130,null==e?e:typeof e,""))}return(t=_u(s,n,t,a)).elementType=e,t.type=o,t.lanes=i,t}function Lu(e,t,n,o){return(e=_u(7,e,o,t)).lanes=n,e}function zu(e,t,n,o){return(e=_u(22,e,o,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Mu(e,t,n){return(e=_u(6,e,null,t)).lanes=n,e}function Fu(e,t,n){return(t=_u(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Wu(e,t,n,o,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=yt(0),this.expirationTimes=yt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=yt(0),this.identifierPrefix=o,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Bu(e,t,n,o,a,r,i,s,l){return e=new Wu(e,t,n,s,l),1===t?(t=1,!0===r&&(t|=8)):t=0,r=_u(3,null,null,t),e.current=r,r.stateNode=e,r.memoizedState={element:o,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},_r(r),e}function Hu(e){if(!e)return Ra;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(r(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Da(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(r(171))}if(1===e.tag){var n=e.type;if(Da(n))return La(e,n,t)}return t}function Yu(e,t,n,o,a,r,i,s,l){return(e=Bu(n,o,!0,e,0,r,0,s,l)).context=Hu(null),n=e.current,(r=Ar(o=tu(),a=nu(n))).callback=void 0!==t&&null!==t?t:null,Nr(n,r,a),e.current.lanes=a,gt(e,a,o),au(e,o),e}function Xu(e,t,n,o){var a=t.current,r=tu(),i=nu(a);return n=Hu(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ar(r,i)).payload={element:e},null!==(o=void 0===o?null:o)&&(t.callback=o),null!==(e=Nr(a,t,i))&&(ou(e,a,i,r),Lr(e,a,i)),i}function Uu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qu(e,t){Vu(e,t),(e=e.alternate)&&Vu(e,t)}Cl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ia.current)ws=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return ws=!1,function(e,t,n){switch(t.tag){case 3:Is(t),fr();break;case 5:ii(t);break;case 1:Da(t.type)&&za(t);break;case 4:ai(t,t.stateNode.containerInfo);break;case 10:var o=t.type._context,a=t.memoizedProps.value;Pa(br,o._currentValue),o._currentValue=a;break;case 13:if(null!==(o=t.memoizedState))return null!==o.dehydrated?(Pa(li,1&li.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Ms(e,t,n):(Pa(li,1&li.current),null!==(e=Us(e,t,n))?e.sibling:null);Pa(li,1&li.current);break;case 19:if(o=0!==(n&t.childLanes),0!==(128&e.flags)){if(o)return Ys(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Pa(li,li.current),o)break;return null;case 22:case 23:return t.lanes=0,Ss(e,t,n)}return Us(e,t,n)}(e,t,n);ws=0!==(131072&e.flags)}else ws=!1,rr&&0!==(1048576&t.flags)&&er(t,qa,t.index);switch(t.lanes=0,t.tag){case 2:var o=t.type;Xs(e,t),e=t.pendingProps;var a=_a(t,Oa.current);Sr(t,n),a=Ci(null,t,o,e,a,n);var i=Si();return t.flags|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Da(o)?(i=!0,za(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,_r(t),a.updater=Hr,t.stateNode=a,a._reactInternals=t,Vr(t,o,e,n),t=Os(null,t,o,!0,i,n)):(t.tag=0,rr&&i&&tr(t),ks(null,t,a,n),t=t.child),t;case 16:o=t.elementType;e:{switch(Xs(e,t),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"===typeof e)return Du(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===R)return 11;if(e===E)return 14}return 2}(o),e=gr(o,e),a){case 0:t=Ps(null,t,o,e,n);break e;case 1:t=Rs(null,t,o,e,n);break e;case 11:t=xs(null,t,o,e,n);break e;case 14:t=Ts(null,t,o,gr(o.type,e),n);break e}throw Error(r(306,o,""))}return t;case 0:return o=t.type,a=t.pendingProps,Ps(e,t,o,a=t.elementType===o?a:gr(o,a),n);case 1:return o=t.type,a=t.pendingProps,Rs(e,t,o,a=t.elementType===o?a:gr(o,a),n);case 3:e:{if(Is(t),null===e)throw Error(r(387));o=t.pendingProps,a=(i=t.memoizedState).element,Dr(e,t),Mr(t,o,null,n);var s=t.memoizedState;if(o=s.element,i.isDehydrated){if(i={element:o,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Es(e,t,o,n,a=cs(Error(r(423)),t));break e}if(o!==a){t=Es(e,t,o,n,a=cs(Error(r(424)),t));break e}for(ar=ca(t.stateNode.containerInfo.firstChild),or=t,rr=!0,ir=null,n=Kr(t,null,o,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(fr(),o===a){t=Us(e,t,n);break e}ks(e,t,o,n)}t=t.child}return t;case 5:return ii(t),null===e&&cr(t),o=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,s=a.children,oa(o,a)?s=null:null!==i&&oa(o,i)&&(t.flags|=32),js(e,t),ks(e,t,s,n),t.child;case 6:return null===e&&cr(t),null;case 13:return Ms(e,t,n);case 4:return ai(t,t.stateNode.containerInfo),o=t.pendingProps,null===e?t.child=Qr(t,null,o,n):ks(e,t,o,n),t.child;case 11:return o=t.type,a=t.pendingProps,xs(e,t,o,a=t.elementType===o?a:gr(o,a),n);case 7:return ks(e,t,t.pendingProps,n),t.child;case 8:case 12:return ks(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(o=t.type._context,a=t.pendingProps,i=t.memoizedProps,s=a.value,Pa(br,o._currentValue),o._currentValue=s,null!==i)if(so(i.value,s)){if(i.children===a.children&&!Ia.current){t=Us(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){s=i.child;for(var u=l.firstContext;null!==u;){if(u.context===o){if(1===i.tag){(u=Ar(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),c.pending=u}}i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Cr(i.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===i.tag)s=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(s=i.return))throw Error(r(341));s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),Cr(s,n,t),s=i.sibling}else s=i.child;if(null!==s)s.return=i;else for(s=i;null!==s;){if(s===t){s=null;break}if(null!==(i=s.sibling)){i.return=s.return,s=i;break}s=s.return}i=s}ks(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,o=t.pendingProps.children,Sr(t,n),o=o(a=jr(a)),t.flags|=1,ks(e,t,o,n),t.child;case 14:return a=gr(o=t.type,t.pendingProps),Ts(e,t,o,a=gr(o.type,a),n);case 15:return Cs(e,t,t.type,t.pendingProps,n);case 17:return o=t.type,a=t.pendingProps,a=t.elementType===o?a:gr(o,a),Xs(e,t),t.tag=1,Da(o)?(e=!0,za(t)):e=!1,Sr(t,n),Xr(t,o,a),Vr(t,o,a,n),Os(null,t,o,!0,e,n);case 19:return Ys(e,t,n);case 22:return Ss(e,t,n)}throw Error(r(156,t.tag))};var Gu="function"===typeof reportError?reportError:function(e){console.error(e)};function $u(e){this._internalRoot=e}function Ju(e){this._internalRoot=e}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Ku(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zu(){}function ec(e,t,n,o,a){var r=n._reactRootContainer;if(r){var i=r;if("function"===typeof a){var s=a;a=function(){var e=Uu(i);s.call(e)}}Xu(t,i,e,a)}else i=function(e,t,n,o,a){if(a){if("function"===typeof o){var r=o;o=function(){var e=Uu(i);r.call(e)}}var i=Yu(t,o,e,0,null,!1,0,"",Zu);return e._reactRootContainer=i,e[ma]=i.current,Yo(8===e.nodeType?e.parentNode:e),du(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"===typeof o){var s=o;o=function(){var e=Uu(l);s.call(e)}}var l=Bu(e,0,!1,null,0,!1,0,"",Zu);return e._reactRootContainer=l,e[ma]=l.current,Yo(8===e.nodeType?e.parentNode:e),du((function(){Xu(t,l,n,o)})),l}(n,t,e,a,o);return Uu(i)}Ju.prototype.render=$u.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(r(409));Xu(e,t,null,null)},Ju.prototype.unmount=$u.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;du((function(){Xu(null,e,null,null)})),t[ma]=null}},Ju.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&zt(e)}},kt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),au(t,Qe()),0===(6&Ol)&&(Yl=Qe()+500,Ya()))}break;case 13:du((function(){var t=Ir(e,1);if(null!==t){var n=tu();ou(t,e,1,n)}})),qu(e,1)}},xt=function(e){if(13===e.tag){var t=Ir(e,134217728);if(null!==t)ou(t,e,134217728,tu());qu(e,134217728)}},Tt=function(e){if(13===e.tag){var t=nu(e),n=Ir(e,t);if(null!==n)ou(n,e,t,tu());qu(e,t)}},Ct=function(){return vt},St=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},xe=function(e,t,n){switch(t){case"input":if(K(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var o=n[t];if(o!==e&&o.form===e.form){var a=xa(o);if(!a)throw Error(r(90));q(o),K(o,a)}}}break;case"textarea":re(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Re=cu,Oe=du;var tc={usingClientEntryPoint:!1,Events:[wa,ka,xa,je,Pe,cu]},nc={findFiberByHostInstance:va,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},oc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ue(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{at=ac.inject(oc),rt=ac}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qu(t))throw Error(r(200));return function(e,t,n){var o=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==o?null:""+o,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Qu(e))throw Error(r(299));var n=!1,o="",a=Gu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(o=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Bu(e,1,!1,null,0,n,0,o,a),e[ma]=t.current,Yo(8===e.nodeType?e.parentNode:e),new $u(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(r(188));throw e=Object.keys(e).join(","),Error(r(268,e))}return e=null===(e=Ue(t))?null:e.stateNode},t.flushSync=function(e){return du(e)},t.hydrate=function(e,t,n){if(!Ku(t))throw Error(r(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qu(e))throw Error(r(405));var o=null!=n&&n.hydratedSources||null,a=!1,i="",s=Gu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(s=n.onRecoverableError)),t=Yu(t,null,e,1,null!=n?n:null,a,0,i,s),e[ma]=t.current,Yo(e),o)for(e=0;e<o.length;e++)a=(a=(n=o[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Ju(t)},t.render=function(e,t,n){if(!Ku(t))throw Error(r(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ku(e))throw Error(r(40));return!!e._reactRootContainer&&(du((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[ma]=null}))})),!0)},t.unstable_batchedUpdates=cu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,o){if(!Ku(n))throw Error(r(200));if(null==e||void 0===e._reactInternals)throw Error(r(38));return ec(e,t,n,!1,o)},t.version="18.2.0-next-9e3b772b8-20220608"},250:function(e,t,n){"use strict";var o=n(164);t.createRoot=o.createRoot,t.hydrateRoot=o.hydrateRoot},164:function(e,t,n){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(463)},195:function(e,t,n){"use strict";function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var o,a,r=[],i=!0,s=!1;try{for(n=n.call(e);!(i=(o=n.next()).done)&&(r.push(o.value),!t||r.length!==t);i=!0);}catch(l){s=!0,a=l}finally{try{i||null==n.return||n.return()}finally{if(s)throw a}}return r}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return a(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}Object.defineProperty(t,"__esModule",{value:!0});function r(e,t,n,o,a,r,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=o,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=r,this.removeEmptyString=i}var i={};["children","dangerouslySetInnerHTML","defaultValue","defaultChecked","innerHTML","suppressContentEditableWarning","suppressHydrationWarning","style"].forEach((function(e){i[e]=new r(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=o(e,2),n=t[0],a=t[1];i[n]=new r(n,1,!1,a,null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){i[e]=new r(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){i[e]=new r(e,2,!1,e,null,!1,!1)})),["allowFullScreen","async","autoFocus","autoPlay","controls","default","defer","disabled","disablePictureInPicture","disableRemotePlayback","formNoValidate","hidden","loop","noModule","noValidate","open","playsInline","readOnly","required","reversed","scoped","seamless","itemScope"].forEach((function(e){i[e]=new r(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){i[e]=new r(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){i[e]=new r(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){i[e]=new r(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){i[e]=new r(e,5,!1,e.toLowerCase(),null,!1,!1)}));var s=/[\-\:]([a-z])/g,l=function(e){return e[1].toUpperCase()};["accent-height","alignment-baseline","arabic-form","baseline-shift","cap-height","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-name","glyph-orientation-horizontal","glyph-orientation-vertical","horiz-adv-x","horiz-origin-x","image-rendering","letter-spacing","lighting-color","marker-end","marker-mid","marker-start","overline-position","overline-thickness","paint-order","panose-1","pointer-events","rendering-intent","shape-rendering","stop-color","stop-opacity","strikethrough-position","strikethrough-thickness","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","underline-position","underline-thickness","unicode-bidi","unicode-range","units-per-em","v-alphabetic","v-hanging","v-ideographic","v-mathematical","vector-effect","vert-adv-y","vert-origin-x","vert-origin-y","word-spacing","writing-mode","xmlns:xlink","x-height"].forEach((function(e){var t=e.replace(s,l);i[t]=new r(t,1,!1,e,null,!1,!1)})),["xlink:actuate","xlink:arcrole","xlink:role","xlink:show","xlink:title","xlink:type"].forEach((function(e){var t=e.replace(s,l);i[t]=new r(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(s,l);i[t]=new r(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){i[e]=new r(e,1,!1,e.toLowerCase(),null,!1,!1)}));i.xlinkHref=new r("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){i[e]=new r(e,1,!1,e.toLowerCase(),null,!0,!0)}));var u=n(590),c=u.CAMELCASE,d=u.SAME,h=u.possibleStandardNames,p=RegExp.prototype.test.bind(new RegExp("^(data|aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$")),f=Object.keys(h).reduce((function(e,t){var n=h[t];return n===d?e[t]=t:n===c?e[t.toLowerCase()]=t:e[t]=n,e}),{});t.BOOLEAN=3,t.BOOLEANISH_STRING=2,t.NUMERIC=5,t.OVERLOADED_BOOLEAN=4,t.POSITIVE_NUMERIC=6,t.RESERVED=0,t.STRING=1,t.getPropertyInfo=function(e){return i.hasOwnProperty(e)?i[e]:null},t.isCustomAttribute=p,t.possibleStandardNames=f},590:function(e,t){t.SAME=0;t.CAMELCASE=1,t.possibleStandardNames={accept:0,acceptCharset:1,"accept-charset":"acceptCharset",accessKey:1,action:0,allowFullScreen:1,alt:0,as:0,async:0,autoCapitalize:1,autoComplete:1,autoCorrect:1,autoFocus:1,autoPlay:1,autoSave:1,capture:0,cellPadding:1,cellSpacing:1,challenge:0,charSet:1,checked:0,children:0,cite:0,class:"className",classID:1,className:1,cols:0,colSpan:1,content:0,contentEditable:1,contextMenu:1,controls:0,controlsList:1,coords:0,crossOrigin:1,dangerouslySetInnerHTML:1,data:0,dateTime:1,default:0,defaultChecked:1,defaultValue:1,defer:0,dir:0,disabled:0,disablePictureInPicture:1,disableRemotePlayback:1,download:0,draggable:0,encType:1,enterKeyHint:1,for:"htmlFor",form:0,formMethod:1,formAction:1,formEncType:1,formNoValidate:1,formTarget:1,frameBorder:1,headers:0,height:0,hidden:0,high:0,href:0,hrefLang:1,htmlFor:1,httpEquiv:1,"http-equiv":"httpEquiv",icon:0,id:0,innerHTML:1,inputMode:1,integrity:0,is:0,itemID:1,itemProp:1,itemRef:1,itemScope:1,itemType:1,keyParams:1,keyType:1,kind:0,label:0,lang:0,list:0,loop:0,low:0,manifest:0,marginWidth:1,marginHeight:1,max:0,maxLength:1,media:0,mediaGroup:1,method:0,min:0,minLength:1,multiple:0,muted:0,name:0,noModule:1,nonce:0,noValidate:1,open:0,optimum:0,pattern:0,placeholder:0,playsInline:1,poster:0,preload:0,profile:0,radioGroup:1,readOnly:1,referrerPolicy:1,rel:0,required:0,reversed:0,role:0,rows:0,rowSpan:1,sandbox:0,scope:0,scoped:0,scrolling:0,seamless:0,selected:0,shape:0,size:0,sizes:0,span:0,spellCheck:1,src:0,srcDoc:1,srcLang:1,srcSet:1,start:0,step:0,style:0,summary:0,tabIndex:1,target:0,title:0,type:0,useMap:1,value:0,width:0,wmode:0,wrap:0,about:0,accentHeight:1,"accent-height":"accentHeight",accumulate:0,additive:0,alignmentBaseline:1,"alignment-baseline":"alignmentBaseline",allowReorder:1,alphabetic:0,amplitude:0,arabicForm:1,"arabic-form":"arabicForm",ascent:0,attributeName:1,attributeType:1,autoReverse:1,azimuth:0,baseFrequency:1,baselineShift:1,"baseline-shift":"baselineShift",baseProfile:1,bbox:0,begin:0,bias:0,by:0,calcMode:1,capHeight:1,"cap-height":"capHeight",clip:0,clipPath:1,"clip-path":"clipPath",clipPathUnits:1,clipRule:1,"clip-rule":"clipRule",color:0,colorInterpolation:1,"color-interpolation":"colorInterpolation",colorInterpolationFilters:1,"color-interpolation-filters":"colorInterpolationFilters",colorProfile:1,"color-profile":"colorProfile",colorRendering:1,"color-rendering":"colorRendering",contentScriptType:1,contentStyleType:1,cursor:0,cx:0,cy:0,d:0,datatype:0,decelerate:0,descent:0,diffuseConstant:1,direction:0,display:0,divisor:0,dominantBaseline:1,"dominant-baseline":"dominantBaseline",dur:0,dx:0,dy:0,edgeMode:1,elevation:0,enableBackground:1,"enable-background":"enableBackground",end:0,exponent:0,externalResourcesRequired:1,fill:0,fillOpacity:1,"fill-opacity":"fillOpacity",fillRule:1,"fill-rule":"fillRule",filter:0,filterRes:1,filterUnits:1,floodOpacity:1,"flood-opacity":"floodOpacity",floodColor:1,"flood-color":"floodColor",focusable:0,fontFamily:1,"font-family":"fontFamily",fontSize:1,"font-size":"fontSize",fontSizeAdjust:1,"font-size-adjust":"fontSizeAdjust",fontStretch:1,"font-stretch":"fontStretch",fontStyle:1,"font-style":"fontStyle",fontVariant:1,"font-variant":"fontVariant",fontWeight:1,"font-weight":"fontWeight",format:0,from:0,fx:0,fy:0,g1:0,g2:0,glyphName:1,"glyph-name":"glyphName",glyphOrientationHorizontal:1,"glyph-orientation-horizontal":"glyphOrientationHorizontal",glyphOrientationVertical:1,"glyph-orientation-vertical":"glyphOrientationVertical",glyphRef:1,gradientTransform:1,gradientUnits:1,hanging:0,horizAdvX:1,"horiz-adv-x":"horizAdvX",horizOriginX:1,"horiz-origin-x":"horizOriginX",ideographic:0,imageRendering:1,"image-rendering":"imageRendering",in2:0,in:0,inlist:0,intercept:0,k1:0,k2:0,k3:0,k4:0,k:0,kernelMatrix:1,kernelUnitLength:1,kerning:0,keyPoints:1,keySplines:1,keyTimes:1,lengthAdjust:1,letterSpacing:1,"letter-spacing":"letterSpacing",lightingColor:1,"lighting-color":"lightingColor",limitingConeAngle:1,local:0,markerEnd:1,"marker-end":"markerEnd",markerHeight:1,markerMid:1,"marker-mid":"markerMid",markerStart:1,"marker-start":"markerStart",markerUnits:1,markerWidth:1,mask:0,maskContentUnits:1,maskUnits:1,mathematical:0,mode:0,numOctaves:1,offset:0,opacity:0,operator:0,order:0,orient:0,orientation:0,origin:0,overflow:0,overlinePosition:1,"overline-position":"overlinePosition",overlineThickness:1,"overline-thickness":"overlineThickness",paintOrder:1,"paint-order":"paintOrder",panose1:0,"panose-1":"panose1",pathLength:1,patternContentUnits:1,patternTransform:1,patternUnits:1,pointerEvents:1,"pointer-events":"pointerEvents",points:0,pointsAtX:1,pointsAtY:1,pointsAtZ:1,prefix:0,preserveAlpha:1,preserveAspectRatio:1,primitiveUnits:1,property:0,r:0,radius:0,refX:1,refY:1,renderingIntent:1,"rendering-intent":"renderingIntent",repeatCount:1,repeatDur:1,requiredExtensions:1,requiredFeatures:1,resource:0,restart:0,result:0,results:0,rotate:0,rx:0,ry:0,scale:0,security:0,seed:0,shapeRendering:1,"shape-rendering":"shapeRendering",slope:0,spacing:0,specularConstant:1,specularExponent:1,speed:0,spreadMethod:1,startOffset:1,stdDeviation:1,stemh:0,stemv:0,stitchTiles:1,stopColor:1,"stop-color":"stopColor",stopOpacity:1,"stop-opacity":"stopOpacity",strikethroughPosition:1,"strikethrough-position":"strikethroughPosition",strikethroughThickness:1,"strikethrough-thickness":"strikethroughThickness",string:0,stroke:0,strokeDasharray:1,"stroke-dasharray":"strokeDasharray",strokeDashoffset:1,"stroke-dashoffset":"strokeDashoffset",strokeLinecap:1,"stroke-linecap":"strokeLinecap",strokeLinejoin:1,"stroke-linejoin":"strokeLinejoin",strokeMiterlimit:1,"stroke-miterlimit":"strokeMiterlimit",strokeWidth:1,"stroke-width":"strokeWidth",strokeOpacity:1,"stroke-opacity":"strokeOpacity",suppressContentEditableWarning:1,suppressHydrationWarning:1,surfaceScale:1,systemLanguage:1,tableValues:1,targetX:1,targetY:1,textAnchor:1,"text-anchor":"textAnchor",textDecoration:1,"text-decoration":"textDecoration",textLength:1,textRendering:1,"text-rendering":"textRendering",to:0,transform:0,typeof:0,u1:0,u2:0,underlinePosition:1,"underline-position":"underlinePosition",underlineThickness:1,"underline-thickness":"underlineThickness",unicode:0,unicodeBidi:1,"unicode-bidi":"unicodeBidi",unicodeRange:1,"unicode-range":"unicodeRange",unitsPerEm:1,"units-per-em":"unitsPerEm",unselectable:0,vAlphabetic:1,"v-alphabetic":"vAlphabetic",values:0,vectorEffect:1,"vector-effect":"vectorEffect",version:0,vertAdvY:1,"vert-adv-y":"vertAdvY",vertOriginX:1,"vert-origin-x":"vertOriginX",vertOriginY:1,"vert-origin-y":"vertOriginY",vHanging:1,"v-hanging":"vHanging",vIdeographic:1,"v-ideographic":"vIdeographic",viewBox:1,viewTarget:1,visibility:0,vMathematical:1,"v-mathematical":"vMathematical",vocab:0,widths:0,wordSpacing:1,"word-spacing":"wordSpacing",writingMode:1,"writing-mode":"writingMode",x1:0,x2:0,x:0,xChannelSelector:1,xHeight:1,"x-height":"xHeight",xlinkActuate:1,"xlink:actuate":"xlinkActuate",xlinkArcrole:1,"xlink:arcrole":"xlinkArcrole",xlinkHref:1,"xlink:href":"xlinkHref",xlinkRole:1,"xlink:role":"xlinkRole",xlinkShow:1,"xlink:show":"xlinkShow",xlinkTitle:1,"xlink:title":"xlinkTitle",xlinkType:1,"xlink:type":"xlinkType",xmlBase:1,"xml:base":"xmlBase",xmlLang:1,"xml:lang":"xmlLang",xmlns:0,"xml:space":"xmlSpace",xmlnsXlink:1,"xmlns:xlink":"xmlnsXlink",xmlSpace:1,y1:0,y2:0,y:0,yChannelSelector:1,z:0,zoomAndPan:1}},374:function(e,t,n){"use strict";var o=n(791),a=Symbol.for("react.element"),r=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var o,r={},u=null,c=null;for(o in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)i.call(t,o)&&!l.hasOwnProperty(o)&&(r[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===r[o]&&(r[o]=t[o]);return{$$typeof:a,type:e,key:u,ref:c,props:r,_owner:s.current}}t.jsx=u,t.jsxs=u},117:function(e,t){"use strict";var n=Symbol.for("react.element"),o=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,y={};function g(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||f}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=g.prototype;var w=v.prototype=new b;w.constructor=v,m(w,g.prototype),w.isPureReactComponent=!0;var k=Array.isArray,x=Object.prototype.hasOwnProperty,T={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,o){var a,r={},i=null,s=null;if(null!=t)for(a in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(i=""+t.key),t)x.call(t,a)&&!C.hasOwnProperty(a)&&(r[a]=t[a]);var l=arguments.length-2;if(1===l)r.children=o;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];r.children=u}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===r[a]&&(r[a]=l[a]);return{$$typeof:n,type:e,key:i,ref:s,props:r,_owner:T.current}}function j(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var P=/\/+/g;function R(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function O(e,t,a,r,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case o:l=!0}}if(l)return i=i(l=e),e=""===r?"."+R(l,0):r,k(i)?(a="",null!=e&&(a=e.replace(P,"$&/")+"/"),O(i,t,a,"",(function(e){return e}))):null!=i&&(j(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(P,"$&/")+"/")+e)),t.push(i)),1;if(l=0,r=""===r?".":r+":",k(e))for(var u=0;u<e.length;u++){var c=r+R(s=e[u],u);l+=O(s,t,a,c,i)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(s=e.next()).done;)l+=O(s=s.value,t,a,c=r+R(s,u++),i);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function I(e,t,n){if(null==e)return e;var o=[],a=0;return O(e,o,"","",(function(e){return t.call(n,e,a++)})),o}function E(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var _={current:null},D={transition:null},A={ReactCurrentDispatcher:_,ReactCurrentBatchConfig:D,ReactCurrentOwner:T};t.Children={map:I,forEach:function(e,t,n){I(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return I(e,(function(){t++})),t},toArray:function(e){return I(e,(function(e){return e}))||[]},only:function(e){if(!j(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=g,t.Fragment=a,t.Profiler=i,t.PureComponent=v,t.StrictMode=r,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=A,t.cloneElement=function(e,t,o){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),r=e.key,i=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,s=T.current),void 0!==t.key&&(r=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)x.call(t,u)&&!C.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=o;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];a.children=l}return{$$typeof:n,type:e.type,key:r,ref:i,props:a,_owner:s}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=j,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:E}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return _.current.useCallback(e,t)},t.useContext=function(e){return _.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return _.current.useDeferredValue(e)},t.useEffect=function(e,t){return _.current.useEffect(e,t)},t.useId=function(){return _.current.useId()},t.useImperativeHandle=function(e,t,n){return _.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return _.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return _.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return _.current.useMemo(e,t)},t.useReducer=function(e,t,n){return _.current.useReducer(e,t,n)},t.useRef=function(e){return _.current.useRef(e)},t.useState=function(e){return _.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return _.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return _.current.useTransition()},t.version="18.2.0"},791:function(e,t,n){"use strict";e.exports=n(117)},184:function(e,t,n){"use strict";e.exports=n(374)},813:function(e,t){"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var o=n-1>>>1,a=e[o];if(!(0<r(a,t)))break e;e[o]=t,e[n]=a,n=o}}function o(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var o=0,a=e.length,i=a>>>1;o<i;){var s=2*(o+1)-1,l=e[s],u=s+1,c=e[u];if(0>r(l,n))u<a&&0>r(c,l)?(e[o]=c,e[u]=n,o=u):(e[o]=l,e[s]=n,o=s);else{if(!(u<a&&0>r(c,n)))break e;e[o]=c,e[u]=n,o=u}}}return t}function r(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}var u=[],c=[],d=1,h=null,p=3,f=!1,m=!1,y=!1,g="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function w(e){for(var t=o(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=o(c)}}function k(e){if(y=!1,w(e),!m)if(null!==o(u))m=!0,D(x);else{var t=o(c);null!==t&&A(k,t.startTime-e)}}function x(e,n){m=!1,y&&(y=!1,b(j),j=-1),f=!0;var r=p;try{for(w(n),h=o(u);null!==h&&(!(h.expirationTime>n)||e&&!O());){var i=h.callback;if("function"===typeof i){h.callback=null,p=h.priorityLevel;var s=i(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof s?h.callback=s:h===o(u)&&a(u),w(n)}else a(u);h=o(u)}if(null!==h)var l=!0;else{var d=o(c);null!==d&&A(k,d.startTime-n),l=!1}return l}finally{h=null,p=r,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var T,C=!1,S=null,j=-1,P=5,R=-1;function O(){return!(t.unstable_now()-R<P)}function I(){if(null!==S){var e=t.unstable_now();R=e;var n=!0;try{n=S(!0,e)}finally{n?T():(C=!1,S=null)}}else C=!1}if("function"===typeof v)T=function(){v(I)};else if("undefined"!==typeof MessageChannel){var E=new MessageChannel,_=E.port2;E.port1.onmessage=I,T=function(){_.postMessage(null)}}else T=function(){g(I,0)};function D(e){S=e,C||(C=!0,T())}function A(e,n){j=g((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,D(x))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return o(u)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,r){var i=t.unstable_now();switch("object"===typeof r&&null!==r?r="number"===typeof(r=r.delay)&&0<r?i+r:i:r=i,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:r,expirationTime:s=r+s,sortIndex:-1},r>i?(e.sortIndex=r,n(c,e),null===o(u)&&e===o(c)&&(y?(b(j),j=-1):y=!0,A(k,r-i))):(e.sortIndex=s,n(u,e),m||f||(m=!0,D(x))),e},t.unstable_shouldYield=O,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},296:function(e,t,n){"use strict";e.exports=n(813)},792:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};t.__esModule=!0;var a=o(n(426)),r=n(483);t.default=function(e,t){var n={};return e&&"string"===typeof e?((0,a.default)(e,(function(e,o){e&&o&&(n[(0,r.camelCase)(e,t)]=o)})),n):n}},483:function(e,t){"use strict";t.__esModule=!0,t.camelCase=void 0;var n=/^--[a-zA-Z0-9-]+$/,o=/-([a-z])/g,a=/^[^-]+$/,r=/^-(webkit|moz|ms|o|khtml)-/,i=/^-(ms)-/,s=function(e,t){return t.toUpperCase()},l=function(e,t){return"".concat(t,"-")};t.camelCase=function(e,t){return void 0===t&&(t={}),function(e){return!e||a.test(e)||n.test(e)}(e)?e:(e=e.toLowerCase(),(e=t.reactCompat?e.replace(i,l):e.replace(r,l)).replace(o,s))}},426:function(e,t,n){var o=n(65);function a(e,t){var n,a=null;if(!e||"string"!==typeof e)return a;for(var r,i,s=o(e),l="function"===typeof t,u=0,c=s.length;u<c;u++)r=(n=s[u]).property,i=n.value,l?t(r,i,n):i&&(a||(a={}),a[r]=i);return a}e.exports=a,e.exports.default=a}},t={};function n(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={exports:{}};return e[o].call(r.exports,r,r.exports,n),r.exports}n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},function(){var e,t=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};n.t=function(o,a){if(1&a&&(o=this(o)),8&a)return o;if("object"===typeof o&&o){if(4&a&&o.__esModule)return o;if(16&a&&"function"===typeof o.then)return o}var r=Object.create(null);n.r(r);var i={};e=e||[null,t({}),t([]),t(t)];for(var s=2&a&&o;"object"==typeof s&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach((function(e){i[e]=function(){return o[e]}}));return i.default=function(){return o},n.d(r,i),r}}(),n.d=function(e,t){for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){"use strict";var e,t=n(791),o=n.t(t,2),a=n(250);function r(e){if(Array.isArray(e))return e}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function s(e,t){if(e){if("string"===typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?i(e,t):void 0}}function l(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function u(e,t){return r(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var o,a,r,i,s=[],l=!0,u=!1;try{if(r=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(o=r.call(n)).done)&&(s.push(o.value),s.length!==t);l=!0);}catch(e){u=!0,a=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw a}}return s}}(e,t)||s(e,t)||l()}function c(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function d(e){return function(e){if(Array.isArray(e))return i(e)}(e)||c(e)||s(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function f(e){var t=function(e,t){if("object"!=p(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,t||"default");if("object"!=p(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==p(t)?t:String(t)}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,f(o.key),o)}}function y(e,t,n){return t&&m(e.prototype,t),n&&m(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function b(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}function w(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(w=function(){return!!e})()}function k(e,t){if(t&&("object"===p(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){var t=w();return function(){var n,o=v(e);if(t){var a=v(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return k(this,n)}}function T(e){var t="function"===typeof Map?new Map:void 0;return T=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf("[native code]")}catch(t){return"function"===typeof e}}(e))return e;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return function(e,t,n){if(w())return Reflect.construct.apply(null,arguments);var o=[null];o.push.apply(o,t);var a=new(e.bind.apply(e,o));return n&&g(a,n.prototype),a}(e,arguments,v(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),g(n,e)},T(e)}function C(){return C=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},C.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(e||(e={}));var S,j="popstate";function P(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function R(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function O(e,t){return{usr:e.state,key:e.key,idx:t}}function I(e,t,n,o){return void 0===n&&(n=null),C({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?_(t):t,{state:n,key:t&&t.key||o||Math.random().toString(36).substr(2,8)})}function E(e){var t=e.pathname,n=void 0===t?"/":t,o=e.search,a=void 0===o?"":o,r=e.hash,i=void 0===r?"":r;return a&&"?"!==a&&(n+="?"===a.charAt(0)?a:"?"+a),i&&"#"!==i&&(n+="#"===i.charAt(0)?i:"#"+i),n}function _(e){var t={};if(e){var n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));var o=e.indexOf("?");o>=0&&(t.search=e.substr(o),e=e.substr(0,o)),e&&(t.pathname=e)}return t}function D(t,n,o,a){void 0===a&&(a={});var r=a,i=r.window,s=void 0===i?document.defaultView:i,l=r.v5Compat,u=void 0!==l&&l,c=s.history,d=e.Pop,h=null,p=f();function f(){return(c.state||{idx:null}).idx}function m(){d=e.Pop;var t=f(),n=null==t?null:t-p;p=t,h&&h({action:d,location:g.location,delta:n})}function y(e){var t="null"!==s.location.origin?s.location.origin:s.location.href,n="string"===typeof e?e:E(e);return P(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==p&&(p=0,c.replaceState(C({},c.state,{idx:p}),""));var g={get action(){return d},get location(){return t(s,c)},listen:function(e){if(h)throw new Error("A history only accepts one active listener");return s.addEventListener(j,m),h=e,function(){s.removeEventListener(j,m),h=null}},createHref:function(e){return n(s,e)},createURL:y,encodeLocation:function(e){var t=y(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(t,n){d=e.Push;var a=I(g.location,t,n);o&&o(a,t);var r=O(a,p=f()+1),i=g.createHref(a);try{c.pushState(r,"",i)}catch(l){if(l instanceof DOMException&&"DataCloneError"===l.name)throw l;s.location.assign(i)}u&&h&&h({action:d,location:g.location,delta:1})},replace:function(t,n){d=e.Replace;var a=I(g.location,t,n);o&&o(a,t);var r=O(a,p=f()),i=g.createHref(a);c.replaceState(r,"",i),u&&h&&h({action:d,location:g.location,delta:0})},go:function(e){return c.go(e)}};return g}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(S||(S={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function A(e,t,n){void 0===n&&(n="/");var o=G(("string"===typeof t?_(t):t).pathname||"/",n);if(null==o)return null;var a=N(e);!function(e){e.sort((function(e,t){return e.score!==t.score?t.score-e.score:function(e,t){var n=e.length===t.length&&e.slice(0,-1).every((function(e,n){return e===t[n]}));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((function(e){return e.childrenIndex})),t.routesMeta.map((function(e){return e.childrenIndex})))}))}(a);for(var r=null,i=0;null==r&&i<a.length;++i)r=U(a[i],q(o));return r}function N(e,t,n,o){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===o&&(o="");var a=function(e,a,r){var i={relativePath:void 0===r?e.path||"":r,caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};i.relativePath.startsWith("/")&&(P(i.relativePath.startsWith(o),'Absolute route path "'+i.relativePath+'" nested under path "'+o+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),i.relativePath=i.relativePath.slice(o.length));var s=$([o,i.relativePath]),l=n.concat(i);e.children&&e.children.length>0&&(P(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+s+'".'),N(e.children,t,l,s)),(null!=e.path||e.index)&&t.push({path:s,score:X(s,e.index),routesMeta:l})};return e.forEach((function(e,t){var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?")){var o,r=function(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=s(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var o=0,a=function(){};return{s:a,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,i=!0,l=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){l=!0,r=e},f:function(){try{i||null==n.return||n.return()}finally{if(l)throw r}}}}(L(e.path));try{for(r.s();!(o=r.n()).done;){var i=o.value;a(e,t,i)}}catch(l){r.e(l)}finally{r.f()}}else a(e,t)})),t}function L(e){var t=e.split("/");if(0===t.length)return[];var n,o=r(n=t)||c(n)||s(n)||l(),a=o[0],i=o.slice(1),u=a.endsWith("?"),h=a.replace(/\?$/,"");if(0===i.length)return u?[h,""]:[h];var p=L(i.join("/")),f=[];return f.push.apply(f,d(p.map((function(e){return""===e?h:[h,e].join("/")})))),u&&f.push.apply(f,d(p)),f.map((function(t){return e.startsWith("/")&&""===t?"/":t}))}var z=/^:\w+$/,M=3,F=2,W=1,B=10,H=-2,Y=function(e){return"*"===e};function X(e,t){var n=e.split("/"),o=n.length;return n.some(Y)&&(o+=H),t&&(o+=F),n.filter((function(e){return!Y(e)})).reduce((function(e,t){return e+(z.test(t)?M:""===t?W:B)}),o)}function U(e,t){for(var n=e.routesMeta,o={},a="/",r=[],i=0;i<n.length;++i){var s=n[i],l=i===n.length-1,u="/"===a?t:t.slice(a.length)||"/",c=V({path:s.relativePath,caseSensitive:s.caseSensitive,end:l},u);if(!c)return null;Object.assign(o,c.params);var d=s.route;r.push({params:o,pathname:$([a,c.pathname]),pathnameBase:J($([a,c.pathnameBase])),route:d}),"/"!==c.pathnameBase&&(a=$([a,c.pathnameBase]))}return r}function V(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});var n=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);R("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');var o=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/\/:(\w+)/g,(function(e,t){return o.push(t),"/([^\\/]+)"}));e.endsWith("*")?(o.push("*"),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?a+="\\/*$":""!==e&&"/"!==e&&(a+="(?:(?=\\/|$))");var r=new RegExp(a,t?void 0:"i");return[r,o]}(e.path,e.caseSensitive,e.end),o=u(n,2),a=o[0],r=o[1],i=t.match(a);if(!i)return null;var s=i[0],l=s.replace(/(.)\/+$/,"$1"),c=i.slice(1);return{params:r.reduce((function(e,t,n){if("*"===t){var o=c[n]||"";l=s.slice(0,s.length-o.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(n){return R(!1,'The value for the URL param "'+t+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}(c[n]||"",t),e}),{}),pathname:s,pathnameBase:l,pattern:e}}function q(e){try{return decodeURI(e)}catch(t){return R(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function G(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;var n=t.endsWith("/")?t.length-1:t.length,o=e.charAt(n);return o&&"/"!==o?null:e.slice(n)||"/"}var $=function(e){return e.join("/").replace(/\/\/+/g,"/")},J=function(e){return e.replace(/\/+$/,"").replace(/^\/*/,"/")},Q=function(e){b(n,e);var t=x(n);function n(){return h(this,n),t.apply(this,arguments)}return y(n)}(T(Error));function K(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}var Z=["post","put","patch","delete"],ee=(new Set(Z),["get"].concat(Z));new Set(ee),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function te(){return te=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},te.apply(this,arguments)}var ne=t.createContext(null);var oe=t.createContext(null);var ae=t.createContext(null);var re=t.createContext(null);var ie=t.createContext(null);var se=t.createContext({outlet:null,matches:[],isDataRoute:!1});var le=t.createContext(null);function ue(){return null!=t.useContext(ie)}function ce(){return ue()||P(!1),t.useContext(ie).location}function de(n,o,a){ue()||P(!1);var r,i=t.useContext(re).navigator,s=t.useContext(se).matches,l=s[s.length-1],u=l?l.params:{},c=(l&&l.pathname,l?l.pathnameBase:"/"),d=(l&&l.route,ce());if(o){var h,p="string"===typeof o?_(o):o;"/"===c||(null==(h=p.pathname)?void 0:h.startsWith(c))||P(!1),r=p}else r=d;var f=r.pathname||"/",m=A(n,{pathname:"/"===c?f:f.slice(c.length)||"/"});var y=be(m&&m.map((function(e){return Object.assign({},e,{params:Object.assign({},u,e.params),pathname:$([c,i.encodeLocation?i.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?c:$([c,i.encodeLocation?i.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])})})),s,a);return o&&y?t.createElement(ie.Provider,{value:{location:te({pathname:"/",search:"",hash:"",state:null,key:"default"},r),navigationType:e.Pop}},y):y}function he(){var e=function(){var e,n=t.useContext(le),o=ve(fe.UseRouteError),a=we(fe.UseRouteError);if(n)return n;return null==(e=o.errors)?void 0:e[a]}(),n=K(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),o=e instanceof Error?e.stack:null,a="rgba(200,200,200, 0.5)",r={padding:"0.5rem",backgroundColor:a};return t.createElement(t.Fragment,null,t.createElement("h2",null,"Unexpected Application Error!"),t.createElement("h3",{style:{fontStyle:"italic"}},n),o?t.createElement("pre",{style:r},o):null,null)}var pe,fe,me=t.createElement(he,null),ye=function(e){b(o,e);var n=x(o);function o(e){var t;return h(this,o),(t=n.call(this,e)).state={location:e.location,revalidation:e.revalidation,error:e.error},t}return y(o,[{key:"componentDidCatch",value:function(e,t){console.error("React Router caught the following error during render",e,t)}},{key:"render",value:function(){return this.state.error?t.createElement(se.Provider,{value:this.props.routeContext},t.createElement(le.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}],[{key:"getDerivedStateFromError",value:function(e){return{error:e}}},{key:"getDerivedStateFromProps",value:function(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}}]),o}(t.Component);function ge(e){var n=e.routeContext,o=e.match,a=e.children,r=t.useContext(ne);return r&&r.static&&r.staticContext&&(o.route.errorElement||o.route.ErrorBoundary)&&(r.staticContext._deepestRenderedBoundaryId=o.route.id),t.createElement(se.Provider,{value:n},a)}function be(e,n,o){var a;if(void 0===n&&(n=[]),void 0===o&&(o=null),null==e){var r;if(null==(r=o)||!r.errors)return null;e=o.matches}var i=e,s=null==(a=o)?void 0:a.errors;if(null!=s){var l=i.findIndex((function(e){return e.route.id&&(null==s?void 0:s[e.route.id])}));l>=0||P(!1),i=i.slice(0,Math.min(i.length,l+1))}return i.reduceRight((function(e,a,r){var l=a.route.id?null==s?void 0:s[a.route.id]:null,u=null;o&&(u=a.route.errorElement||me);var c=n.concat(i.slice(0,r+1)),d=function(){var n;return n=l?u:a.route.Component?t.createElement(a.route.Component,null):a.route.element?a.route.element:e,t.createElement(ge,{match:a,routeContext:{outlet:e,matches:c,isDataRoute:null!=o},children:n})};return o&&(a.route.ErrorBoundary||a.route.errorElement||0===r)?t.createElement(ye,{location:o.location,revalidation:o.revalidation,component:u,error:l,children:d(),routeContext:{outlet:null,matches:c,isDataRoute:!0}}):d()}),null)}function ve(e){var n=t.useContext(oe);return n||P(!1),n}function we(e){var n=function(e){var n=t.useContext(se);return n||P(!1),n}(),o=n.matches[n.matches.length-1];return o.route.id||P(!1),o.route.id}!function(e){e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate"}(pe||(pe={})),function(e){e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId"}(fe||(fe={}));var ke;o.startTransition;function xe(e){P(!1)}function Te(n){var o=n.basename,a=void 0===o?"/":o,r=n.children,i=void 0===r?null:r,s=n.location,l=n.navigationType,u=void 0===l?e.Pop:l,c=n.navigator,d=n.static,h=void 0!==d&&d;ue()&&P(!1);var p=a.replace(/^\/*/,"/"),f=t.useMemo((function(){return{basename:p,navigator:c,static:h}}),[p,c,h]);"string"===typeof s&&(s=_(s));var m=s,y=m.pathname,g=void 0===y?"/":y,b=m.search,v=void 0===b?"":b,w=m.hash,k=void 0===w?"":w,x=m.state,T=void 0===x?null:x,C=m.key,S=void 0===C?"default":C,j=t.useMemo((function(){var e=G(g,p);return null==e?null:{location:{pathname:e,search:v,hash:k,state:T,key:S},navigationType:u}}),[p,g,v,k,T,S,u]);return null==j?null:t.createElement(re.Provider,{value:f},t.createElement(ie.Provider,{children:i,value:j}))}function Ce(e){var t=e.children,n=e.location;return de(je(t),n)}!function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(ke||(ke={}));var Se=new Promise((function(){}));t.Component;function je(e,n){void 0===n&&(n=[]);var o=[];return t.Children.forEach(e,(function(e,a){if(t.isValidElement(e)){var r=[].concat(d(n),[a]);if(e.type!==t.Fragment){e.type!==xe&&P(!1),e.props.index&&e.props.children&&P(!1);var i={id:e.props.id||r.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(i.children=je(e.props.children,r)),o.push(i)}else o.push.apply(o,je(e.props.children,r))}})),o}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);var Pe=o.startTransition;function Re(e){var n,o=e.basename,a=e.children,r=e.future,i=e.window,s=t.useRef();null==s.current&&(s.current=(void 0===(n={window:i,v5Compat:!0})&&(n={}),D((function(e,t){var n=_(e.location.hash.substr(1)),o=n.pathname,a=void 0===o?"/":o,r=n.search,i=void 0===r?"":r,s=n.hash;return I("",{pathname:a,search:i,hash:void 0===s?"":s},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){var n=e.document.querySelector("base"),o="";if(n&&n.getAttribute("href")){var a=e.location.href,r=a.indexOf("#");o=-1===r?a:a.slice(0,r)}return o+"#"+("string"===typeof t?t:E(t))}),(function(e,t){R("/"===e.pathname.charAt(0),"relative pathnames are not supported in hash history.push("+JSON.stringify(t)+")")}),n)));var l=s.current,c=u(t.useState({action:l.action,location:l.location}),2),d=c[0],h=c[1],p=(r||{}).v7_startTransition,f=t.useCallback((function(e){p&&Pe?Pe((function(){return h(e)})):h(e)}),[h,p]);return t.useLayoutEffect((function(){return l.listen(f)}),[l,f]),t.createElement(Te,{basename:o,children:a,location:d.location,navigationType:d.action,navigator:l})}"undefined"!==typeof window&&"undefined"!==typeof window.document&&window.document.createElement;var Oe,Ie;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher"})(Oe||(Oe={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Ie||(Ie={}));function Ee(){return Ee=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},Ee.apply(this,arguments)}function _e(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}function De(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e)){var a=e.length;for(t=0;t<a;t++)e[t]&&(n=De(e[t]))&&(o&&(o+=" "),o+=n)}else for(n in e)e[n]&&(o&&(o+=" "),o+=n);return o}var Ae=function(){for(var e,t,n=0,o="",a=arguments.length;n<a;n++)(e=arguments[n])&&(t=De(e))&&(o&&(o+=" "),o+=t);return o};function Ne(e){for(var t="https://mui.com/production-error/?code="+e,n=1;n<arguments.length;n+=1)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified MUI error #"+e+"; visit "+t+" for the full message."}function Le(e){if("string"!==typeof e)throw new Error(Ne(7));return e.charAt(0).toUpperCase()+e.slice(1)}var ze=Le;function Me(e,t){var n=Ee({},t);return Object.keys(e).forEach((function(o){if(o.toString().match(/^(components|slots)$/))n[o]=Ee({},e[o],n[o]);else if(o.toString().match(/^(componentsProps|slotProps)$/)){var a=e[o]||{},r=t[o];n[o]={},r&&Object.keys(r)?a&&Object.keys(a)?(n[o]=Ee({},r),Object.keys(a).forEach((function(e){n[o][e]=Me(a[e],r[e])}))):n[o]=r:n[o]=a}else void 0===n[o]&&(n[o]=e[o])})),n}function Fe(e){var t=e.theme,n=e.name,o=e.props;return t&&t.components&&t.components[n]&&t.components[n].defaultProps?Me(t.components[n].defaultProps,o):o}function We(e){if("object"!==typeof e||null===e)return!1;var t=Object.getPrototypeOf(e);return(null===t||t===Object.prototype||null===Object.getPrototypeOf(t))&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)}function Be(e){if(!We(e))return e;var t={};return Object.keys(e).forEach((function(n){t[n]=Be(e[n])})),t}function He(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{clone:!0},o=n.clone?Ee({},e):e;return We(e)&&We(t)&&Object.keys(t).forEach((function(a){"__proto__"!==a&&(We(t[a])&&a in e&&We(e[a])?o[a]=He(e[a],t[a],n):n.clone?o[a]=We(t[a])?Be(t[a]):t[a]:o[a]=t[a])})),o}function Ye(e,t,n){return(t=f(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Xe=["values","unit","step"],Ue=function(e){var t=Object.keys(e).map((function(t){return{key:t,val:e[t]}}))||[];return t.sort((function(e,t){return e.val-t.val})),t.reduce((function(e,t){return Ee({},e,Ye({},t.key,t.val))}),{})};var Ve={borderRadius:4},qe={xs:0,sm:600,md:900,lg:1200,xl:1536},Ge={keys:["xs","sm","md","lg","xl"],up:function(e){return"@media (min-width:".concat(qe[e],"px)")}};function $e(e,t,n){var o=e.theme||{};if(Array.isArray(t)){var a=o.breakpoints||Ge;return t.reduce((function(e,o,r){return e[a.up(a.keys[r])]=n(t[r]),e}),{})}if("object"===typeof t){var r=o.breakpoints||Ge;return Object.keys(t).reduce((function(e,o){if(-1!==Object.keys(r.values||qe).indexOf(o)){e[r.up(o)]=n(t[o],o)}else{var a=o;e[a]=t[a]}return e}),{})}return n(t)}function Je(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=null==(e=t.keys)?void 0:e.reduce((function(e,n){return e[t.up(n)]={},e}),{});return n||{}}function Qe(e,t){return e.reduce((function(e,t){var n=e[t];return(!n||0===Object.keys(n).length)&&delete e[t],e}),t)}function Ke(e,t){var n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!t||"string"!==typeof t)return null;if(e&&e.vars&&n){var o="vars.".concat(t).split(".").reduce((function(e,t){return e&&e[t]?e[t]:null}),e);if(null!=o)return o}return t.split(".").reduce((function(e,t){return e&&null!=e[t]?e[t]:null}),e)}function Ze(e,t,n){var o,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n;return o="function"===typeof e?e(n):Array.isArray(e)?e[n]||a:Ke(e,n)||a,t&&(o=t(o,a,e)),o}var et=function(e){var t=e.prop,n=e.cssProperty,o=void 0===n?e.prop:n,a=e.themeKey,r=e.transform,i=function(e){if(null==e[t])return null;var n=e[t],i=Ke(e.theme,a)||{};return $e(e,n,(function(e){var n=Ze(i,r,e);return e===n&&"string"===typeof e&&(n=Ze(i,r,"".concat(t).concat("default"===e?"":Le(e)),e)),!1===o?n:Ye({},o,n)}))};return i.propTypes={},i.filterProps=[t],i};var tt=function(e,t){return t?He(e,t,{clone:!1}):e};var nt={m:"margin",p:"padding"},ot={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},at={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},rt=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}((function(e){if(e.length>2){if(!at[e])return[e];e=at[e]}var t=u(e.split(""),2),n=t[0],o=t[1],a=nt[n],r=ot[o]||"";return Array.isArray(r)?r.map((function(e){return a+e})):[a+r]})),it=["m","mt","mr","mb","ml","mx","my","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd"],st=["p","pt","pr","pb","pl","px","py","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd"],lt=[].concat(it,st);function ut(e,t,n,o){var a,r=null!=(a=Ke(e,t,!1))?a:n;return"number"===typeof r?function(e){return"string"===typeof e?e:r*e}:Array.isArray(r)?function(e){return"string"===typeof e?e:r[e]}:"function"===typeof r?r:function(){}}function ct(e){return ut(e,"spacing",8)}function dt(e,t){if("string"===typeof t||null==t)return t;var n=e(Math.abs(t));return t>=0?n:"number"===typeof n?-n:"-".concat(n)}function ht(e,t,n,o){if(-1===t.indexOf(n))return null;var a=function(e,t){return function(n){return e.reduce((function(e,o){return e[o]=dt(t,n),e}),{})}}(rt(n),o);return $e(e,e[n],a)}function pt(e,t){var n=ct(e.theme);return Object.keys(e).map((function(o){return ht(e,t,o,n)})).reduce(tt,{})}function ft(e){return pt(e,it)}function mt(e){return pt(e,st)}function yt(e){return pt(e,lt)}ft.propTypes={},ft.filterProps=it,mt.propTypes={},mt.filterProps=st,yt.propTypes={},yt.filterProps=lt;var gt=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var o=t.reduce((function(e,t){return t.filterProps.forEach((function(n){e[n]=t})),e}),{}),a=function(e){return Object.keys(e).reduce((function(t,n){return o[n]?tt(t,o[n](e)):t}),{})};return a.propTypes={},a.filterProps=t.reduce((function(e,t){return e.concat(t.filterProps)}),[]),a};function bt(e){return"number"!==typeof e?e:"".concat(e,"px solid")}function vt(e,t){return et({prop:e,themeKey:"borders",transform:t})}var wt=vt("border",bt),kt=vt("borderTop",bt),xt=vt("borderRight",bt),Tt=vt("borderBottom",bt),Ct=vt("borderLeft",bt),St=vt("borderColor"),jt=vt("borderTopColor"),Pt=vt("borderRightColor"),Rt=vt("borderBottomColor"),Ot=vt("borderLeftColor"),It=vt("outline",bt),Et=vt("outlineColor"),_t=function(e){if(void 0!==e.borderRadius&&null!==e.borderRadius){var t=ut(e.theme,"shape.borderRadius",4);return $e(e,e.borderRadius,(function(e){return{borderRadius:dt(t,e)}}))}return null};_t.propTypes={},_t.filterProps=["borderRadius"];gt(wt,kt,xt,Tt,Ct,St,jt,Pt,Rt,Ot,_t,It,Et);var Dt=function(e){if(void 0!==e.gap&&null!==e.gap){var t=ut(e.theme,"spacing",8);return $e(e,e.gap,(function(e){return{gap:dt(t,e)}}))}return null};Dt.propTypes={},Dt.filterProps=["gap"];var At=function(e){if(void 0!==e.columnGap&&null!==e.columnGap){var t=ut(e.theme,"spacing",8);return $e(e,e.columnGap,(function(e){return{columnGap:dt(t,e)}}))}return null};At.propTypes={},At.filterProps=["columnGap"];var Nt=function(e){if(void 0!==e.rowGap&&null!==e.rowGap){var t=ut(e.theme,"spacing",8);return $e(e,e.rowGap,(function(e){return{rowGap:dt(t,e)}}))}return null};Nt.propTypes={},Nt.filterProps=["rowGap"];gt(Dt,At,Nt,et({prop:"gridColumn"}),et({prop:"gridRow"}),et({prop:"gridAutoFlow"}),et({prop:"gridAutoColumns"}),et({prop:"gridAutoRows"}),et({prop:"gridTemplateColumns"}),et({prop:"gridTemplateRows"}),et({prop:"gridTemplateAreas"}),et({prop:"gridArea"}));function Lt(e,t){return"grey"===t?t:e}gt(et({prop:"color",themeKey:"palette",transform:Lt}),et({prop:"bgcolor",cssProperty:"backgroundColor",themeKey:"palette",transform:Lt}),et({prop:"backgroundColor",themeKey:"palette",transform:Lt}));function zt(e){return e<=1&&0!==e?"".concat(100*e,"%"):e}var Mt=et({prop:"width",transform:zt}),Ft=function(e){if(void 0!==e.maxWidth&&null!==e.maxWidth){return $e(e,e.maxWidth,(function(t){var n,o,a=(null==(n=e.theme)||null==(n=n.breakpoints)||null==(n=n.values)?void 0:n[t])||qe[t];return a?"px"!==(null==(o=e.theme)||null==(o=o.breakpoints)?void 0:o.unit)?{maxWidth:"".concat(a).concat(e.theme.breakpoints.unit)}:{maxWidth:a}:{maxWidth:zt(t)}}))}return null};Ft.filterProps=["maxWidth"];var Wt=et({prop:"minWidth",transform:zt}),Bt=et({prop:"height",transform:zt}),Ht=et({prop:"maxHeight",transform:zt}),Yt=et({prop:"minHeight",transform:zt}),Xt=(et({prop:"size",cssProperty:"width",transform:zt}),et({prop:"size",cssProperty:"height",transform:zt}),gt(Mt,Ft,Wt,Bt,Ht,Yt,et({prop:"boxSizing"})),{border:{themeKey:"borders",transform:bt},borderTop:{themeKey:"borders",transform:bt},borderRight:{themeKey:"borders",transform:bt},borderBottom:{themeKey:"borders",transform:bt},borderLeft:{themeKey:"borders",transform:bt},borderColor:{themeKey:"palette"},borderTopColor:{themeKey:"palette"},borderRightColor:{themeKey:"palette"},borderBottomColor:{themeKey:"palette"},borderLeftColor:{themeKey:"palette"},outline:{themeKey:"borders",transform:bt},outlineColor:{themeKey:"palette"},borderRadius:{themeKey:"shape.borderRadius",style:_t},color:{themeKey:"palette",transform:Lt},bgcolor:{themeKey:"palette",cssProperty:"backgroundColor",transform:Lt},backgroundColor:{themeKey:"palette",transform:Lt},p:{style:mt},pt:{style:mt},pr:{style:mt},pb:{style:mt},pl:{style:mt},px:{style:mt},py:{style:mt},padding:{style:mt},paddingTop:{style:mt},paddingRight:{style:mt},paddingBottom:{style:mt},paddingLeft:{style:mt},paddingX:{style:mt},paddingY:{style:mt},paddingInline:{style:mt},paddingInlineStart:{style:mt},paddingInlineEnd:{style:mt},paddingBlock:{style:mt},paddingBlockStart:{style:mt},paddingBlockEnd:{style:mt},m:{style:ft},mt:{style:ft},mr:{style:ft},mb:{style:ft},ml:{style:ft},mx:{style:ft},my:{style:ft},margin:{style:ft},marginTop:{style:ft},marginRight:{style:ft},marginBottom:{style:ft},marginLeft:{style:ft},marginX:{style:ft},marginY:{style:ft},marginInline:{style:ft},marginInlineStart:{style:ft},marginInlineEnd:{style:ft},marginBlock:{style:ft},marginBlockStart:{style:ft},marginBlockEnd:{style:ft},displayPrint:{cssProperty:!1,transform:function(e){return{"@media print":{display:e}}}},display:{},overflow:{},textOverflow:{},visibility:{},whiteSpace:{},flexBasis:{},flexDirection:{},flexWrap:{},justifyContent:{},alignItems:{},alignContent:{},order:{},flex:{},flexGrow:{},flexShrink:{},alignSelf:{},justifyItems:{},justifySelf:{},gap:{style:Dt},rowGap:{style:Nt},columnGap:{style:At},gridColumn:{},gridRow:{},gridAutoFlow:{},gridAutoColumns:{},gridAutoRows:{},gridTemplateColumns:{},gridTemplateRows:{},gridTemplateAreas:{},gridArea:{},position:{},zIndex:{themeKey:"zIndex"},top:{},right:{},bottom:{},left:{},boxShadow:{themeKey:"shadows"},width:{transform:zt},maxWidth:{style:Ft},minWidth:{transform:zt},height:{transform:zt},maxHeight:{transform:zt},minHeight:{transform:zt},boxSizing:{},fontFamily:{themeKey:"typography"},fontSize:{themeKey:"typography"},fontStyle:{themeKey:"typography"},fontWeight:{themeKey:"typography"},letterSpacing:{},textTransform:{},lineHeight:{},textAlign:{},typography:{cssProperty:!1,themeKey:"typography"}});var Ut=function(){function e(e,t,n,o){var a,r=(Ye(a={},e,t),Ye(a,"theme",n),a),i=o[e];if(!i)return Ye({},e,t);var s=i.cssProperty,l=void 0===s?e:s,u=i.themeKey,c=i.transform,d=i.style;if(null==t)return null;if("typography"===u&&"inherit"===t)return Ye({},e,t);var h=Ke(n,u)||{};if(d)return d(r);return $e(r,t,(function(t){var n=Ze(h,c,t);return t===n&&"string"===typeof t&&(n=Ze(h,c,"".concat(e).concat("default"===t?"":Le(t)),t)),!1===l?n:Ye({},l,n)}))}return function t(n){var o,a=n||{},r=a.sx,i=a.theme,s=void 0===i?{}:i;if(!r)return null;var l=null!=(o=s.unstable_sxConfig)?o:Xt;function u(n){var o=n;if("function"===typeof n)o=n(s);else if("object"!==typeof n)return n;if(!o)return null;var a=Je(s.breakpoints),r=Object.keys(a),i=a;return Object.keys(o).forEach((function(n){var a,r,u=(a=o[n],r=s,"function"===typeof a?a(r):a);if(null!==u&&void 0!==u)if("object"===typeof u)if(l[n])i=tt(i,e(n,u,s,l));else{var c=$e({theme:s},u,(function(e){return Ye({},n,e)}));!function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var o=t.reduce((function(e,t){return e.concat(Object.keys(t))}),[]),a=new Set(o);return t.every((function(e){return a.size===Object.keys(e).length}))}(c,u)?i=tt(i,c):i[n]=t({sx:u,theme:s})}else i=tt(i,e(n,u,s,l))})),Qe(r,i)}return Array.isArray(r)?r.map(u):u(r)}}();Ut.filterProps=["sx"];var Vt=Ut,qt=["breakpoints","palette","spacing","shape"];var Gt=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.breakpoints,n=void 0===t?{}:t,o=e.palette,a=void 0===o?{}:o,r=e.spacing,i=e.shape,s=void 0===i?{}:i,l=_e(e,qt),u=function(e){var t=e.values,n=void 0===t?{xs:0,sm:600,md:900,lg:1200,xl:1536}:t,o=e.unit,a=void 0===o?"px":o,r=e.step,i=void 0===r?5:r,s=_e(e,Xe),l=Ue(n),u=Object.keys(l);function c(e){var t="number"===typeof n[e]?n[e]:e;return"@media (min-width:".concat(t).concat(a,")")}function d(e){var t="number"===typeof n[e]?n[e]:e;return"@media (max-width:".concat(t-i/100).concat(a,")")}function h(e,t){var o=u.indexOf(t);return"@media (min-width:".concat("number"===typeof n[e]?n[e]:e).concat(a,") and ")+"(max-width:".concat((-1!==o&&"number"===typeof n[u[o]]?n[u[o]]:t)-i/100).concat(a,")")}return Ee({keys:u,values:l,up:c,down:d,between:h,only:function(e){return u.indexOf(e)+1<u.length?h(e,u[u.indexOf(e)+1]):c(e)},not:function(e){var t=u.indexOf(e);return 0===t?c(u[1]):t===u.length-1?d(u[t]):h(e,u[u.indexOf(e)+1]).replace("@media","@media not all and")},unit:a},s)}(n),c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8;if(e.mui)return e;var t=ct({spacing:e}),n=function(){for(var e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];return(0===n.length?[1]:n).map((function(e){var n=t(e);return"number"===typeof n?"".concat(n,"px"):n})).join(" ")};return n.mui=!0,n}(r),d=He({breakpoints:u,direction:"ltr",components:{},palette:Ee({mode:"light"},a),spacing:c,shape:Ee({},Ve,s)},l),h=arguments.length,p=new Array(h>1?h-1:0),f=1;f<h;f++)p[f-1]=arguments[f];return(d=p.reduce((function(e,t){return He(e,t)}),d)).unstable_sxConfig=Ee({},Xt,null==l?void 0:l.unstable_sxConfig),d.unstable_sx=function(e){return Vt({sx:e,theme:this})},d};var $t=function(){function e(e){var t=this;this._insertTag=function(e){var n;n=0===t.tags.length?t.insertionPoint?t.insertionPoint.nextSibling:t.prepend?t.container.firstChild:t.before:t.tags[t.tags.length-1].nextSibling,t.container.insertBefore(e,n),t.tags.push(e)},this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.prepend=e.prepend,this.insertionPoint=e.insertionPoint,this.before=null}var t=e.prototype;return t.hydrate=function(e){e.forEach(this._insertTag)},t.insert=function(e){this.ctr%(this.isSpeedy?65e3:1)===0&&this._insertTag(function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t.setAttribute("data-s",""),t}(this));var t=this.tags[this.tags.length-1];if(this.isSpeedy){var n=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(t);try{n.insertRule(e,n.cssRules.length)}catch(o){0}}else t.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode&&e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}(),Jt=Math.abs,Qt=String.fromCharCode,Kt=Object.assign;function Zt(e){return e.trim()}function en(e,t,n){return e.replace(t,n)}function tn(e,t){return e.indexOf(t)}function nn(e,t){return 0|e.charCodeAt(t)}function on(e,t,n){return e.slice(t,n)}function an(e){return e.length}function rn(e){return e.length}function sn(e,t){return t.push(e),e}var ln=1,un=1,cn=0,dn=0,hn=0,pn="";function fn(e,t,n,o,a,r,i){return{value:e,root:t,parent:n,type:o,props:a,children:r,line:ln,column:un,length:i,return:""}}function mn(e,t){return Kt(fn("",null,null,"",null,null,0),e,{length:-e.length},t)}function yn(){return hn=dn>0?nn(pn,--dn):0,un--,10===hn&&(un=1,ln--),hn}function gn(){return hn=dn<cn?nn(pn,dn++):0,un++,10===hn&&(un=1,ln++),hn}function bn(){return nn(pn,dn)}function vn(){return dn}function wn(e,t){return on(pn,e,t)}function kn(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function xn(e){return ln=un=1,cn=an(pn=e),dn=0,[]}function Tn(e){return pn="",e}function Cn(e){return Zt(wn(dn-1,Pn(91===e?e+2:40===e?e+1:e)))}function Sn(e){for(;(hn=bn())&&hn<33;)gn();return kn(e)>2||kn(hn)>3?"":" "}function jn(e,t){for(;--t&&gn()&&!(hn<48||hn>102||hn>57&&hn<65||hn>70&&hn<97););return wn(e,vn()+(t<6&&32==bn()&&32==gn()))}function Pn(e){for(;gn();)switch(hn){case e:return dn;case 34:case 39:34!==e&&39!==e&&Pn(hn);break;case 40:41===e&&Pn(e);break;case 92:gn()}return dn}function Rn(e,t){for(;gn()&&e+hn!==57&&(e+hn!==84||47!==bn()););return"/*"+wn(t,dn-1)+"*"+Qt(47===e?e:gn())}function On(e){for(;!kn(bn());)gn();return wn(e,dn)}var In="-ms-",En="-moz-",_n="-webkit-",Dn="comm",An="rule",Nn="decl",Ln="@keyframes";function zn(e,t){for(var n="",o=rn(e),a=0;a<o;a++)n+=t(e[a],a,e,t)||"";return n}function Mn(e,t,n,o){switch(e.type){case"@layer":if(e.children.length)break;case"@import":case Nn:return e.return=e.return||e.value;case Dn:return"";case Ln:return e.return=e.value+"{"+zn(e.children,o)+"}";case An:e.value=e.props.join(",")}return an(n=zn(e.children,o))?e.return=e.value+"{"+n+"}":""}function Fn(e){return Tn(Wn("",null,null,null,[""],e=xn(e),0,[0],e))}function Wn(e,t,n,o,a,r,i,s,l){for(var u=0,c=0,d=i,h=0,p=0,f=0,m=1,y=1,g=1,b=0,v="",w=a,k=r,x=o,T=v;y;)switch(f=b,b=gn()){case 40:if(108!=f&&58==nn(T,d-1)){-1!=tn(T+=en(Cn(b),"&","&\f"),"&\f")&&(g=-1);break}case 34:case 39:case 91:T+=Cn(b);break;case 9:case 10:case 13:case 32:T+=Sn(f);break;case 92:T+=jn(vn()-1,7);continue;case 47:switch(bn()){case 42:case 47:sn(Hn(Rn(gn(),vn()),t,n),l);break;default:T+="/"}break;case 123*m:s[u++]=an(T)*g;case 125*m:case 59:case 0:switch(b){case 0:case 125:y=0;case 59+c:-1==g&&(T=en(T,/\f/g,"")),p>0&&an(T)-d&&sn(p>32?Yn(T+";",o,n,d-1):Yn(en(T," ","")+";",o,n,d-2),l);break;case 59:T+=";";default:if(sn(x=Bn(T,t,n,u,c,a,s,v,w=[],k=[],d),r),123===b)if(0===c)Wn(T,t,x,x,w,r,d,s,k);else switch(99===h&&110===nn(T,3)?100:h){case 100:case 108:case 109:case 115:Wn(e,x,x,o&&sn(Bn(e,x,x,0,0,a,s,v,a,w=[],d),k),a,k,d,s,o?w:k);break;default:Wn(T,x,x,x,[""],k,0,s,k)}}u=c=p=0,m=g=1,v=T="",d=i;break;case 58:d=1+an(T),p=f;default:if(m<1)if(123==b)--m;else if(125==b&&0==m++&&125==yn())continue;switch(T+=Qt(b),b*m){case 38:g=c>0?1:(T+="\f",-1);break;case 44:s[u++]=(an(T)-1)*g,g=1;break;case 64:45===bn()&&(T+=Cn(gn())),h=bn(),c=d=an(v=T+=On(vn())),b++;break;case 45:45===f&&2==an(T)&&(m=0)}}return r}function Bn(e,t,n,o,a,r,i,s,l,u,c){for(var d=a-1,h=0===a?r:[""],p=rn(h),f=0,m=0,y=0;f<o;++f)for(var g=0,b=on(e,d+1,d=Jt(m=i[f])),v=e;g<p;++g)(v=Zt(m>0?h[g]+" "+b:en(b,/&\f/g,h[g])))&&(l[y++]=v);return fn(e,t,n,0===a?An:s,l,u,c)}function Hn(e,t,n){return fn(e,t,n,Dn,Qt(hn),on(e,2,-2),0)}function Yn(e,t,n,o){return fn(e,t,n,Nn,on(e,0,o),on(e,o+1,-1),o)}var Xn=function(e,t,n){for(var o=0,a=0;o=a,a=bn(),38===o&&12===a&&(t[n]=1),!kn(a);)gn();return wn(e,dn)},Un=function(e,t){return Tn(function(e,t){var n=-1,o=44;do{switch(kn(o)){case 0:38===o&&12===bn()&&(t[n]=1),e[n]+=Xn(dn-1,t,n);break;case 2:e[n]+=Cn(o);break;case 4:if(44===o){e[++n]=58===bn()?"&\f":"",t[n]=e[n].length;break}default:e[n]+=Qt(o)}}while(o=gn());return e}(xn(e),t))},Vn=new WeakMap,qn=function(e){if("rule"===e.type&&e.parent&&!(e.length<1)){for(var t=e.value,n=e.parent,o=e.column===n.column&&e.line===n.line;"rule"!==n.type;)if(!(n=n.parent))return;if((1!==e.props.length||58===t.charCodeAt(0)||Vn.get(n))&&!o){Vn.set(e,!0);for(var a=[],r=Un(t,a),i=n.props,s=0,l=0;s<r.length;s++)for(var u=0;u<i.length;u++,l++)e.props[l]=a[s]?r[s].replace(/&\f/g,i[u]):i[u]+" "+r[s]}}},Gn=function(e){if("decl"===e.type){var t=e.value;108===t.charCodeAt(0)&&98===t.charCodeAt(2)&&(e.return="",e.value="")}};function $n(e,t){switch(function(e,t){return 45^nn(e,0)?(((t<<2^nn(e,0))<<2^nn(e,1))<<2^nn(e,2))<<2^nn(e,3):0}(e,t)){case 5103:return _n+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return _n+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return _n+e+En+e+In+e+e;case 6828:case 4268:return _n+e+In+e+e;case 6165:return _n+e+In+"flex-"+e+e;case 5187:return _n+e+en(e,/(\w+).+(:[^]+)/,_n+"box-$1$2"+In+"flex-$1$2")+e;case 5443:return _n+e+In+"flex-item-"+en(e,/flex-|-self/,"")+e;case 4675:return _n+e+In+"flex-line-pack"+en(e,/align-content|flex-|-self/,"")+e;case 5548:return _n+e+In+en(e,"shrink","negative")+e;case 5292:return _n+e+In+en(e,"basis","preferred-size")+e;case 6060:return _n+"box-"+en(e,"-grow","")+_n+e+In+en(e,"grow","positive")+e;case 4554:return _n+en(e,/([^-])(transform)/g,"$1"+_n+"$2")+e;case 6187:return en(en(en(e,/(zoom-|grab)/,_n+"$1"),/(image-set)/,_n+"$1"),e,"")+e;case 5495:case 3959:return en(e,/(image-set\([^]*)/,_n+"$1$`$1");case 4968:return en(en(e,/(.+:)(flex-)?(.*)/,_n+"box-pack:$3"+In+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+_n+e+e;case 4095:case 3583:case 4068:case 2532:return en(e,/(.+)-inline(.+)/,_n+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(an(e)-1-t>6)switch(nn(e,t+1)){case 109:if(45!==nn(e,t+4))break;case 102:return en(e,/(.+:)(.+)-([^]+)/,"$1"+_n+"$2-$3$1"+En+(108==nn(e,t+3)?"$3":"$2-$3"))+e;case 115:return~tn(e,"stretch")?$n(en(e,"stretch","fill-available"),t)+e:e}break;case 4949:if(115!==nn(e,t+1))break;case 6444:switch(nn(e,an(e)-3-(~tn(e,"!important")&&10))){case 107:return en(e,":",":"+_n)+e;case 101:return en(e,/(.+:)([^;!]+)(;|!.+)?/,"$1"+_n+(45===nn(e,14)?"inline-":"")+"box$3$1"+_n+"$2$3$1"+In+"$2box$3")+e}break;case 5936:switch(nn(e,t+11)){case 114:return _n+e+In+en(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return _n+e+In+en(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return _n+e+In+en(e,/[svh]\w+-[tblr]{2}/,"lr")+e}return _n+e+In+e+e}return e}var Jn=[function(e,t,n,o){if(e.length>-1&&!e.return)switch(e.type){case Nn:e.return=$n(e.value,e.length);break;case Ln:return zn([mn(e,{value:en(e.value,"@","@"+_n)})],o);case An:if(e.length)return function(e,t){return e.map(t).join("")}(e.props,(function(t){switch(function(e,t){return(e=t.exec(e))?e[0]:e}(t,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return zn([mn(e,{props:[en(t,/:(read-\w+)/,":-moz-$1")]})],o);case"::placeholder":return zn([mn(e,{props:[en(t,/:(plac\w+)/,":"+_n+"input-$1")]}),mn(e,{props:[en(t,/:(plac\w+)/,":-moz-$1")]}),mn(e,{props:[en(t,/:(plac\w+)/,In+"input-$1")]})],o)}return""}))}}],Qn=function(e){var t=e.key;if("css"===t){var n=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(n,(function(e){-1!==e.getAttribute("data-emotion").indexOf(" ")&&(document.head.appendChild(e),e.setAttribute("data-s",""))}))}var o=e.stylisPlugins||Jn;var a,r,i={},s=[];a=e.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+t+' "]'),(function(e){for(var t=e.getAttribute("data-emotion").split(" "),n=1;n<t.length;n++)i[t[n]]=!0;s.push(e)}));var l,u,c=[Mn,(u=function(e){l.insert(e)},function(e){e.root||(e=e.return)&&u(e)})],d=function(e){var t=rn(e);return function(n,o,a,r){for(var i="",s=0;s<t;s++)i+=e[s](n,o,a,r)||"";return i}}([qn,Gn].concat(o,c));r=function(e,t,n,o){l=n,zn(Fn(e?e+"{"+t.styles+"}":t.styles),d),o&&(h.inserted[t.name]=!0)};var h={key:t,sheet:new $t({key:t,container:a,nonce:e.nonce,speedy:e.speedy,prepend:e.prepend,insertionPoint:e.insertionPoint}),nonce:e.nonce,inserted:i,registered:{},insert:r};return h.sheet.hydrate(s),h};var Kn={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};function Zn(e){var t=Object.create(null);return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}var eo=/[A-Z]|^ms/g,to=/_EMO_([^_]+?)_([^]*?)_EMO_/g,no=function(e){return 45===e.charCodeAt(1)},oo=function(e){return null!=e&&"boolean"!==typeof e},ao=Zn((function(e){return no(e)?e:e.replace(eo,"-$&").toLowerCase()})),ro=function(e,t){switch(e){case"animation":case"animationName":if("string"===typeof t)return t.replace(to,(function(e,t,n){return so={name:t,styles:n,next:so},t}))}return 1===Kn[e]||no(e)||"number"!==typeof t||0===t?t:t+"px"};function io(e,t,n){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return so={name:n.name,styles:n.styles,next:so},n.name;if(void 0!==n.styles){var o=n.next;if(void 0!==o)for(;void 0!==o;)so={name:o.name,styles:o.styles,next:so},o=o.next;return n.styles+";"}return function(e,t,n){var o="";if(Array.isArray(n))for(var a=0;a<n.length;a++)o+=io(e,t,n[a])+";";else for(var r in n){var i=n[r];if("object"!==typeof i)null!=t&&void 0!==t[i]?o+=r+"{"+t[i]+"}":oo(i)&&(o+=ao(r)+":"+ro(r,i)+";");else if(!Array.isArray(i)||"string"!==typeof i[0]||null!=t&&void 0!==t[i[0]]){var s=io(e,t,i);switch(r){case"animation":case"animationName":o+=ao(r)+":"+s+";";break;default:o+=r+"{"+s+"}"}}else for(var l=0;l<i.length;l++)oo(i[l])&&(o+=ao(r)+":"+ro(r,i[l])+";")}return o}(e,t,n);case"function":if(void 0!==e){var a=so,r=n(e);return so=a,io(e,t,r)}}if(null==t)return n;var i=t[n];return void 0!==i?i:n}var so,lo=/label:\s*([^\s;\n{]+)\s*(;|$)/g;var uo=!!o.useInsertionEffect&&o.useInsertionEffect,co=uo||function(e){return e()},ho=(uo||t.useLayoutEffect,t.createContext("undefined"!==typeof HTMLElement?Qn({key:"css"}):null));ho.Provider;var po=function(e){return(0,t.forwardRef)((function(n,o){var a=(0,t.useContext)(ho);return e(n,a,o)}))};var fo=t.createContext({});var mo=function(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,o=t.useContext(fo);return o&&(e=o,0!==Object.keys(e).length)?o:n},yo=Gt();var go=function(){return mo(arguments.length>0&&void 0!==arguments[0]?arguments[0]:yo)};function bo(e,t){var n;return Ee({toolbar:(n={minHeight:56},Ye(n,e.up("xs"),{"@media (orientation: landscape)":{minHeight:48}}),Ye(n,e.up("sm"),{minHeight:64}),n)},t)}var vo=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Number.MIN_SAFE_INTEGER,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Number.MAX_SAFE_INTEGER;return Math.max(t,Math.min(e,n))};function wo(e){return vo(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1)}function ko(e){if(e.type)return e;if("#"===e.charAt(0))return ko(function(e){e=e.slice(1);var t=new RegExp(".{1,".concat(e.length>=6?2:1,"}"),"g"),n=e.match(t);return n&&1===n[0].length&&(n=n.map((function(e){return e+e}))),n?"rgb".concat(4===n.length?"a":"","(").concat(n.map((function(e,t){return t<3?parseInt(e,16):Math.round(parseInt(e,16)/255*1e3)/1e3})).join(", "),")"):""}(e));var t=e.indexOf("("),n=e.substring(0,t);if(-1===["rgb","rgba","hsl","hsla","color"].indexOf(n))throw new Error(Ne(9,e));var o,a=e.substring(t+1,e.length-1);if("color"===n){if(o=(a=a.split(" ")).shift(),4===a.length&&"/"===a[3].charAt(0)&&(a[3]=a[3].slice(1)),-1===["srgb","display-p3","a98-rgb","prophoto-rgb","rec-2020"].indexOf(o))throw new Error(Ne(10,o))}else a=a.split(",");return{type:n,values:a=a.map((function(e){return parseFloat(e)})),colorSpace:o}}function xo(e){var t=e.type,n=e.colorSpace,o=e.values;return-1!==t.indexOf("rgb")?o=o.map((function(e,t){return t<3?parseInt(e,10):e})):-1!==t.indexOf("hsl")&&(o[1]="".concat(o[1],"%"),o[2]="".concat(o[2],"%")),o=-1!==t.indexOf("color")?"".concat(n," ").concat(o.join(" ")):"".concat(o.join(", ")),"".concat(t,"(").concat(o,")")}function To(e){var t="hsl"===(e=ko(e)).type||"hsla"===e.type?ko(function(e){var t=(e=ko(e)).values,n=t[0],o=t[1]/100,a=t[2]/100,r=o*Math.min(a,1-a),i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(e+n/30)%12;return a-r*Math.max(Math.min(t-3,9-t,1),-1)},s="rgb",l=[Math.round(255*i(0)),Math.round(255*i(8)),Math.round(255*i(4))];return"hsla"===e.type&&(s+="a",l.push(t[3])),xo({type:s,values:l})}(e)).values:e.values;return t=t.map((function(t){return"color"!==e.type&&(t/=255),t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)})),Number((.2126*t[0]+.7152*t[1]+.0722*t[2]).toFixed(3))}function Co(e,t){if(e=ko(e),t=wo(t),-1!==e.type.indexOf("hsl"))e.values[2]*=1-t;else if(-1!==e.type.indexOf("rgb")||-1!==e.type.indexOf("color"))for(var n=0;n<3;n+=1)e.values[n]*=1-t;return xo(e)}function So(e,t){if(e=ko(e),t=wo(t),-1!==e.type.indexOf("hsl"))e.values[2]+=(100-e.values[2])*t;else if(-1!==e.type.indexOf("rgb"))for(var n=0;n<3;n+=1)e.values[n]+=(255-e.values[n])*t;else if(-1!==e.type.indexOf("color"))for(var o=0;o<3;o+=1)e.values[o]+=(1-e.values[o])*t;return xo(e)}var jo={black:"#000",white:"#fff"},Po={50:"#fafafa",100:"#f5f5f5",200:"#eeeeee",300:"#e0e0e0",400:"#bdbdbd",500:"#9e9e9e",600:"#757575",700:"#616161",800:"#424242",900:"#212121",A100:"#f5f5f5",A200:"#eeeeee",A400:"#bdbdbd",A700:"#616161"},Ro={50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff"},Oo={50:"#ffebee",100:"#ffcdd2",200:"#ef9a9a",300:"#e57373",400:"#ef5350",500:"#f44336",600:"#e53935",700:"#d32f2f",800:"#c62828",900:"#b71c1c",A100:"#ff8a80",A200:"#ff5252",A400:"#ff1744",A700:"#d50000"},Io={50:"#fff3e0",100:"#ffe0b2",200:"#ffcc80",300:"#ffb74d",400:"#ffa726",500:"#ff9800",600:"#fb8c00",700:"#f57c00",800:"#ef6c00",900:"#e65100",A100:"#ffd180",A200:"#ffab40",A400:"#ff9100",A700:"#ff6d00"},Eo={50:"#e3f2fd",100:"#bbdefb",200:"#90caf9",300:"#64b5f6",400:"#42a5f5",500:"#2196f3",600:"#1e88e5",700:"#1976d2",800:"#1565c0",900:"#0d47a1",A100:"#82b1ff",A200:"#448aff",A400:"#2979ff",A700:"#2962ff"},_o={50:"#e1f5fe",100:"#b3e5fc",200:"#81d4fa",300:"#4fc3f7",400:"#29b6f6",500:"#03a9f4",600:"#039be5",700:"#0288d1",800:"#0277bd",900:"#01579b",A100:"#80d8ff",A200:"#40c4ff",A400:"#00b0ff",A700:"#0091ea"},Do={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"},Ao=["mode","contrastThreshold","tonalOffset"],No={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.6)",disabled:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:jo.white,default:jo.white},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}},Lo={text:{primary:jo.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:"#121212",default:"#121212"},action:{active:jo.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function zo(e,t,n,o){var a=o.light||o,r=o.dark||1.5*o;e[t]||(e.hasOwnProperty(n)?e[t]=e[n]:"light"===t?e.light=So(e.main,a):"dark"===t&&(e.dark=Co(e.main,r)))}function Mo(e){var t=e.mode,n=void 0===t?"light":t,o=e.contrastThreshold,a=void 0===o?3:o,r=e.tonalOffset,i=void 0===r?.2:r,s=_e(e,Ao),l=e.primary||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:Eo[200],light:Eo[50],dark:Eo[400]}:{main:Eo[700],light:Eo[400],dark:Eo[800]}}(n),u=e.secondary||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:Ro[200],light:Ro[50],dark:Ro[400]}:{main:Ro[500],light:Ro[300],dark:Ro[700]}}(n),c=e.error||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:Oo[500],light:Oo[300],dark:Oo[700]}:{main:Oo[700],light:Oo[400],dark:Oo[800]}}(n),d=e.info||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:_o[400],light:_o[300],dark:_o[700]}:{main:_o[700],light:_o[500],dark:_o[900]}}(n),h=e.success||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:Do[400],light:Do[300],dark:Do[700]}:{main:Do[800],light:Do[500],dark:Do[900]}}(n),p=e.warning||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:Io[400],light:Io[300],dark:Io[700]}:{main:"#ed6c02",light:Io[500],dark:Io[900]}}(n);function f(e){var t=function(e,t){var n=To(e),o=To(t);return(Math.max(n,o)+.05)/(Math.min(n,o)+.05)}(e,Lo.text.primary)>=a?Lo.text.primary:No.text.primary;return t}var m=function(e){var t=e.color,n=e.name,o=e.mainShade,a=void 0===o?500:o,r=e.lightShade,s=void 0===r?300:r,l=e.darkShade,u=void 0===l?700:l;if(!(t=Ee({},t)).main&&t[a]&&(t.main=t[a]),!t.hasOwnProperty("main"))throw new Error(Ne(11,n?" (".concat(n,")"):"",a));if("string"!==typeof t.main)throw new Error(Ne(12,n?" (".concat(n,")"):"",JSON.stringify(t.main)));return zo(t,"light",s,i),zo(t,"dark",u,i),t.contrastText||(t.contrastText=f(t.main)),t},y={dark:Lo,light:No};return He(Ee({common:Ee({},jo),mode:n,primary:m({color:l,name:"primary"}),secondary:m({color:u,name:"secondary",mainShade:"A400",lightShade:"A200",darkShade:"A700"}),error:m({color:c,name:"error"}),warning:m({color:p,name:"warning"}),info:m({color:d,name:"info"}),success:m({color:h,name:"success"}),grey:Po,contrastThreshold:a,getContrastText:f,augmentColor:m,tonalOffset:i},y[n]),s)}var Fo=["fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem"];var Wo={textTransform:"uppercase"},Bo='"Roboto", "Helvetica", "Arial", sans-serif';function Ho(e,t){var n="function"===typeof t?t(e):t,o=n.fontFamily,a=void 0===o?Bo:o,r=n.fontSize,i=void 0===r?14:r,s=n.fontWeightLight,l=void 0===s?300:s,u=n.fontWeightRegular,c=void 0===u?400:u,d=n.fontWeightMedium,h=void 0===d?500:d,p=n.fontWeightBold,f=void 0===p?700:p,m=n.htmlFontSize,y=void 0===m?16:m,g=n.allVariants,b=n.pxToRem,v=_e(n,Fo);var w=i/14,k=b||function(e){return"".concat(e/y*w,"rem")},x=function(e,t,n,o,r){return Ee({fontFamily:a,fontWeight:e,fontSize:k(t),lineHeight:n},a===Bo?{letterSpacing:"".concat((i=o/t,Math.round(1e5*i)/1e5),"em")}:{},r,g);var i},T={h1:x(l,96,1.167,-1.5),h2:x(l,60,1.2,-.5),h3:x(c,48,1.167,0),h4:x(c,34,1.235,.25),h5:x(c,24,1.334,0),h6:x(h,20,1.6,.15),subtitle1:x(c,16,1.75,.15),subtitle2:x(h,14,1.57,.1),body1:x(c,16,1.5,.15),body2:x(c,14,1.43,.15),button:x(h,14,1.75,.4,Wo),caption:x(c,12,1.66,.4),overline:x(c,12,2.66,1,Wo),inherit:{fontFamily:"inherit",fontWeight:"inherit",fontSize:"inherit",lineHeight:"inherit",letterSpacing:"inherit"}};return He(Ee({htmlFontSize:y,pxToRem:k,fontFamily:a,fontSize:i,fontWeightLight:l,fontWeightRegular:c,fontWeightMedium:h,fontWeightBold:f},T),v,{clone:!1})}function Yo(){return["".concat(arguments.length<=0?void 0:arguments[0],"px ").concat(arguments.length<=1?void 0:arguments[1],"px ").concat(arguments.length<=2?void 0:arguments[2],"px ").concat(arguments.length<=3?void 0:arguments[3],"px rgba(0,0,0,").concat(.2,")"),"".concat(arguments.length<=4?void 0:arguments[4],"px ").concat(arguments.length<=5?void 0:arguments[5],"px ").concat(arguments.length<=6?void 0:arguments[6],"px ").concat(arguments.length<=7?void 0:arguments[7],"px rgba(0,0,0,").concat(.14,")"),"".concat(arguments.length<=8?void 0:arguments[8],"px ").concat(arguments.length<=9?void 0:arguments[9],"px ").concat(arguments.length<=10?void 0:arguments[10],"px ").concat(arguments.length<=11?void 0:arguments[11],"px rgba(0,0,0,").concat(.12,")")].join(",")}var Xo=["none",Yo(0,2,1,-1,0,1,1,0,0,1,3,0),Yo(0,3,1,-2,0,2,2,0,0,1,5,0),Yo(0,3,3,-2,0,3,4,0,0,1,8,0),Yo(0,2,4,-1,0,4,5,0,0,1,10,0),Yo(0,3,5,-1,0,5,8,0,0,1,14,0),Yo(0,3,5,-1,0,6,10,0,0,1,18,0),Yo(0,4,5,-2,0,7,10,1,0,2,16,1),Yo(0,5,5,-3,0,8,10,1,0,3,14,2),Yo(0,5,6,-3,0,9,12,1,0,3,16,2),Yo(0,6,6,-3,0,10,14,1,0,4,18,3),Yo(0,6,7,-4,0,11,15,1,0,4,20,3),Yo(0,7,8,-4,0,12,17,2,0,5,22,4),Yo(0,7,8,-4,0,13,19,2,0,5,24,4),Yo(0,7,9,-4,0,14,21,2,0,5,26,4),Yo(0,8,9,-5,0,15,22,2,0,6,28,5),Yo(0,8,10,-5,0,16,24,2,0,6,30,5),Yo(0,8,11,-5,0,17,26,2,0,6,32,5),Yo(0,9,11,-5,0,18,28,2,0,7,34,6),Yo(0,9,12,-6,0,19,29,2,0,7,36,6),Yo(0,10,13,-6,0,20,31,3,0,8,38,7),Yo(0,10,13,-6,0,21,33,3,0,8,40,7),Yo(0,10,14,-6,0,22,35,3,0,8,42,7),Yo(0,11,14,-7,0,23,36,3,0,9,44,8),Yo(0,11,15,-7,0,24,38,3,0,9,46,8)],Uo=["duration","easing","delay"],Vo={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},qo={shortest:150,shorter:200,short:250,standard:300,complex:375,enteringScreen:225,leavingScreen:195};function Go(e){return"".concat(Math.round(e),"ms")}function $o(e){if(!e)return 0;var t=e/36;return Math.round(10*(4+15*Math.pow(t,.25)+t/5))}function Jo(e){var t=Ee({},Vo,e.easing),n=Ee({},qo,e.duration);return Ee({getAutoHeightDuration:$o,create:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["all"],o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=o.duration,r=void 0===a?n.standard:a,i=o.easing,s=void 0===i?t.easeInOut:i,l=o.delay,u=void 0===l?0:l;_e(o,Uo);return(Array.isArray(e)?e:[e]).map((function(e){return"".concat(e," ").concat("string"===typeof r?r:Go(r)," ").concat(s," ").concat("string"===typeof u?u:Go(u))})).join(",")}},e,{easing:t,duration:n})}var Qo={mobileStepper:1e3,fab:1050,speedDial:1050,appBar:1100,drawer:1200,modal:1300,snackbar:1400,tooltip:1500},Ko=["breakpoints","mixins","spacing","palette","transitions","typography","shape"];function Zo(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.mixins,n=void 0===t?{}:t,o=e.palette,a=void 0===o?{}:o,r=e.transitions,i=void 0===r?{}:r,s=e.typography,l=void 0===s?{}:s,u=_e(e,Ko);if(e.vars)throw new Error(Ne(18));var c=Mo(a),d=Gt(e),h=He(d,{mixins:bo(d.breakpoints,n),palette:c,shadows:Xo.slice(),typography:Ho(c,l),transitions:Jo(i),zIndex:Ee({},Qo),applyDarkStyles:function(e){return this.vars?Ye({},this.getColorSchemeSelector("dark").replace(/(\[[^\]]+\])/,":where($1)"),e):"dark"===this.palette.mode?e:{}}});h=He(h,u);for(var p=arguments.length,f=new Array(p>1?p-1:0),m=1;m<p;m++)f[m-1]=arguments[m];return(h=f.reduce((function(e,t){return He(e,t)}),h)).unstable_sxConfig=Ee({},Xt,null==u?void 0:u.unstable_sxConfig),h.unstable_sx=function(e){return Vt({sx:e,theme:this})},h}var ea=Zo(),ta="$$material";function na(e){return function(e){var t=e.props,n=e.name,o=e.defaultTheme,a=e.themeId,r=go(o);return a&&(r=r[a]||r),Fe({theme:r,name:n,props:t})}({props:e.props,name:e.name,defaultTheme:ea,themeId:ta})}var oa=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;var aa=function(e,t,n){var o=e.key+"-"+t.name;!1===n&&void 0===e.registered[o]&&(e.registered[o]=t.styles)},ra=Zn((function(e){return oa.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91})),ia=function(e){return"theme"!==e},sa=function(e){return"string"===typeof e&&e.charCodeAt(0)>96?ra:ia},la=function(e,t,n){var o;if(t){var a=t.shouldForwardProp;o=e.__emotion_forwardProp&&a?function(t){return e.__emotion_forwardProp(t)&&a(t)}:a}return"function"!==typeof o&&n&&(o=e.__emotion_forwardProp),o},ua=function(e){var t=e.cache,n=e.serialized,o=e.isStringTag;return aa(t,n,o),co((function(){return function(e,t,n){aa(e,t,n);var o=e.key+"-"+t.name;if(void 0===e.inserted[t.name]){var a=t;do{e.insert(t===a?"."+o:"",a,e.sheet,!0),a=a.next}while(void 0!==a)}}(t,n,o)})),null},ca=function e(n,o){var a,r,i=n.__emotion_real===n,s=i&&n.__emotion_base||n;void 0!==o&&(a=o.label,r=o.target);var l=la(n,o,i),u=l||sa(s),c=!u("as");return function(){var d=arguments,h=i&&void 0!==n.__emotion_styles?n.__emotion_styles.slice(0):[];if(void 0!==a&&h.push("label:"+a+";"),null==d[0]||void 0===d[0].raw)h.push.apply(h,d);else{0,h.push(d[0][0]);for(var p=d.length,f=1;f<p;f++)h.push(d[f],d[0][f])}var m=po((function(e,n,o){var a=c&&e.as||s,i="",d=[],p=e;if(null==e.theme){for(var f in p={},e)p[f]=e[f];p.theme=t.useContext(fo)}"string"===typeof e.className?i=function(e,t,n){var o="";return n.split(" ").forEach((function(n){void 0!==e[n]?t.push(e[n]+";"):o+=n+" "})),o}(n.registered,d,e.className):null!=e.className&&(i=e.className+" ");var m=function(e,t,n){if(1===e.length&&"object"===typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var o=!0,a="";so=void 0;var r=e[0];null==r||void 0===r.raw?(o=!1,a+=io(n,t,r)):a+=r[0];for(var i=1;i<e.length;i++)a+=io(n,t,e[i]),o&&(a+=r[i]);lo.lastIndex=0;for(var s,l="";null!==(s=lo.exec(a));)l+="-"+s[1];var u=function(e){for(var t,n=0,o=0,a=e.length;a>=4;++o,a-=4)t=1540483477*(65535&(t=255&e.charCodeAt(o)|(255&e.charCodeAt(++o))<<8|(255&e.charCodeAt(++o))<<16|(255&e.charCodeAt(++o))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(a){case 3:n^=(255&e.charCodeAt(o+2))<<16;case 2:n^=(255&e.charCodeAt(o+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(o)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)}(a)+l;return{name:u,styles:a,next:so}}(h.concat(d),n.registered,p);i+=n.key+"-"+m.name,void 0!==r&&(i+=" "+r);var y=c&&void 0===l?sa(a):u,g={};for(var b in e)c&&"as"===b||y(b)&&(g[b]=e[b]);return g.className=i,g.ref=o,t.createElement(t.Fragment,null,t.createElement(ua,{cache:n,serialized:m,isStringTag:"string"===typeof a}),t.createElement(a,g))}));return m.displayName=void 0!==a?a:"Styled("+("string"===typeof s?s:s.displayName||s.name||"Component")+")",m.defaultProps=n.defaultProps,m.__emotion_real=m,m.__emotion_base=s,m.__emotion_styles=h,m.__emotion_forwardProp=l,Object.defineProperty(m,"toString",{value:function(){return"."+r}}),m.withComponent=function(t,n){return e(t,Ee({},o,n,{shouldForwardProp:la(m,n,!0)})).apply(void 0,h)},m}}.bind();["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){ca[e]=ca(e)}));var da=["variant"];function ha(e){return 0===e.length}function pa(e){var t=e.variant,n=_e(e,da),o=t||"";return Object.keys(n).sort().forEach((function(t){o+="color"===t?ha(o)?e[t]:Le(e[t]):"".concat(ha(o)?t:Le(t)).concat(Le(e[t].toString()))})),o}var fa=["name","slot","skipVariantsResolver","skipSx","overridesResolver"];var ma=function(e){var t=0,n={};return e&&e.forEach((function(e){var o="";"function"===typeof e.props?(o="callback".concat(t),t+=1):o=pa(e.props),n[o]=e.style})),n},ya=function(e,t,n){var o=e.ownerState,a=void 0===o?{}:o,r=[],i=0;return n&&n.forEach((function(n){var o=!0;if("function"===typeof n.props){var s=Ee({},e,a);o=n.props(s)}else Object.keys(n.props).forEach((function(t){a[t]!==n.props[t]&&e[t]!==n.props[t]&&(o=!1)}));o&&("function"===typeof n.props?r.push(t["callback".concat(i)]):r.push(t[pa(n.props)])),"function"===typeof n.props&&(i+=1)})),r};function ga(e){return"ownerState"!==e&&"theme"!==e&&"sx"!==e&&"as"!==e}var ba=Gt();function va(e){var t,n=e.defaultTheme,o=e.theme,a=e.themeId;return t=o,0===Object.keys(t).length?n:o[a]||o}var wa=function(e){var t,n=e.styledArg,o=e.props,a=n(Ee({},o,{theme:va(Ee({},o,{defaultTheme:e.defaultTheme,themeId:e.themeId}))}));if(a&&a.variants&&(t=a.variants,delete a.variants),t){var r=ya(o,ma(t),t);return[a].concat(d(r))}return a};var ka=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.themeId,n=e.defaultTheme,o=void 0===n?ba:n,a=e.rootShouldForwardProp,r=void 0===a?ga:a,i=e.slotShouldForwardProp,s=void 0===i?ga:i,l=function(e){return Vt(Ee({},e,{theme:va(Ee({},e,{defaultTheme:o,themeId:t}))}))};return l.__mui_systemSx=!0,function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(e,t){Array.isArray(e.__emotion_styles)&&(e.__emotion_styles=t(e.__emotion_styles))}(e,(function(e){return e.filter((function(e){return!(null!=e&&e.__mui_systemSx)}))}));var a,i,c=n.name,h=n.slot,p=n.skipVariantsResolver,f=n.skipSx,m=n.overridesResolver,y=void 0===m?(a=(i=h)?i.charAt(0).toLowerCase()+i.slice(1):i)?function(e,t){return t[a]}:null:m,g=_e(n,fa),b=void 0!==p?p:h&&"Root"!==h&&"root"!==h||!1,v=f||!1;var w=ga;"Root"===h||"root"===h?w=r:h?w=s:function(e){return"string"===typeof e&&e.charCodeAt(0)>96}(e)&&(w=void 0);var k=function(e,t){return ca(e,t)}(e,Ee({shouldForwardProp:w,label:undefined},g)),x=function(n){for(var a=arguments.length,r=new Array(a>1?a-1:0),i=1;i<a;i++)r[i-1]=arguments[i];var s,h=r?r.map((function(e){if("function"===typeof e&&e.__emotion_real!==e)return function(n){return wa({styledArg:e,props:n,defaultTheme:o,themeId:t})};if(We(e)){var n,a=e;return e&&e.variants&&(n=e.variants,delete a.variants,a=function(t){var o=e;return ya(t,ma(n),n).forEach((function(e){o=He(o,e)})),o}),a}return e})):[],p=n;We(n)?n&&n.variants&&(s=n.variants,delete p.variants,p=function(e){var t=n;return ya(e,ma(s),s).forEach((function(e){t=He(t,e)})),t}):"function"===typeof n&&n.__emotion_real!==n&&(p=function(e){return wa({styledArg:n,props:e,defaultTheme:o,themeId:t})});c&&y&&h.push((function(e){var n=va(Ee({},e,{defaultTheme:o,themeId:t})),a=function(e,t){return t.components&&t.components[e]&&t.components[e].styleOverrides?t.components[e].styleOverrides:null}(c,n);if(a){var r={};return Object.entries(a).forEach((function(t){var o=u(t,2),a=o[0],i=o[1];r[a]="function"===typeof i?i(Ee({},e,{theme:n})):i})),y(e,r)}return null})),c&&!b&&h.push((function(e){var n=va(Ee({},e,{defaultTheme:o,themeId:t}));return function(e,t,n,o){var a,r=null==n||null==(a=n.components)||null==(a=a[o])?void 0:a.variants;return ya(e,t,r)}(e,function(e,t){var n=[];return t&&t.components&&t.components[e]&&t.components[e].variants&&(n=t.components[e].variants),ma(n)}(c,n),n,c)})),v||h.push(l);var f=h.length-r.length;if(Array.isArray(n)&&f>0){var m=new Array(f).fill("");(p=[].concat(d(n),d(m))).raw=[].concat(d(n.raw),d(m))}var g=k.apply(void 0,[p].concat(d(h)));return e.muiName&&(g.muiName=e.muiName),g};return k.withConfig&&(x.withConfig=k.withConfig),x}}({themeId:ta,defaultTheme:ea,rootShouldForwardProp:function(e){return ga(e)&&"classes"!==e}}),xa=ka,Ta=function(e){return e},Ca=function(){var e=Ta;return{configure:function(t){e=t},generate:function(t){return e(t)},reset:function(){e=Ta}}}(),Sa={active:"active",checked:"checked",completed:"completed",disabled:"disabled",error:"error",expanded:"expanded",focused:"focused",focusVisible:"focusVisible",open:"open",readOnly:"readOnly",required:"required",selected:"selected"};function ja(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Mui",o=Sa[t];return o?"".concat(n,"-").concat(o):"".concat(Ca.generate(e),"-").concat(t)}function Pa(e){return ja("MuiSvgIcon",e)}!function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Mui",o={};t.forEach((function(t){o[t]=ja(e,t,n)}))}("MuiSvgIcon",["root","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeMedium","fontSizeLarge"]);var Ra=n(184),Oa=["children","className","color","component","fontSize","htmlColor","inheritViewBox","titleAccess","viewBox"],Ia=function(e){var t=e.color,n=e.fontSize,o=e.classes;return function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,o={};return Object.keys(e).forEach((function(a){o[a]=e[a].reduce((function(e,o){if(o){var a=t(o);""!==a&&e.push(a),n&&n[o]&&e.push(n[o])}return e}),[]).join(" ")})),o}({root:["root","inherit"!==t&&"color".concat(ze(t)),"fontSize".concat(ze(n))]},Pa,o)},Ea=xa("svg",{name:"MuiSvgIcon",slot:"Root",overridesResolver:function(e,t){var n=e.ownerState;return[t.root,"inherit"!==n.color&&t["color".concat(ze(n.color))],t["fontSize".concat(ze(n.fontSize))]]}})((function(e){var t,n,o,a,r,i,s,l,u,c,d,h,p,f=e.theme,m=e.ownerState;return{userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:m.hasSvgAsChild?void 0:"currentColor",flexShrink:0,transition:null==(t=f.transitions)||null==(n=t.create)?void 0:n.call(t,"fill",{duration:null==(o=f.transitions)||null==(o=o.duration)?void 0:o.shorter}),fontSize:{inherit:"inherit",small:(null==(a=f.typography)||null==(r=a.pxToRem)?void 0:r.call(a,20))||"1.25rem",medium:(null==(i=f.typography)||null==(s=i.pxToRem)?void 0:s.call(i,24))||"1.5rem",large:(null==(l=f.typography)||null==(u=l.pxToRem)?void 0:u.call(l,35))||"2.1875rem"}[m.fontSize],color:null!=(c=null==(d=(f.vars||f).palette)||null==(d=d[m.color])?void 0:d.main)?c:{action:null==(h=(f.vars||f).palette)||null==(h=h.action)?void 0:h.active,disabled:null==(p=(f.vars||f).palette)||null==(p=p.action)?void 0:p.disabled,inherit:void 0}[m.color]}})),_a=t.forwardRef((function(e,n){var o=na({props:e,name:"MuiSvgIcon"}),a=o.children,r=o.className,i=o.color,s=void 0===i?"inherit":i,l=o.component,u=void 0===l?"svg":l,c=o.fontSize,d=void 0===c?"medium":c,h=o.htmlColor,p=o.inheritViewBox,f=void 0!==p&&p,m=o.titleAccess,y=o.viewBox,g=void 0===y?"0 0 24 24":y,b=_e(o,Oa),v=t.isValidElement(a)&&"svg"===a.type,w=Ee({},o,{color:s,component:u,fontSize:d,instanceFontSize:e.fontSize,inheritViewBox:f,viewBox:g,hasSvgAsChild:v}),k={};f||(k.viewBox=g);var x=Ia(w);return(0,Ra.jsxs)(Ea,Ee({as:u,className:Ae(x.root,r),focusable:"false",color:h,"aria-hidden":!m||void 0,role:m?"img":void 0,ref:n},k,b,v&&a.props,{ownerState:w,children:[v?a.props.children:a,m?(0,Ra.jsx)("title",{children:m}):null]}))}));_a.muiName="SvgIcon";var Da=_a;function Aa(e,n){function o(t,o){return(0,Ra.jsx)(Da,Ee({"data-testid":"".concat(n,"Icon"),ref:o},t,{children:e}))}return o.muiName=Da.muiName,t.memo(t.forwardRef(o))}var Na=Aa((0,Ra.jsx)("path",{d:"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"}),"Search"),La=Aa((0,Ra.jsx)("path",{d:"M3 18h12v-2H3v2zM3 6v2h18V6H3zm0 7h18v-2H3v2z"}),"Notes"),za=Aa((0,Ra.jsx)("path",{d:"M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z"}),"Keyboard"),Ma=Aa((0,Ra.jsx)("path",{d:"M20 9V7c0-1.1-.9-2-2-2h-3c0-1.66-1.34-3-3-3S9 3.34 9 5H6c-1.1 0-2 .9-2 2v2c-1.66 0-3 1.34-3 3s1.34 3 3 3v4c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-4c1.66 0 3-1.34 3-3s-1.34-3-3-3zM7.5 11.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5S9.83 13 9 13s-1.5-.67-1.5-1.5zM16 17H8v-2h8v2zm-1-4c-.83 0-1.5-.67-1.5-1.5S14.17 10 15 10s1.5.67 1.5 1.5S15.83 13 15 13z"}),"SmartToy"),Fa=Aa((0,Ra.jsx)("path",{d:"M11.07 12.85c.77-1.39 2.25-2.21 3.11-3.44.91-1.29.4-3.7-2.18-3.7-1.69 0-2.52 1.28-2.87 2.34L6.54 6.96C7.25 4.83 9.18 3 11.99 3c2.35 0 3.96 1.07 4.78 2.41.7 1.15 1.11 3.3.03 4.9-1.2 1.77-2.35 2.31-2.97 3.45-.25.46-.35.76-.35 2.24h-2.89c-.01-.78-.13-2.05.48-3.15zM14 20c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z"}),"QuestionMark"),Wa=Aa((0,Ra.jsx)("path",{d:"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z"}),"ChevronLeft"),Ba=Aa((0,Ra.jsx)("path",{d:"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"}),"ChevronRight"),Ha=n(698);var Ya=function(e){return console.log(e.paragraphIndex+" total Pragraphs: "+e.totalParagraphs+" current lesson: "+e.currentLesson),(0,Ra.jsxs)("div",{id:"progressBarContainer",children:[(0,Ra.jsx)("a",{href:0==e.paragraphIndex?"#/lesson-"+(e.currentLesson-1)+"/complete":"#/lesson-"+e.currentLesson+"/"+(e.paragraphIndex-1).toString(),children:(0,Ra.jsx)(Wa,{})}),(0,Ra.jsx)(Ha.Z,{className:"progressBar",height:"30px",labelSize:"10px",completed:Number((e.paragraphIndex/e.totalParagraphs*100).toFixed(0)),bgColor:"black"}),(0,Ra.jsx)("a",{href:e.paragraphIndex==e.totalParagraphs-1?"#/lesson-"+e.currentLesson+"/complete":e.paragraphIndex==e.totalParagraphs?"#/lesson-"+(e.currentLesson+1)+"/0":(console.log((e.paragraphIndex+1).toString()),"#/lesson-"+e.currentLesson+"/"+(e.paragraphIndex+1).toString()),children:(0,Ra.jsx)(Ba,{})})]})},Xa=Aa((0,Ra.jsx)("path",{d:"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"}),"ExpandMore"),Ua=Aa((0,Ra.jsx)("path",{d:"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"}),"Menu"),Va=Aa((0,Ra.jsx)("path",{d:"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}),"Close"),qa=function(e){return e[e.Code=0]="Code",e[e.Read=1]="Read",e[e.Search=2]="Search",e[e.Robot=3]="Robot",e}(qa||{}),Ga=qa,$a=JSON.parse('{"Lesson 6 - OOP Deep Dive Part 1":{"Introduction":{"0":{"actionType":"Read","content":"<p> \\nYou\u2019ve already learned a lot about programming in the first five lessons, but there\u2019s also been a \\nhand-waving of concepts by saying \u201cignore this for now, we\u2019ll learn about it later\u201d. This has enabled you \\nto spend more time focusing on writing code and playing with the robot. However, it can also feel a little \\noverwhelming when you\u2019re looking at a lot code that you don\u2019t fully understand. Similar to what we did \\nin lesson four with methods, this lesson is going to focus on helping you build a deeper understanding of \\nobject-oriented programming and what classes and objects are. These are some of the fundamentally \\nmost important concepts in Java and many other programming languages, so take your time with this \\nlesson, focus, repeat the reading and/or videos as necessary, and don\u2019t worry if it seems overwhelming \\nat first. If you go through the material and projects carefully, you will come to understand it, and that \\nwill help you understand what\u2019s going on in the robot code much better as well. For the hands-on \\nportion of this project, first you\u2019ll follow along with a video, and then you\u2019ll modify the XRP code to use \\ntwo of the built-in LEDs \u2013 red and green \u2013 to indicate whether or not the XRP has been rotated from its \\noriginal orientation (for example, if you were to drive it and it started to veer off course instead of \\ndriving straight ahead.) \\n</p>"},"1":{"actionType":"Code","content":"<p> \\nStart out by watching this video and following along in a blank non-robot project in VSCode. If \\nyou don\u2019t remember how to set up a non-robot project in VSCode, you can refer back to lesson 4. This \\nvideo gives a simple explanation of objects, how they have methods and variables, and how you can use \\nthem: https://www.youtube.com/watch?v=0NPR8GFHNmE \\n</p>"},"2":{"actionType":"Code","content":"<p> \\nAfter you watch the video and code along with it, read this page, from the start through section \\n2.9. Don\u2019t worry about anything that comes after section 2.9: \\nhttps://www3.ntu.edu.sg/home/ehchua/programming/java/J3a_OOPBasics.html \\n</p>"},"3":{"actionType":"Read","content":"<p>Now that you\u2019ve made your way through these materials, you should have a decent idea of \\nwhat object-oriented programming (OOP) is, and robot code will probably make a little more sense to \\nyou. There are still a lot of concepts to cover in part two, but you\u2019ve done enough reading for one lesson \\nso let\u2019s get our hands dirty with some XRP code. \\n</p>"}},"Measuring Orientation: Gyroscopes":{"4":{"actionType":"Read","content":"<p>The XRP has a built-in gyroscope, or gyro, which is a device that measures changes in \\norientation of the robot and can also add up all the changes over time to measure the current \\norientation at any given moment. Having access to this data opens up a lot of possibilities when it comes \\nto robot code. One example of this is the autonomous program you saw run in the very first lesson, \\nwhere the XRP turns around twice. How does it know how much to turn, to turn around without \\nturning too far (or not far enough)? While this could be achieved by measuring exactly how far each \\nwheel spins, the most reliable way to do this is to use the gyro, because, for example, the wheel could \\nslip. Another great use of a gyro is detecting whether or not your robot is driving straight, because there \\nare a lot of ways your robot could drive a bit crooked. One motor might be slightly more powerful than \\nthe other. One side of the drivetrain might have more mechanical resistance than the other. The surface \\nyou\u2019re driving on might be a little bit uneven. Those are just a few examples; there are a lot of things \\nthat can go wrong, but with a gyro, you can detect all these things, and correct for them. In a future \\nlesson we\u2019ll correct for them, but today we\u2019ll just worry about detecting them. We\u2019ll write a program \\nthat uses the built-in lights to light up either red or green, based on whether or not the XRP is still \\nfacing the same direction it was when the program started running. \\n</p>"}},"Accessing Class Data":{"5":{"actionType":"Code","content":"<div><p>To do this project, we\u2019re going to need to access a few variables that, by default, we can\u2019t \\naccess. We\u2019ll talk more about this in the second part of the object-oriented programming deep dive, \\nnext lesson. There are reasons why these variables should not be accessible to us, but for this project, \\nwe\u2019re going to make them accessible anyway. Follow these steps to get everything setup for this project: \\n</p><li>1. Create a new XRPReference project like you\u2019ve done a couple times already.</li><li>2. In RobotContainer.java on line 31, there are two instances of the word \u201cINPUT\u201d. Change these both to \u201cOUTPUT\u201d. This tells the XRP to use the red and green LED lights as output. \\n</li><li>3. In Drivetrain.java on line 32, change the first word of the line, \u201cprivate\u201d, to \u201cpublic\u201d.</li></ol></div>"},"6":{"actionType":"Code","content":"<p>With that out of the way, it\u2019s time to get started. This program will utilize your newly gained \\nknowledge about classes by accessing variables belonging to various objects in the program. In this \\nproject, we\u2019re going to create an interaction between two subsystems: the drivetrain, which is where \\nthe gyro exists, and the on-board IO, which is where the lights exist. Go to OnBoardIO.java and create a \\nclass field for a Drivetrain object. We\u2019ll populate this field with the Drivetrain object that is declared in \\nRobotContainer, so that the OnBoardIO object can access the gyro that belongs to RobotContainer\u2019s \\nDrivetrain object. After declaring the Drivetrain object, initialize the OnBoardIO\u2019s constructor method by \\nadding a parameter of type Drivetrain, and setting the class\u2019s Drivetrain object equal to the Drivetrain \\nobject that is passed into the constructor. Remember, a constructor is a method in a class that exactly \\nmatches the class\u2019s name and has no return type. So in OnBoardIO, the constructor is the method \\ndeclared on line 46 by the text \u201cpublic OnBoardIO\u2026\u201d (it will be on line 47 after you declare the \\nDrivetrain object. Here\u2019s an example of the declaration and initializations: \\n</p>","image":"<img src=\\"./images/lesson6_0.png\\"/>","more_images":"<img src=\\"./images/lesson6_1.png\\"/>"},"7":{"actionType":"Code","content":"<p>After doing this and saving the file, you\u2019ll have an error in RobotContainer.java because the line that \\ninitializes the OnBoardIO object there doesn\u2019t send a Drivetrain object. Navigate to line 31 in \\nRobotContainer.java and update it to pass in the Drivetrain object that is created on the prior line. \\n</p>","image":"<img src=\\"./images/lesson6_2.png\\"/>"},"8":{"actionType":"Code","content":"<p>You\u2019re now done with the plumbing and ready to create the command that will actually do things. \\nCreate a new command in the commands folder called ToggleLightsBasedOnGyro. After creating the \\ncommand, add a class field of type OnBoardIO called m_io. You can declare this one using the keywords \\n\u201cprivate final\u201d, as shown in the image below. After creating the field, initialize it in the constructor, also \\nshown. The last thing you\u2019ll need to do is call the \u201caddRequirements\u201d method and pass in the \\nOnBoardIO that is sent to the constructor. This is the line that tells the command which subsystems it \\nneeds to use. This is how the program manages which commands are running on a subsystem because \\nany given subsystem can only run one command at once. You can run multiple commands at the same \\ntime if they are on different subsystems, and the addRequirements method specifies which subsystems \\neach command uses. Although this command that we\u2019re making will read data from the drivetrain \\nsubsystem, it only acts using the OnBoardIO subsystem, where it will turn lights on and off. So we do not \\n\u201crequire\u201d the drivetrain subsystem for this command in a programming sense, even though in an English \\nsense it does need a drivetrain subsystem to read data from. Here\u2019s a completed example: \\n</p>","image":"<img src=\\"./images/lesson6_3.png\\"/>"},"9":{"actionType":"Code","content":"<p> \\nNow it\u2019s time to add the logic that reads the angle from the gyro and then turns the lights on \\nand off accordingly. Doing this will be an example of how objects form a hierarchy of data. The \\ncommand you\u2019re working on is literally a class \u2013 you can see this on line 10 where you declare \u201cpublic \\nclass\u2026\u201d. This class has an OnBoardIO object, m_io. Every OnBoardIO object has a Drivetrain object \\nbecause you gave it one on line 23 of OnBoardIO.java in a previous step. Every Drivetrain object has a \\nXRPGyro object because of line 32 in Drivetrain.java (one of the lines you modified while setting up for \\nthis project.) So from your ToggleLightsBasedOnGyro class, you can chain through your data hierarchy to \\nget to the gyro: ToggleLightsBasedOnGryo -> OnBoardIO -> Drivetrain -> XRPGyro. The XRPGyro class \\nhas a method called \u201cgetAngleZ()\u201d, which returns a double value that represents an angle in degrees \\n(you can see this if you open XRPGyro.java in the \u201csensors\u201d folder, and look on line 108.) As you \\nlearned in the materials for this lesson, you can use dots (periods) to chain through your objects. So to \\ncall the getAngleZ() method, you can use your class variable m_io, and do \\n\u201cm_io.m_drivetrain.m_gyro.getAngleZ()\u201d. \\n</p>"},"10":{"actionType":"Code","content":"<p>While a command is running, its execute method is called continuously. We want our lights to \\nupdate continuously, so this is where we\u2019ll put our code. Navigate to the execute() method in your \\ncommand (approximately line 24), and as the first line of the method, declare a variable and set it equal \\nto the output from the getAngleZ() method call described above. Here\u2019s an example: \\n</p>","image":"<img src=\\"./images/lesson6_4.png\\"/>"},"11":{"actionType":"Read","content":"<p>Now you have a variable that contains the current orientation of the robot, relative to the \\nrobot\u2019s orientation when the program started running, which will be whenever you press F5 and the \\ncode loads onto the robot. Since execute() is called continuously while the command is running, this \\nvariable will continue to be updated during execution. \\n</p>"},"12":{"actionType":"Code","content":"<p>Now that you have the angle, it\u2019s time to turn lights on and off. To do this, you\u2019ll want to use \\ntwo methods belonging to the OnBoardIO class \u2013 setGreenLed(boolean) and setRedLed(boolean). Notice \\nhow those methods are written here in plaintext, with the word \u201cboolean\u201d in the parentheses. This \\ndemonstrates that in order to use them, you need to send a boolean variable. This makes sense \u2013 lights \\nhave two states, on or off, so you can pass either true or false to the methods, to turn the light on or off. \\nThere is one method for the green light and one method for the red light. In this project, we\u2019ll set the \\ngreen light to on if we\u2019re on course, and the red light to on if we\u2019re off course. In both cases we\u2019ll set the \\nother light to off, so there will only ever be one light on at a time. \\n</p>"},"13":{"actionType":"Code","content":"<p>You might want to turn the lights to one configuration, and you might want to turn them to a \\ndifferent configuration, depending on the gyro angle. That means you\u2019re going to need a conditional \\nstatement. \u201cConditional\u201d is just a fancy word for an if statement. If the gyro angle is zero, then the robot \\nis facing straight ahead, and if it\u2019s not, then the robot has turned a little bit. Of course, in practice, the \\ngyro is sensitive, and the angle is not going to be exactly zero, so you\u2019re going to need to check if it\u2019s in \\nsome range. If you make the range too big, say, 90 degrees, then you could veer far off course before \\ndetecting it. If you make the range too small, say, one quarter degree, then you\u2019re going to detect that \\nyou\u2019re off course even when you\u2019re mostly straight. Finding the perfect range depends on a lot of things, \\nbut for this project, a range of +/- five degrees works pretty well. \\n</p>"},"14":{"actionType":"Code","content":"<p>You could measure if the gyro angle is less than 5 degrees pretty easily, with a line like this: \\n</p>","image":"<img src=\\"./images/lesson6_5.png\\"/>"},"15":{"actionType":"Code","content":"<p>However, the robot can turn in two different directions. If you turn the robot to the right, the gyro angle \\nwill increase. If you turn to the left, it will decrease. This means that if you turn 90 degrees to the left \\nrelative to the starting point, the gyro angle would return -90. This is indeed less than 5 degrees, so the \\nif statement above would return true, even though you\u2019d be very far from straight. Thankfully, there\u2019s \\nan easy solution to this, using something called \u201cabsolute value\u201d. The absolute value of a number is \\nsimply that number, but not negative. For example, the absolute value of 10 is 10. The absolute value of \\n-10 is also 10. So the only difference is that if the number is negative, it becomes positive. If it\u2019s already \\npositive, there\u2019s no change. Java has a built-in method to return the absolute value of any number: \\nMath.abs(double). Math.abs(gyroAngle) will return whatever the gyro angle is, but positive. You can use \\nthis function in your if statement to check if the absolute value of the gyro angle is less than five. Write \\nthis if statement, and if it\u2019s true, set the green LED to true and the red one to false, and vice versa if the \\nif statement is false. Here\u2019s an example: \\n</p>","image":"<img src=\\"./images/lesson6_6.png\\"/>"},"16":{"actionType":"Code","content":"<p> \\nWe could be done with this command at this point, but let\u2019s make a couple quick upgrades \\nbefore we finish. Since we\u2019re still practicing our mastery of using methods, let\u2019s split out lines 28 and 29, \\nand 32 and 33 above, into their own methods. Beneath the execute() method, create two more \\nmethods called \u201csetLightsGreen()\u201d and \u201csetLightsRed()\u201d. You can declare both of these with \u201cprivate \\nvoid\u201d. Move the lines of code identified above into these methods, and inside your if statement in the \\nexecute method, call your newly created methods. Lastly, you may want to add a SOP line that outputs \\nthe gyro angle, so you can see it in real time in the terminal. This isn\u2019t strictly necessary because you can \\nalso see it on the robot simulation interface, but you can add it if you want. Here\u2019s an example of the \\ncommand with all these steps completed: \\n</p>","image":"<img src=\\"./images/lesson6_7.png\\"/>"},"17":{"actionType":"Code","content":"<p> \\nWith that done, your command is completed. The only thing left to do is set your command to \\nbe the default command for the OnBoardIO subsystem. Since no other commands are issued to the \\nOnBoardIO subsystem right now, setting your command as the default command means that it will run \\nall the time, and therefore your execute method will run all the time. Navigate to the end of line 65 in \\nRobotContainer.java and press enter. Then use the setDefaultCommand method you see on line 65, \\nexcept call it for your OnBoardIO object instead of the drivetrain (remember, your OnBoardIO object, \\nwhich is declared on line 31 of this file, is called m_onboardIO.) On line 65, the value passed to \\nsetDefaultCommand is a method call, but for the the line you\u2019re adding, you can just use the new \\nkeyword to create an instance of your command. Remember, commands are classes, so you create \\ninstances of them. To create an instance of your class, you need to send in the values its constructor \\nrequires. In this case, it requires an OnBoardIO object, because the OnBoardIO object provides access to \\neverything your command needs \u2013 the lights to toggle and the drivetrain object through which to find \\nthe gyro angle. Conveniently, you only have one OnBoardIO object in your code, which makes sense \\nbecause your robot physically only has a single on-board IO. The same m_onboardIO object that you\u2019re \\nassigning the default command to, can be sent in to your ToggleLightsBasedOnGyro constructor call, like \\nso: \\n</p>","image":"<img src=\\"./images/lesson6_8.png\\"/>"},"18":{"actionType":"Code","content":"<p> \\nNow there\u2019s just one tiny step to go. Navigate to the end of line 54 in RobotContainer.java, press \\nenter, and then add four lines like so: \\n</p>","image":"<img src=\\"./images/lesson6_9.png\\"/>"},"19":{"actionType":"Robot","content":"<p>All this does is initialize the values so that the lights turn on as soon as your code starts. With that, \\nyou\u2019re done \u2013 deploy your code! Make sure not to rotate your robot by hand before you enable it. \\nWhen you enable teleoperated mode, you\u2019ll see the green light illuminate. If you start rotating your \\nrobot, either by driving it or by hand, you\u2019ll see the lights change as the angle of the robot moves away \\nfrom its initial orientation and change back if you move the robot back. \\n</p>"},"20":{"actionType":"Read","content":"<p> \\nIn this lesson, you learned about OOP, and saw an example of how you can use classes and \\nobjects in code to logically interact with different parts of your program through a class hierarchy. You \\nalso saw an example of how you can integrate different subsystems on the XRP with each other to \\ncreate some cool functionality. This was a longer lesson with a lot of important concepts, so don\u2019t worry \\nif you feel like you need to review any part of it. Although there are still a couple deep dives left to go \\nbefore you\u2019ll understand everything you see in the code, you\u2019re making great progress. We\u2019ll continue to \\nbuild on these skills in future lessons. \\n</p>"}},"totalParagraphs":21},"Lesson 7 - OOP Deep Dive Part 2":{"Introduction":{"0":{"actionType":"Read","content":"<p> \\nIn lesson 6, you learned a lot about object-oriented programming, but there\u2019s still more to learn, \\nso we\u2019re going to focus on that in this lesson. For the project, we\u2019ll combine the new material you learn \\nwith review, by revisiting the project from lesson 6 and doing it in an easier and better way using the \\nnew knowledge you have. \\n</p>"},"1":{"actionType":"Code","content":"<p> \\nYou previously read this page through section 2.9: \\n<a href=\'https://www3.ntu.edu.sg/home/ehchua/programming/java/J3a_OOPBasics.html#zz-2.10\'>https://www3.ntu.edu.sg/home/ehchua/programming/java/J3a_OOPBasics.html#zz-2.10</a> Today, \\ncontinue doing so, starting at section 2.10 and reading through section 2.17. Stop when you get to \\nsection 3. After you do, you\u2019ll have a much better understanding of words you\u2019ve been seeing pop up \\neverywhere in the robot code, specifically \u201cpublic\u201d, \u201cprivate\u201d, and \u201cfinal\u201d. \\n</p>"},"2":{"actionType":"Code","content":"<p>Having finished the reading, you\u2019re now ready to dive into the project, which is a redo of the \\nproject from lesson 6 but applying the principles you learned from today\u2019s reading. Create a new \\nXRPReference project called GyroLights 2, and just like last time, change the \u201cINPUT\u201d words in \\nRobotContainer line 31 to \u201cOUTPUT\u201d. \\n</p>"},"3":{"actionType":"Code","content":"<p>At this point in lesson 6, the next step was to change the XRPGyro variable declared on line 32 \\nof Drivetrain.java from private to public. However, this time around we do NOT want to do that. As a \\ngeneral rule, it\u2019s better to have as many variables be private as possible. This is a safety measure so that \\nexternal sources do not make unwanted changes to variables that could break your program. That might \\nseem silly \u2013 you\u2019re the author of your program, so as long as you don\u2019t do that, what could go wrong? \\nWell, in theory, you could get away with making everything public and never run into issues. However, \\nin practice, most software projects include many people, not just one person, and no individual \\nunderstands every line of the program. Team projects can easily be millions of lines. Somebody might \\naccess a public variable and change it without realizing how it affects something else. Even if you\u2019re not \\nworking on a team project, you\u2019re a human and humans make mistakes. It\u2019s surprisingly easy to forget \\nall the details of your own program, especially after some time passes. If you\u2019re working on a tiny \\nproject that takes only a couple of hours to finish then pragmatically, yes, it\u2019s probably fine to make \\neverything public. But projects have a way of growing past original expectations, and it doesn\u2019t take \\nmuch growth before making everything public becomes a problem. Accordingly, it\u2019s a good idea to \\nfollow best practices and just make everything private if you can, so this time around we will not make \\nthe XRPGyro object public. \\n</p>"},"4":{"actionType":"Code","content":"<p>Following the same steps as last time, the next step was to create a public final Drivetrain object \\nin OnBoardIO.java. We do need a Drivetrain object, but this time we don\u2019t want it to be public or final. \\nAs you learned in the reading, final means that the value will not be able to change once set, and we \\ndon\u2019t want that this time for reasons you\u2019ll see shortly. So this time, declare a private Drivetrain object: \\n</p>","image":"<img src=\\"./images/lesson7_0.png\\"/>"},"5":{"actionType":"Code","content":"<p>Now it\u2019s time to practice something else you just learned about: overloading methods. To \\noverload a method, you simply create two methods with the same name, but with different parameters. \\nIn this case we\u2019re going to overload the constructor by leaving the original constructor and creating a \\nnew one that accepts a Drivetrain object. In lesson 6, we simply modified the original constructor. \\nCreate a new constructor with the same two ChannelMode parameters, plus a Drivetrain parameter. \\nYou\u2019ll need the functionality of the original constructor in addition to the new code you write, so the \\neasiest thing to do is to copy and paste the old constructor and then add to it. In your constructor, \\ninitialize the OnBoardIO\u2019s drivetrain variable. Here\u2019s an example: \\n</p>","image":"<img src=\\"./images/lesson7_1.png\\"/>"},"6":{"actionType":"Code","content":"<p>In lesson 6, after we modified the constructor, it caused syntax errors in other files because the \\nexisting method calls no longer matched the parameters for the OnBoardIO (OBIO) constructor. By \\ncreating an overloaded constructor, we do not get those syntax errors, because the old code exists. This \\nis a great feature when adding to large projects that have a lot of references to existing methods \\nalready. However, overloading is not always the right solution, and this project is actually a good \\nexample of that. We create an overloaded constructor that initializes the Drivetrain object. We will be \\nusing the Drivetrain object elsewhere in the method. But it is possible to create an OBIO object using the \\noriginal constructor, which means it is possible to create an OBIO object that does not have an initialized \\nDrivetrain object. If one were to do this, they would get an error if they later tried to use any of the code \\nthat relies on the Drivetrain object. That may or may not be a problem depending on the program. This \\nis a tradeoff to consider whenever choosing whether or not to overload a method. Overloading can \\ncreate better backwards compatibility and more flexibility, but you have to make sure that all of the \\noptions will work. In this case, if one used the old constructor and then tried to use the gyro lights \\nfunctionality, it would most definitely not work, so if this were a production project, we would either not \\ndo the overload, or come up with some other workaround. Since it\u2019s not a production project, we\u2019ll do \\nthe overload and not worry about it too much, since the reason you\u2019re doing this project is to learn and \\nthinking about the tradeoffs accomplishes that goal. \\n</p>","image":"<img src=\\"./images/lesson7_2.png\\"/>"},"7":{"actionType":"Code","content":"<p>If you look at the two constructors that now exist, you\u2019ll notice that the lines of code in the \\nimage above are repeated in both of them. A good rule is that whenever you see repeated lines of code, \\nthey should be broken out into a separate method. This reduces the amount of clutter in your code, and \\nif you ever need to change those lines, you\u2019ll only need to change them in one place instead of tracking \\ndown all the places they\u2019re copied throughout your code. Let\u2019s practice that here. Split the lines of code \\npicture above out into their own method called \u201cinitializeDios\u201d (you can declare this one using \u201cprivate \\nvoid\u201d. Then call your new method in both of your constructors. Here\u2019s how the class looks so far: \\n</p>","image":"<img src=\\"./images/lesson7_3.png\\"/>"},"8":{"actionType":"Code","content":"<p> \\nAnother thing you learned about from today\u2019s reading is getter and setter methods. Let\u2019s get \\nsome practice using them. You created a Drivetrain variable in this class, so create getter and setter \\nmethods for it. They\u2019ll look like the photo below. Note that the order in which you put methods in a \\nprogram does not make a functional difference, although it can make a difference in terms of how easy \\nyour code is for humans to read. Everyone seems to have their own style for how to order methods. The \\nmain reason you need to understand this right now is because your line numbers may or may not match \\nexactly with the sample images if you\u2019re putting your methods in different places, and that\u2019s OK. \\n</p>","image":"<img src=\\"./images/lesson7_4.png\\"/>"},"9":{"actionType":"Code","content":"<p> \\nYou\u2019re now done with your OBIO class modifications. Last time when you were done with this \\nclass, you had syntax errors in other files, which pointed out to you exactly what you needed to change \\nnext. This time however, since we overloaded the constructor, we don\u2019t have those errors. But we still \\nneed to change the code that initializes the OBIO because if we don\u2019t use our new constructor method, \\nthe Drivetrain object won\u2019t get initialized. Go to line 32 in RobotContainer.java and update your \\ndeclaration of the OBIO object accordingly. \\n</p>","image":"<img src=\\"./images/lesson7_5.png\\"/>"},"10":{"actionType":"Code","content":"<p> \\nNow it\u2019s time to create the ToggleLightsBasedOnGyro (TLBOG) command again. For this you can \\nfollow all the same steps you did in lesson 6, except there will be some changes to the execute method. \\nTo start, follow the steps from lesson 6 exactly. You\u2019ll notice that you get an error on the line where you \\ntry to get the gyro angle. If you hover over the error, VSCode will explain to you that \u201cm_drivetrain\u201d is \\nnot visible, which is because it was declared as private instead of public, and therefore cannot be \\naccessed from this class: \\n</p>","image":"<img src=\\"./images/lesson7_6.png\\"/>"},"11":{"actionType":"Code","content":"<p> \\nThankfully, we prepared for this by creating a getter method for the drivetrain object. Replace \\nthe \u201cm_drivetrain\u201d text with getDrivetrain(): \\n</p>","image":"<img src=\\"./images/lesson7_7.png\\"/>"},"12":{"actionType":"Code","content":"<p>Now we don\u2019t get an error on m_drivetrain, but we still have an error, and if you mouse over it you\u2019ll \\nsee that it\u2019s the same error, because m_gyro is also not visible. Luckily for us, the sample project already \\ncreated a get method for us. The get method isn\u2019t actually for the gyro, but it\u2019s for the gyro\u2019s Z angle, \\nwhich is exactly what we want. You can find this method by starting to type \u201cget\u201d after the period after \\n\u201cgetDrivetrain()\u201d. VSCode automatically checks which methods are available to you and starts listing \\nthem out, which can be really handy for quickly finding the method you want to use. This feature is \\ncalled intellisense. Select the \u201cgetGyroAngleZ()\u201d method to complete the line. \\n</p>","image":"<img src=\\"./images/lesson7_8.png\\"/>","more_images":"<img src=\\"./images/lesson7_9.png\\"/>"},"13":{"actionType":"Code","content":"<p> \\nThere\u2019s only one more change to make to TLBOG relative to lesson 6. On line 27, you use the \\nnumber 5 as part of your if statement. This is called a magic number. A magic number is a number that \\nhas some real-world logical meaning for your code. In this case it\u2019s the number of degrees off of \\nperfectly straight that you\u2019re allowing to count as straight. Magic numbers are a necessary evil because \\nyou have to use them, but they can be problematic because when reading through code, unless one \\nalready understands the significance of the number, the line of code may not make much sense to them. \\nA good measure to reduce the pain of magical numbers is to group them together in a class that is \\ndesigned purely to hold them. As it turns out, the XRPReference project already has a class designed \\nexactly for this, called Constants.java. Larger projects might want a more specific name than that and \\npotentially more than one class to serve this purpose \u2013 for example, AutonomousCalibrations.java, \\nTeleopCalibrations.java, ButtonMappings.java (think back to all the numbers you have to mark down for \\nyour axes and buttons), and so forth. But for now we\u2019ll just use Constants.java. \\n</p>"},"14":{"actionType":"Code","content":"<p> \\nGrouping magic numbers in a class has a couple of advantages. First, if you need to tune your \\nrobot, the tuning levers are conveniently located in a single spot. Right now we only have one value to \\ntune, which is this number of degrees. But we could add others. For example, the scaling coefficients \\nthat you use for cut power mode would be well-suited to go in the Constants file as well. After you have \\na few values like this throughout your program, grouping them all in one place gives you easy access to \\ntune your robot without opening a ton of different files and searching through your code for where you \\ndefined them. Additionally, sticking the values in a class lets you replace the number with a textual \\ndescription of what the number does. This is best illustrated with an example. Here is a replacement for \\nline 27: \\n</p>","image":"<img src=\\"./images/lesson7_10.png\\"/>"},"15":{"actionType":"Code","content":"<p>If you read through this code as a human, you might not know what the degree threshold is, but you \\nalso might not really care; you can read it and understand that the line of code is checking whether or \\nnot the gyro angle is greater than the threshold for whether or not the robot is oriented straight. Unless \\nyou\u2019re in the process of tuning the robot, you probably care much more about whether or not it counts \\nas straight, than exactly what the cutoff for that condition is. And as it turns out, it\u2019s easy to see what \\nthe value is if you want to know it anyway, as you\u2019ll see in a moment. But first, after you replace line 27 \\nwith the code above, let\u2019s fix the syntax error. \\n</p>"},"16":{"actionType":"Code","content":"<p> \\nIf you click on the red-underlined \u201cConstants\u201d, you\u2019ll get a lightbulb on the left, and clicking it \\nallows you to import Constants.java. Do so. Now \u201cConstants\u201d turns green but the all-caps text gets a red \\nunderline of its own. Click on that and click the lightbulb and it will give you the option to automatically \\ncreate a constant with that name inside Constants.java (the first option), so click that. Now the \\nunderline goes away because it created the constant for you. But, it has no way of knowing what value \\nyou want for that constant. Mouse over \u201cIS_ORIENTED_STRAIGHT_DEGREE_THRESHOLD\u201d once more \\nand you\u2019ll get a popup showing you the type (double) and value (0.0) of the constant: \\n</p>","image":"<img src=\\"./images/lesson7_11.png\\"/>"},"17":{"actionType":"Code","content":"<p> \\n0.0 is not what we want, but conveniently it\u2019s easy to access and change. If you\u2019re still hovering \\nover the text, simply click, and then press F12, and VSCode will take you to Constants.java and to the \\nline where this constant is declared. Now you can easily change the value to 5, save, and go back to \\nTLBOG. If you mouse over the text one final time, you\u2019ll see that not only is it easier to understand what \\nthis line does because it\u2019s written out in text, but you can easily see the value as well because it pops up \\nwhen you mouse over it. \\n</p>"},"18":{"actionType":"Code","content":"<p> \\nAll you need to do now to finish the project is the same steps you took to finish lesson 6 \u2013 set \\nthe default command for OBIO and initialize the states of the LEDs, both in RobotContainer.java. After \\nyou do these things, deploy your code to check your work! While it won\u2019t do anything differently than \\nlesson 6, your code is much cleaner this time around, and you learned a lot in the process. \\n</p>"}},"totalParagraphs":19},"Lesson 8 - Loops":{"Introduction":{"0":{"actionType":"","content":"<p>Note: there is no included solution program for lesson 8. \\n</p>"},"1":{"actionType":"","content":"<p> \\nIn this lesson we\u2019re going to do a little bit more non-XRP practice in order to familiarize you \\nwith some concepts that are critically important, but that you won\u2019t see too much of in the XRP code. \\nSpecifically, we\u2019re going to talk about loops. A loop is a chunk of code that is designed to run multiple \\ntimes. You may have already realized that this is happening in your XRP code, because the program \\nruns indefinitely until you turn the robot off. The loops in the XRP code are behind the scenes a little \\nbit, so not as visible to you. We will talk about where they exist and how they result in your code \\nrunning indefinitely. We\u2019ll also do some desktop practice without the XRP. The next two lessons will be \\nreview and practice, with heavy focus on XRP projects as opposed to new code concepts. \\n</p>"}},"Loops":{"2":{"actionType":"Code","content":"<p>Start by watching this video, and follow along in a scratch project in VSCode: <a href=\'https://www.youtube.com/watch?v=6djggrlkHY8\'>https://www.youtube.com/watch?v=6djggrlkHY8</a></p>"},"3":{"actionType":"Code","content":"<p>Once you\u2019re done with that, open a fresh XRP project. Open Robot.java. This file contains a \\nnumber of methods that essentially are run in loops. Look at line 85, which is a method declaration for \\nteleopPeriodic(). This function is called repeatedly while teleop is enabled. Right now there\u2019s nothing in \\nhere, but if you were to, for example, put a SOP in there and enable teleop, you would see it start \\noutputting to the terminal. You can see the same thing for disabled, autonomous, and test modes on \\nlines 53, 70, and 95, respectively. There\u2019s also a method called robotPeriodic declared on line 40. This \\none is similar but it runs all the time regardless of which mode the robot is in. Unlike the other methods, \\nyou\u2019ll notice this one does have a line of code in it \u2013 line 45, CommandScheduler.getInstance().run();. \\nYou\u2019ve created and used some commands in prior lessons, and this line is basically what makes them all \\nwork, since robotPeriodic is running in a loop behind the scenes. When line 45 runs, an object called the \\nCommandScheduler basically looks at all the commands that need to do things and makes them do \\nthose things. You\u2019ll learn more about commands as we keep working with XRP code, but this is where \\nthe magic happens. Although you don\u2019t see the words \u201cfor\u201d or \u201cwhile\u201d in these examples, the concepts \\nare the same. \\n</p>"},"4":{"actionType":"Code","content":"<p>Now let\u2019s do some practice writing your own loops. Here are some exercises to complete in a \\ndesktop VSCode project. They\u2019ll give you practice using loops as well as reinforce your previously \\ndeveloped skills. A quick note \u2013 why are we doing desktop projects for loops instead of XRP code? Well, \\nthe simple answer is that if you mis-use loops in your robot code, you can create some dangerous \\nsituations. You just saw that the command scheduler needs to run constantly in robotPeriodic. If you \\nhave a loop in your robot code that doesn\u2019t terminate quickly, not only can the commandScheduler not \\nrun, but neither can any code that is not in your loop. That might include critical safety features like \\ntelling your motors to turn off. If your motors are running full power and the code turning them off can\u2019t \\nrun, your robot will not be able to stop. There are situations where loops are good in robot code, but \\nthey\u2019re a bit fewer, further between, and often have to do with more advanced concepts. This, \\ncombined with the fact that your code is already set up to effectively be self-looping because of your \\ncommands running all the time and each mode of the robot having a period method where you can add \\ncode that you want to run over and over, means you don\u2019t need as many loops in your robot code. For \\ndesktop applications, on the other hand, if you want your code to run over and over you\u2019ll have to \\ncreate that functionality yourself, meaning you\u2019ll need a lot of loops. With that being said, here are the \\nexercises. In lesson 4 you learned how to use the Scanner to generate user input. You\u2019ll need to use the \\nScanner again here. To complete these exercises, make one program, and one method for each exercise. \\nIn your main method, call each exercise\u2019s method, so your single completed program does all of the \\nexercises. \\n</p>"},"5":{"actionType":"Code","content":"<p>1. Write a for loop that SOP\u2019s every integer from 0 to 9. \\n2. Write a while loop that outputs every integer from -10 to positive 20. \\n3. Take an integer input from the user and compute the \\"sum of squares\\" from 1 to that \\nnumber. For example, if the user entered 10, the answer would be 1^2 + 2^2 + ... + 10^2. \\nOutput the answer. To check your work - if you enter 10, the answer should be 385. If you \\nenter 11, it should be 506. You\u2019ll need to declare a variable outside of your loop to keep \\ntrack of the sum so far. \\n</p>"},"6":{"actionType":"Code","content":"<p>4. Take an integer input and compute the \\"square of sum\\" from 1 to that number. So if they \\nentered 10, it would be (1 + 2 + ... + 10)^2. Output the answer. To check: 10 comes out to \\n3025, and 11 comes out to 4356. \\n</p>"},"7":{"actionType":"Code","content":"<p>5. Now calculate the \\"sum-square difference\\" - that is, the difference between the square of \\nsum and the sum of squares. So basically, the result of problem 2 minus the result of \\nproblem 1. If you enter 100, the answer should be 25164150. \\n</p>"},"8":{"actionType":"Code","content":"<div><p>6. Output a multiplication table for 1-10. Note that in order to do this you will need to do something a bit new - a \\"nested\\" loop. You\'ll have one for loop that goes from 1 to 10, and \\nthen you\'ll have another for loop that also goes from 1 to 10 inside the first for loop. Your \\nnested for loop will complete fully for every cycle of the outer loop. Remember that you can \\nuse System.out.print instead of .println to output something without a new line, and you \\ncan do System.out.println(\\"\\"); to output a new line and nothing else. So your result should \\nlook something like the following (the exact spacing of the numbers isn\u2019t too important.)</p><p>1 2 3 4 5 6 7 8 9 10</p><p>2 4 6 8 10 12 14 16 18 20</p><p>3 6 9 12 15 18 21 24 27 30</p><p>.....</p><p>10 20 30 40 50 60 70 80 90 100</p></div>"}},"totalParagraphs":9},"Lesson 9 - Gyro Project":{"Introduction":{"0":{"actionType":"Read","content":"<p> \\nThis lesson gives you a chance to practice coding, while introducing a new concept called \\n\u201cmodulo\u201d, which takes a bit of thinking to understand in a mathematical concept, but as you will see is \\neasy to use in terms of writing code. You learned about the gyroscope in an earlier lesson when you \\nused it to turn lights on and off based on the rotation of the robot. In this project, we\u2019re going to use it \\nto ensure that the robot drives in a straight line and can maintain a given orientation.  \\n</p>"},"1":{"actionType":"Read","content":"<p>Note: This lesson is a bit heavy on math. The concepts aren\u2019t super advanced, but there is a fair \\namount of arithmetic that goes into it. If it starts getting confusing reading a lot of numbers, take your \\ntime, slow down, read it again slowly, and then proceed. \\n</p>"},"2":{"actionType":"Read","content":"<p> \\nThe gist of this project is that we will keep track of a target heading, and then constantly \\nmeasure the current heading relative to the target heading and \u201cadd turning\u201d relative to the difference \\nbetween the target and the actual. If the difference is large, we\u2019ll add a lot of turning. If the difference is \\nsmall, we\u2019ll add a small amount of turning.</p>"}},"Heading":{"3":{"actionType":"Code","content":"<p>Let\u2019s talk about what the word \u201cheading\u201d means in context. We will declare a variable \\nrepresenting the target heading of the XRP in the Drivetrain class. Here\u2019s an example. You can go ahead \\nand create a new XRPReference project called DriveStraight and copy this into your code in \\nDrivetrain.java: \\n</p>","image":"<img src=\\"./images/lesson9_0.png\\"/>"},"4":{"actionType":"Code","content":"<p>This heading will be relative to whatever the heading of the robot was the last time the \\ngyroscope was reset. You can reset the gyro anytime you want in code, but if you don\u2019t do that, by \\ndefault the last time it is reset would be when the gyro first initializes when you turn the robot on. \\nAssuming you\u2019re not rotating or moving the robot during its boot sequence, you don\u2019t need to worry \\nabout this too much \u2013 you can assume that the \u201cdefault\u201d orientation is whatever direction the robot is \\nfacing when it turns on, and therefore that orientation would be a heading of zero. As you saw last time \\nwe used the gyro, you can use the getAngleZ() method to return the current heading in degrees. Before \\nwe continue, let\u2019s make sure to initialize our targetHeading so that it does, in fact, use the heading of \\nthe robot when it boots. You can add this line of code to line 45 of Drivetrain.java. When the Drivetrain \\nobject is initialized, the current heading will be stored as the target heading. \\n</p>","image":"<img src=\\"./images/lesson9_1.png\\"/>"},"5":{"actionType":"Read","content":"<p>The getAngleZ method returns a double, and even though headings are relative to a 360 degree \\ncircle, getAngleZ() does NOT necessarily return a value between 0 and 360. If you turn the robot left \\n(counterclockwise) 90 degrees, you\u2019d get a value of -90. If you spin the robot right (clockwise) two full \\nrevolutions from zero, you\u2019d get a value of 720. If you spin the robot one and three-quarters revolutions \\nleft from zero, you\u2019d get a heading of -630. This is important because if you\u2019re starting at zero, you might \\nassume a negative number means you rotated the robot left, but -630 is the same orientation as \\npositive 90. Rotating the robot left one and three-quarters revolutions puts it at the same orientation as \\nrotating it one quarter revolution right. \\n</p>"}},"Modulo":{"6":{"actionType":"Read","content":"<p>When we made the lights turn on and off, we didn\u2019t worry about this. You could load your \\nprogram and spin the robot a full revolution and check this for yourself \u2013 even if it\u2019s at the proper \\norientation, the red light will stay on because we did not account for this. For that project, that was fine, \\nbut if you want to actually use the gyro to do useful things with the robot this is a problem. If you\u2019re \\nactually driving the robot around you don\u2019t want to worry about how many times you\u2019ve spun in a circle \\nin order for your code to work. So we need a way to account for this, and luckily for us there\u2019s an easy \\nsolution using what\u2019s called \u201cmodulo\u201d. \\n</p>"},"7":{"actionType":"Read","content":"<p> \\nYou may have never heard the term modulo before but you\u2019re already familiar with it if you\u2019ve \\never used a clock or a calendar. What time is it right now? Chances are, it\u2019s some hour between 0 and 12 \\nor 0 and 24, depending on what kind of clock you like to use. And what day of the month is it? Chances \\nare it\u2019s something between 1 and 31. But obviously you\u2019ve lived a lot more than 24 hours and a lot more \\nthan 31 days. But after each cycle, these numbers reset and start counting again. This is because we\u2019re \\ninterested in how much time has passed since the start of the most recent cycle. It\u2019s the same thing with \\nthe gyro \u2013 we\u2019re interested in how much change there has been since the last time the heading passed \\nthe origin point, regardless of whether it read 0, 360, -720, or whatever else when it passed the origin. \\n</p>"},"8":{"actionType":"Read","content":"<p> How do you <i>do</i> modulo math? Well, you\u2019ve probably done this before as well, if you\u2019ve ever  done division and calculated the remainder. Let\u2019s go back to our calendar example. If you asked  someone what hour it is when it was, say, 11 AM on January 1st 2021, they\u2019d probably say it\u2019s 11. They <i>could</i> say it\u2019s 17,703,971, which is approximately the number of hours that have passed since the  beginning of the day on January 1st at the start of the AD calendar, but they wouldn\u2019t do that. What they <i>would</i> do, without realizing it, is take 17,703,871, divide it by 24, and tell you the remainder of that  operation, which happens to be 11. This is called <i>modulo division</i> \u2013 instead of giving you answer to  17703871/24, which is 737665.45833, they\u2019d round that to an integer and give the remainder.  </p>"},"9":{"actionType":"Code","content":"<p> \\nYou\u2019re familiar with the basic mathematical operators: +, -, /, and *. But there\u2019s an additional \\noperator you might not be familiar with: the modulo operator, \u201c%\u201d. In Java, the percent sign will do \\nremainder division, or modulo, on the number on its left. So for example: \\nSystem.out.println(10 % 3); \\nOutputs \u201c1\u201d, because if you were do integer division of 10 by 3, you would get 3 with a remainder of 1. \\nBy the way, \u201c10 % 3\u201d would be read as \u201cten modulo three\u201d, or \u201cten mod three\u201d for short. Modulo works \\nfor negative numbers as well; just like 10 mod 3 is 1, -10 mod 3 is negative -1 because 3 goes into 10 \\nnegative three times, with a remainder of -1. Modulo division has a lot of everyday uses. Obviously time \\nand date stuff is a big example, but it also becomes relevant for things like splitting up food and figuring \\nout how much will be left over. Try to think of a couple examples in real life. As a quick project, go back \\nto your lesson four project \u2013 the methods deep dive project where you created several calculator-type \\nmethods like add, subtract, etc., and create a modulo method that takes two integers as parameters, \\nmods one by the other, and returns the result to your main method where you output it. So your main \\nmethod would include a line like this: \\n</p>","image":"<img src=\\"./images/lesson9_2.png\\"/>"},"10":{"actionType":"Read","content":"<p>  Focusing back on the robot, we\u2019re working with a degree system with 360 logical degrees, but a  range which we\u2019d like to keep in between -180 and 180. We can use modulo to take any heading, and  make it between 0 and 360, by modding by 360. When modding by 360, any value between -360 and  360 will not change. (This range is NOT inclusive: -360 and 360 would each return 0, but 359.999 would  be unchanged.) Any value with <i>absolute value</i> (which you learned about in a prior lesson) of 360 or  higher will be brought down to be within the range of -360 to 360, without changing its logical meaning.  450 will become 90, 560 will become 200, etc. Here\u2019s an example of a line of code that does this,  assuming the heading is stored in a double variable called \u201cheading\u201d. You don\u2019t need to write this  anywhere just yet, this is simply an illustration of the concept.  </p>","image":"<img src=\\"./images/lesson9_3.png\\"/>"},"11":{"actionType":"Read","content":"<p>This takes us halfway there, but we want to ensure the final output is between -180 and 180, \\ninstead of between -360 and 360. If we were to use a range of between -360 and 360, it would actually \\nstill work orient the robot properly, it just might turn the long way around \u2013 e.g. instead of turning ten \\ndegrees left, it might turn 350 degrees right. Considering you would only need to veer one degree off \\ncourse to then trigger a 359 degree correction, this would be functionally undriveable even though it\u2019s \\n\u201cmathematically correct\u201d. So we definitely need to reduce our range further. \\n</p>"},"12":{"actionType":"Read","content":"<p> \\nLogically we can do this range reduction using a couple if statements. We know that any value \\nbetween -360 and -180 corresponds to a value between 0 and 180. For example, -350 corresponds to \\n10, -190 corresponds to 170, etc. All we have to do is add 360. The same goes for the range of values \\nbetween 180 and 360: they correspond to values from -180 to 0. For these values we need to subtract \\n360 instead of adding it. We can use simple if statements to accomplish this \u2013 if the value is less than -\\n180, add 360 to it to make it between 0 and 180. If it\u2019s greater than 180, subtract 360 to make it \\nbetween -180 and 0. Here\u2019s an example of that, and again this is not something you need to write \\nsomewhere yet, but an illustration of the concept: \\n</p>","image":"<img src=\\"./images/lesson9_4.png\\"/>"},"13":{"actionType":"Read","content":"<p>  These chunks of code demonstrate how to get a heading value to within a desired range using  modulo. But how do we use any of this in our robot code? The trick is going to be using our  targetHeading variable declared earlier and <i>comparing it to the current heading</i>. The difference between  two headings is also a heading. For example, if you have a target heading of 60 degrees and a current  heading of 30 degrees, then the difference between those headings is 30 degrees, which is itself a  heading. We will add turning from how much output we send to the wheels based on the magnitude of  this heading. If the difference between the headings is small, say, just one degree, we\u2019ll only add a very  small amount of turning power. If it\u2019s large, such as 30 degrees, we\u2019ll add a large amount of turning.  </p>"}},"Modifying Turning Power":{"14":{"actionType":"Code","content":"<p>You\u2019ve modified the turning power of the robot before, way back in lesson 2 when you opened \\nthe Drivetrain.arcadeDrive method and modified the zaxisRotate variable, and then again in lesson 5 \\nwhen you added cut power mode. We\u2019re going to do the same thing here but instead of scaling it by a \\nstatic amount, we\u2019ll scale it by a dynamic amount based on the difference between the target and \\ncurrent headings as described above. To do this you\u2019ll make a method that handles all the logic \\ndescribed in the prior section, but first, here\u2019s an example of how you can set up your arcadeDrive \\nmethod to apply the result. Note how you call a method which will have a dynamic result, and then \\nsimply add the value to zaxisRotate. In this case you actually subtract it because of how the math works \\nout, but of course subtraction is simply \u201caddition of a negative number\u201d, so that\u2019s why you can think of \\nthis as \u201cadding turning\u201d. You can go ahead and write this code, and then we\u2019ll create the \\ngetGyroAdjustment method. \\n</p>","image":"<img src=\\"./images/lesson9_5.png\\"/>"}},"Getting the Gyro Adjustment":{"15":{"actionType":"Code","content":"<div><p>With arcadeDrive setup, it\u2019s time to apply everything you learned about headings and modulo to  calculate the adjustment. It was a lot of reading, but as you saw, a fairly short amount of code, so this  method isn\u2019t too hard. Follow these steps to complete it. An example is below, but see how much you  can complete yourself before looking at the example (see picture at 74% of lesson as well)</p><ol><li>Declare the \u201cgetGyroAdjustment\u201d method, which should be private and return a double.</li><li>Declare a double variable \u201cheadingDifference\u201d and set it equal the gyro\u2019s current z angle minus the target heading. </li><li>Mod the heading difference by 360.</li><li>Apply the two if statements shown above to make sure the range of the heading difference is between -180 and 180.</li></ol></div>"}},"between -180 and 180.":{"16":{"actionType":"Code","content":"<p>At this point, the headingDifference variable is ready to go. However, if you think about what you added to arcadeDrive, you\u2019re subtracting gyroAdjust from zaxisRotate. The final value of zaxisRotate needs to be between -1 and 1, and if it\u2019s outside of that range it will simply be truncated to that range. E.g. if you provide a value of 15, that will get truncated down to 1, and a value of -200 will get truncated to -1. Either of these would result in sending 100% turning power to zaxisRotate, which is usually not what you want. If the headingDifference is 1, that means the robot is off from its target by one degree \u2013 you definitely do not want to compensate for a one degree difference by  turning at full throttle. So you\u2019ll need to apply a scaling factor to the headingDifference in order to  get a reasonable final value for your gyro adjustment. Declare a constant in the constants class for  this (use the lightbulb to import Constants in Drivetrain.) You can play around with what value you  want, but for starters .01 works alright. If you set this value too low, then your code will not do  much, because you\u2019ve scaled the effect down to almost 0. If you set it too high, your robot will start  spinning back and forth uncontrollably because it will turn with too much power, overshoot the  target, and then turn back the other with full power and overshoot it again, etc. So it\u2019s generally  wise to start with a low number and bump it up slowly if you need more power, than to start with a  high number. Here\u2019s an example of the declaration in Constants.java and the line in Drivetrain.java  applying the scale. Note how a new variable \u201cgyroAdjust\u201d is declared; this isn\u2019t strictly necessary  although after you apply the scale, the variable is longer logically a \u201cheadingDifference\u201d so declaring  a new variable to represent what the value logically is can be a good idea.  </p>","image":"<img src=\\"./images/lesson9_6.png\\"/>","more_images":"<img src=\\"./images/lesson9_7.png\\"/>"}},"":{"17":{"actionType":"Code","content":"<p>After you\u2019ve done this, the last thing you need to do is use the return keyword to return your \\nnewly created gyroAdjust variable. Here\u2019s an example of the completed method: \\n</p>","image":"<img src=\\"./images/lesson9_8.png\\"/>"}},"Testing & Improving":{"18":{"actionType":"Robot","content":"<p>At this point, you can deploy your code, and if you test it, you will notice that your robot will do \\nits best to return to its starting orientation. There are two good ways to test this. The first is to put the \\nXRP on some small object that you can lift up and rotate around, for example a tray or a large plate. If \\nyou spin the tray around, you\u2019ll see the XRP start spinning the opposite direction, trying to find its \\noriginal orientation again. It will get pretty close. Our code isn\u2019t perfect \u2013 for example, it might get close, \\nbut then the power it sends to try and turn is not enough to break surface friction of the wheels on the \\ntray. There are more advanced things you can do to account for this problem but for today\u2019s lesson, this \\nis good enough. Another way you can test is by turning the robot using the joystick. If you do this you\u2019ll \\nagain see it try to snap back to the original heading. Since the way we\u2019re re-orienting the robot is by \\nmodifying the zaxisRotate value, you might even notice that you can stall the robot in a different \\norientation if you apply partial power to the rotation joystick, because you\u2019ll be applying a turning \\npower that cancels out the turning correction. \\n</p>"},"19":{"actionType":"Read","content":"<p> \\nHaving your robot continuously self-adjust back to the original orientation is pretty cool! But, if \\nyou did the test where you turned the robot using the joystick and it snapped back, you might have \\nalready noticed a problem with our code. Sure, you can drive straight, but what if you want to turn? It \\nmay be possible using the stalling trick described in the last paragraph, but realistically, you can\u2019t turn \\nyour robot with this code. The problem is that the robot\u2019s target heading is never updated when we \\nwant to give it a new target heading. Let\u2019s finish out this lesson by making a small improvement to the \\ncode to update the target heading whenever we turn. Then the robot will have a new target heading \\ninstead of trying to correct back to the old one. \\n</p>"}},"Detecting Turning & Deadband":{"20":{"actionType":"Code","content":"<p>A first pass at detecting whether or not the driver is turning the robot is pretty simple. In the \\narcadeDrive method, you have the variable zaxisRotate that you\u2019re modifying to change the turning \\nvalue, but its original value comes from the user\u2019s control over the rotation joystick. In theory, if this \\nvalue is nonzero, the driver is trying to turn. In practice, since it\u2019s a physical joystick, at rest it may not \\nmeasure zero \u2013 it will probably be close to zero, but if the driver releases it, it won\u2019t return exactly to \\nzero. There is a concept in robot control called \u201cdeadbanding\u201d which basically means creating a \\ndeadband, or a zone where inputs get reduced to zero. For example, you could decide that any value \\nbetween -.1 to .1 should be counted as zero. We\u2019ll talk about this more in future lessons when we \\ndiscuss other ways to improve user input. For now just keep in mind that you\u2019ll need to check if the \\nmagnitude of zaxisRotate is bigger than some value, and if it is, you can assume that the user is trying to \\nturn. When you\u2019re checking the magnitude of a value, that\u2019s usually a good use case for using absolute \\nvalue, which you learned about in a prior lesson. Take your best shot at writing an if statement that \\nchecks whether or not the user is trying to turn. As for a value to compare the zaxisRotate to, it will \\ndepend on your physical controller. With a newer, stiffer controller that returns to center well, .1 might \\nbe a good number. If you have an older controller and the joystick has more play, you might need a \\nbigger number, even as large as .25 or .3. You can use the Joysticks window of in the Robot Simulation \\ninterface to check this; find the joystick you\u2019re using for control, flick your joystick a few times, and see \\nwhat number it comes to rest on. Pick a number slightly higher than the largest value you see after a few \\nflicks. With an Xbox controller this is axis 4. Once you have a value, declare it in your Constants file and \\nuse it to finish your if statement. \\n</p>","image":"<img src=\\"./images/lesson9_9.png\\"/>"},"21":{"actionType":"Code","content":"<p> \\nOnce you\u2019ve created your if statement, the last thing you need to do is adjust the target heading \\nif the statement returns true. This is simple: just set the target heading to the current heading. You don\u2019t \\nknow what the target heading will be when the robot finishes turning, but since your if statement will \\nrun constantly while the robot is turning, it will keep updating the target on the fly every time. Here\u2019s a \\nsample completed if statement: \\n</p>","image":"<img src=\\"./images/lesson9_10.png\\"/>"},"22":{"actionType":"Robot","content":"<p> \\nCongratulations, you\u2019re now done! Test your code. You\u2019ll see that after turning, the robot does \\nnot snap back to its original orientation, but if you do the same test where you set it on a tray and rotate \\nthe tray, it will still rotate. You might notice one issue: after turning, the robot will snap back a little bit \\nin the opposite direction, and then snap back a second time in the same direction you were originally \\nturning. This happens because the target heading is being set while the joystick is being held, but it takes \\na small amount of time to stop turning after the joystick is released due to the robot\u2019s current \\nmomentum. However, the target heading will be locked in as soon as the joystick is released, meaning \\nthat the robot will overshoot its target, and then start correcting for it. There are ways to deal with this \\nproblem and we\u2019ll look at one of them in lesson 11. For now, you\u2019ve done enough to complete this \\nlesson.  \\n</p>"}},"totalParagraphs":23},"Lesson 10 - Autonomous Commands":{"Introduction":{"0":{"actionType":"Read","content":"<p><i>Note: there is no included solution program for lesson 10.</i></p>"},"1":{"actionType":"Read","content":"<p>  In this lesson you\u2019ll work with the XRP\u2019s autonomous mode and learn more about commands  and how they can be combined together using <i>command groups</i>, which are lists of commands that run  sequentially one after another, or potentially at the same time if they act on different subsystems. For  today we\u2019ll focus only on commands running sequentially. Learning about commands and command  groups will connect a lot of the concepts that you\u2019ve been working with and when you finish this lesson,  you\u2019ll have a much greater understanding of how all these classes, files, and methods work together to  make your robot code run. For the project you\u2019ll make your own autonomous routines.  </p>"}},"Commands":{"2":{"actionType":"Read","content":"<p>You\u2019ve used commands already in the course, but we haven\u2019t covered the details of how they\u2019re \\nstructured. Let\u2019s talk about that a little bit more. The XRPReference project is written using the \\n\u201ccommand-based\u201d paradigm, which allows a lot of things to happen without us doing them manually, \\nfor example your arcadeDrive method running all the time. There are other ways to write robot \\nprograms that aren\u2019t command-based, but this course focuses on command-based because it has a lot \\nof advantages which will become clear to you during this lesson. We will not discuss other paradigms in \\nthis course, but you\u2019re free to explore them on your own. \\n</p>"},"3":{"actionType":"Code","content":"<div><p>In the command-based paradigm, there is one class that is responsible for doing all the heavy  lifting behind the scenes, called the CommandScheduler. We discussed this very briefly in the loops  lesson and you can find this object on line 45 of Robot.java. It\u2019s accessed every cycle of robotPeriodic,  which runs constantly while your robot is turned on. The CommandScheduler looks at all the commands  in your code, figures out which of them should be started, executed, and ended, and performs those  actions. In the process of doing this, the CommandScheduler is looking for specific things in a command,  for example the execute() method. It will call the execute method, which is how the code you\u2019ve put in  the execute method of the commands you\u2019ve written or modified gets run. We\u2019ve also discussed how  only one command can run on any given subsystem (like Drivetrain) at once. The CommandScheduler is  what manages this, overriding old commands when new commands are issued. If you wanted to, you  could click on the green text \u201cCommandScheduler\u201d on line 45, press F12, and start investigating it  yourself. However, this is pretty advanced and I don\u2019t necessarily recommend you do this \u2013 it\u2019s just  interesting to know that you could. Most people programming XRPs never need to do this and you can  just let the CommandScheduler run, working its magic behind the scenes. However, you will need to  understand the various parts of what makes up a command, so let\u2019s take a look at one that you\u2019ve  already worked with.</p><p>Create a new XRPReference project called \u201cAutonomous\u201d and open ArcadeDrive.java. Let\u2019s dive  into the different portions of this file. All commands share a number of features, by nature of being a  class, and by nature of being a command.</p><ul><li>Lines 12-14: class fields. You\u2019ve learned about these as part of learning about classes and doing  the projects. All classes in Java have this portion, although you could have a class without any  class fields. (This \u201carea\u201d of the code technically still exists, even if you don\u2019t have any fields  there.)</li><li>Lines 24-32: class constructor, and where parameters are passed to the class. You\u2019ve worked  with this as well. All Java classes have constructors, although like with the fields, they aren\u2019t  always explicitly declared.</li><li>Lines 34-36: initialize method. On line 35 you\u2019ll see \u201c@Override\u201d. We\u2019ll talk about overrides  more in lesson 14. Whenever you see this tag, it means that the method exists because of what  kind of class it is. In this case, that means that all classes that are commands have initialize()  methods. Whenever you create a new command using the VSCode interface, it will have an  initialize method. If you read the comment on 34, it explains the initialize method: \u201cCalled when  the command is initially scheduled.\u201d Scheduling a command is often the same as running it,  although not always, as it\u2019s possible that the scheduled command will have to wait for the  subsystems it needs to become available to it. Don\u2019t worry about that right now \u2013 the point of  the initialize method is that it runs when the command is scheduled, or in other words, when it\u2019s  sent to the CommandScheduler to be run.</li><li>Lines 38-42: execute method. We\u2019ve talked about this one a bit already. Since it has an override  tag, you know this is another method that exists because it\u2019s a command. This method gets  called constantly while the command is running. In the case of ArcadeDrive, it\u2019s how you drive  your robot.</li><li>Lines 44-46: end method. This method gets called when the command is either interrupted,  such as by another command overriding it using the same subsystem, or when the command  finishes (see the next bullet.)</li><li>Lines 48-52: isFinished method. This method runs every cycle as well, just like execute. If it ever  returns true, the command schedule will terminate the command and call the end method. In  the case of ArcadeDrive, we always want to be able to drive the robot, so this method is  hardcoded to always return false, so the command does not end. This is also the default code  that you\u2019ll see any time you create a new command. However, many commands should end  after they do something. For example, say you had a command to drive forward ten inches in  autonomous mode. Such a command should end after the robot drives ten inches forward. So  instead of always returning false, isFinished would check how far the robot has traveled, and  return true or false accordingly.</li></ul></div>"},"4":{"actionType":"Code","content":"<p>These four methods \u2013 initialize, execute, end, and isFinished \u2013 are the four main features of a \\ncommand. Let\u2019s look at another command that uses more of these features. In the commands \\nfolder, open DriveDistance.java. As you might infer from the name, this command makes the robot \\ndrive a specified distance, in inches. Let\u2019s go through this command line-by-line and gain a complete \\nunderstanding. \\n</p>"},"5":{"actionType":"Search","content":"<p>Line 10 declares the class, and the \u201cextends CommandBase\u201d text specifies that this class is a \\ncommand. We\u2019ll talk about this in a future lesson \u2013 for now you can just recognize it and understand \\nthat it means it\u2019s a command. Then there are three class fields declared \u2013 the Drivetrain system to \\noperate upon, and the speed and distance with which to drive. \\n</p>","image":"<img src=\\"./images/lesson10_0.png\\"/>"},"6":{"actionType":"Search","content":"<p> \\nThis is the constructor for DriveDistance \u2013 remember, constructors have no return types, and \\ntheir method names match their class names. Only constructor methods have these features. This \\nconstructor initializes the class variables declared on lines 11-13, and calls the addRequirements method \\nto specify that this command requires the drivetrain. Specifying requirements is how the \\nCommandScheduler knows how to manage which commands run on which subsystems. \\n</p>","image":"<img src=\\"./images/lesson10_1.png\\"/>"},"7":{"actionType":"Search","content":"<p> \\nThese lines define the initialize method for DriveDistance. In this case, line 33 tells the robot to \\nstop, by giving it zero power and zero turn. Line 34 resets the encoders to make sure that they\u2019re \\nmeasuring from zero when the command starts. If the robot had already been driven around (or rolled \\nby hand) when the command starts, and the encoders weren\u2019t reset, then the distance measurements \\nwould be wrong. There are other ways to account for that, but by default, this command just resets all \\nthe measurements to zero when the command is scheduled. \\n</p>","image":"<img src=\\"./images/lesson10_2.png\\"/>"},"8":{"actionType":"Search","content":"<p> \\nThese lines define what the command should do while executing. This command is called \\n\u201cDriveDistance\u201d, and only drives in a straight line, so this method is pretty simple \u2013 drive the robot with \\nthe speed specified when the command was initialized, and supply 0 power to turning to go in a straight \\nline. As this is the execute method, it will be called continuously while the command is running. \\n</p>","image":"<img src=\\"./images/lesson10_3.png\\"/>"},"9":{"actionType":"Search","content":"<p> \\nThese lines define the end method, which as the comment on line 43 states, is called when the \\ncommand either finishes or gets interrupted. Commands end when their isFinished method returns true, \\nand the most common way to be interrupted is if another command that requires a subsystem the \\ncommand requires is scheduled. For example, you could add code to your robot such that if you press a \\nbutton on your controller, it immediately defaults back to operator control, which would interrupt \\nDriveDistance because operator control would require the drivetrain. Either way, this method tells the \\nrobot to stop when DriveDistance ends. You may want the robot to continue moving after DriveDistance \\nends. For example, the default autonomous mode will have the robot spin 180 degrees after it drives \\nten inches. This works because unlike the execute method, the end method is called only one time. So \\nwhile the end method will stop the robot, it will be very brief and only last until the next line of code \\nthat sets the robot\u2019s speed/turning executes. (Of course, it is possible that the next line that sets the \\nrobot\u2019s speed continues to set its speed to zero.) Note that line 45 takes a boolean variable \\n\u201cinterrupted\u201d, so you can know whether your command finished on its own or something interrupted it. \\nThis can be useful if you have logic that depends on knowing whether or not your command successfully \\ncompleted or was overridden. \\n</p>","image":"<img src=\\"./images/lesson10_4.png\\"/>"},"10":{"actionType":"Search","content":"<p> \\nThese lines define the last method if of the DriveDistance class/command, the isFinished \\nmethod. All the other isFinished methods we\u2019ve looked at so far simply return false, however for driving \\na set distance we want to stop after the distance has been driven, so this isFinished method needs to \\nactually check something. In this case, line 53 calls a method called \u201cgetAverageDistanceInch\u201d, which \\nreturns a number of inches that the robot has traveled using the encoders, and compares it to the \\ndistance the robot is supposed to travel. You can F12 into this method (and its sub-methods) if you want \\nto see how it works, or you can take it for granted that it returns accurate values. Either way, if the \\ndistance traveled is greater than or equal to m_distance, isFinished will return true, and when that \\nhappens, the command\u2019s end method will run and then the command will be over. Note that Math.abs \\nis used here because the distance returned by getAverageDistanceInch will be negative if the robot is \\ndriving in reverse. \\n</p>","image":"<img src=\\"./images/lesson10_5.png\\"/>"},"11":{"actionType":"Read","content":"<p> \\nWe\u2019ve now looked through every line of code in this class, and hopefully you now have a decent \\nunderstanding of an entire file of Java code! Obviously there are still a few things we haven\u2019t gone in \\ndepth into just yet, but you should now understand the various methods and why they exist. Commands \\ncan have more than just these methods. For example, you could define additional methods in \\nDriveDistance that are called by these standard methods while your command is running. But these \\nmethods are the methods you\u2019ll see in every command and that you need to understand. \\n</p>"}},"Command Groups":{"12":{"actionType":"Code","content":"<p>Now that you understand more about individual commands, it\u2019s time to call about command \\ngroups. Command groups are fairly simple \u2013 they are literally just groups of commands. The commands \\ncan be run in sequence or in parallel. In order to run them in parallel they need to run on different \\nsubsystems because only one command can be run on any given subsystem at once. For today we\u2019ll \\nfocus only on commands running sequentially. In a sequential command group, the logic flow is pretty \\nstraightforward. As soon as one command finishes running \u2013 its isFinished returns true, and its end \\nmethod gets called \u2013 the next command will start running. Your code already has a sequential command \\ngroup defined by default so let\u2019s take a look at it. Open AutonomousDistance.java in the commands \\nfolder. \\n</p>"},"13":{"actionType":"Search","content":"<p> \\nLine 10 of AutonomousDistance declares the class and you\u2019ll see that it says \u201cextends \\nSequentialCommandGroup\u201d. Just like when we investigated DriveDistance, we\u2019ll ignore what the word \\n\u201cextends\u201d means just for now, but just like in DriveDistance \u201cextends CommandBase\u201d meant that \\nDriveDistance was a command, \u201cextends SequentialCommandGroup\u201d in AutonomousDistance means \\nthat AutonomousDistance is a sequential command group. That is a lot of words, so just to repeat: the \\ntext \u201cextends SequentialCommandGroup\u201d means that the class is a sequential command group. \\n</p>"},"14":{"actionType":"Search","content":"<p>Sequential command group classes tend to be fairly short and simple because basically all they do is list a bunch of commands that are meant to run in a sequence. AutonomousDistance is a great example of this. Other than line 10, this class only has a couple lines of code. Line 17 declares the constructor, which requires a drivetrain to act upon. Lines 18-22 are actually a single logical line of code, but it\u2019s split over several lines of code for clarity reasons. Notice how there is a semi-colon at the end of line 22, but not at the end of the other lines. We touched on semi-colons earlier, and you\u2019ve been using them in your code. You may or may not have noticed this, but you can put as much whitespace as you want in your code without it having any effect, even on an individual line of code. There is only one semicolon for lines 18-22 because it\u2019s a single line, but with line breaks splitting out each sub-line after each comma to make it more readable.</p>"},"15":{"actionType":"Read","content":"<p> \\nWe\u2019ll talk about the details of how it works in a moment, but chances are, if you look at lines 18-\\n22 and read the text there, you can take a good guess at what it\u2019s doing, especially if you\u2019ve already run \\nyour XRP\u2019s autonomous code. It makes the robot drive a distance, specifically 10 inches. Then it makes \\nthe robot turn 180 degrees. Then it drives ten more inches. Finally, it turns 180 degrees again. Each of \\nthese actions corresponds to one of the sub-lines between lines 19 and 22 of the file. Each of these sub-\\nlines is a command, and as soon as one of them finishes, the next one automatically starts. That\u2019s the \\nmagic of sequential command groups. You don\u2019t need to worry about managing when your commands \\nstop and start \u2013 the CommandScheduler does that for you. \\n</p>"},"16":{"actionType":"Search","content":"<p> \\nLet\u2019s dive into the details. As discussed, line 18 is one method call. Click on \u201caddCommands\u201d and \\npress F12 to see the method declaration. This takes you to line 31 of the definition for the class \\nSequentialCommandGroup: \\n</p>","image":"<img src=\\"./images/lesson10_6.png\\"/>"},"17":{"actionType":"Search","content":"<p>You can see here that addCommands takes a Command parameter, but instead of just saying \\n\u201cCommand commands\u201d it says \u201cCommand\u2026 commands\u201d. In Java, the three periods means that the \\nmethod can take a variable number of objects of the specified type. It could be one, it could be zero, it \\ncould be ten or a hundred. We\u2019re not going to cover how the receiving method deals with receiving \\nthese objects, but just understand what the three periods mean. You can pass any number of Command \\nobjects to the addCommands method. Now go back to AutonomousDistance.java. On lines 18-22, we \\nuse the new keyword to create four Command objects to send to addCommands. A DriveDistance \\ncommand, a TurnDegrees command, another DriveDistance command, and finally, one last TurnDegrees \\ncommand. These four commands are declared inline and sent straight to addCommands. That is literally \\nall that has to be done to create this command group \u2013 simply creating and adding the commands, and \\nthe CommandScheduler takes care of the rest, because for each of the commands, they have isFinished \\nmethods that can tell when they finish. \\n</p>"},"18":{"actionType":"Code","content":"<p> \\nThis makes command groups easy to create and modify. Let\u2019s try it out. See if you can add a \\ncouple more commands to AutonomousDistance. The only thing to watch out for is that on line 22, \\nthere is an extra \u201c)\u201d, which closes the \u201c(\u201c on line 18, and also a semicolon. You can add commands in-\\nbetween the existing commands or at the end, just ensure that the overall addCommands method call \\nstill ends with \u201c);\u201d after the last command that is added. You\u2019ll also need to add commas after each new \\ncommand you add. Here\u2019s an example of adding a couple more commands: \\n</p>","image":"<img src=\\"./images/lesson10_7.png\\"/>"},"19":{"actionType":"Code","content":"<p> \\nTry playing around and making a few auto routines of your own. You can also delete the existing \\ncommands and change the robot\u2019s speed. Note that if the robot\u2019s wheels slip on the surface you\u2019re \\ndriving on, it will make the sensors\u2019 readings of how far you\u2019ve driven or rotated inaccurate. For practice \\nexercises, try the following: \\n<ol><li>Drive the robot in a square with 12-inch sides. </li><li>Drive the robot in the shape of an equilateral triangle with 9-inch sides. </li><li>Drive the robot in a + shape, of a size of your choosing. </li><li>Be creative and make your own path! </li></ol></p>"}},"Wrap-Up":{"20":{"actionType":"Read","content":"<p>Through these ten lessons, you\u2019ve learned a lot about both programming robots and writing \\nsoftware using Java as the programming language. You now know enough to modify programs to write \\nand modify basic programs. You can add your own commands and edit existing functionality. You\u2019ve \\nlearned how to access different systems on the XRP such as the drivetrain, the LEDs, and the \\ngyroscope, and how to interface with your controller and its joysticks and buttons. There\u2019s still a lot to \\nlearn, and in the next course we\u2019ll dive deeper into some of the concepts we had to gloss over in this \\none, such as the \u201cextends\u201d keyword, the @Override tags, and how to build up your own programs from \\nscratch. But if you\u2019ve made it this far, you are well on your way to becoming an advanced programmer. \\nTake a moment to be proud of what you\u2019ve learned so far and feel free to spend some time having fun \\nwith the XRP. Don\u2019t be afraid to modify anything you find in the code and see what happens. Worst \\ncase, you can always create a new XRPReference project from scratch and start over! When you\u2019re \\nready, you can dive into Course 2 and continue your learning. \\n</p>"}},"totalParagraphs":21},"Lesson 11 - Logical Operators":{"Introduction":{},"Logical Operators":{"0":{"actionType":"Read","content":"<p>You\u2019ve worked with if statements in a few lessons already and seen how they can be useful for \\nhaving code run or not run based on conditions that arise. Often these conditions are simple \u2013 for \\nexample, if a button pressed, drive in cut power. However sometimes you might have more complicated \\nconditions. Let\u2019s revisit your project from lesson 9, DriveStraight, for an example of this. In the \\nDriveStraight project, you added an if statement to line 50 of Drivetrain.java to update the target \\nheading if the user was turning the robot: \\n</p>","image":"<img src=\\"./images/lesson11_0.png\\"/>"},"1":{"actionType":"Read","content":"<p> \\nThis if statement allowed you to turn the robot and also have your orientation-correcting code \\nrun, however, it resulted in jerky behavior because it would stop updating the heading immediately \\nafter turn joystick stopped registering, even though the robot still had angular momentum meaning the \\nturn was not yet finished yet. We could solve for this problem with a slightly more refined if statement: \\nif the user is actively turning the robot, or there\u2019s an existing turn that is still finishing, update the target \\nheading. In this sentence, the word \u201cor\u201d is a logical operator. We can use it in an if statement, and if \\neither of the conditions surrounding the \u201cor\u201d or true, the if statement returns true. There are a number \\nof logical operators in Java, but we\u2019ll focus on three main ones: and, or, and not. \\n</p>"},"2":{"actionType":"Read","content":"<p>All three operators are simple enough to understand and use, although you can create complicated logical conditions by combining them. For now let\u2019s focus on basics. The and operator will return true if both conditions it checks are true, and is represented by two ampersands, or \u201c&&\u201d. If either condition is false, the and statement will return false. Example: </p>","image":"<img src=\\"./images/lesson11_1.png\\"/>"},"3":{"actionType":"Read","content":"<p>The or operator will return true if either of the conditions it checks are true. It will also return true if both of the conditions are true. As long as one of the conditions is true, it does not matter if the other conditions are true or false. The or operator is represented by two \u201cpipes\u201d, or \u201c||\u201d.  Example:  </p>","image":"<img src=\\"./images/lesson11_2.png\\"/>"},"4":{"actionType":"Read","content":"<p>The not operator will return true if and only if the condition it\u2019s checking is false. So it simply returns the opposite of whatever condition it checks. The not operator is represented by a \u201cbang\u201d, or exclamation point (!). Example:  </p>","image":"<img src=\\"./images/lesson11_3.png\\"/>"},"5":{"actionType":"Read","content":"<p>Different people and different organizations have different feelings on using the not operator. \\nSome people prefer to check if a value is equal to false over using the not operator because they \\nfind it easier to read. Here\u2019s an example of the same if statement, but without the not operator: \\n</p>","image":"<img src=\\"./images/lesson11_4.png\\"/>"},"6":{"actionType":"Read","content":"<p>Regardless of your, your teacher\u2019s, or your future employer\u2019s opinion on this, you\u2019ll need to \\nunderstand the not operator. You\u2019ll also see it used in combination with an equal sign to \\nrepresent \u201cnot equal to\u201d. Here\u2019s an example of that: \\n</p>","image":"<img src=\\"./images/lesson11_5.png\\"/>"},"7":{"actionType":"Read","content":"<p>You can also combine these operators. You can group conditions together using parentheses to \\nmake sure the operators work on exactly the text you want them to. Here\u2019s an example: \\n</p>","image":"<img src=\\"./images/lesson11_6.png\\"/>"},"8":{"actionType":"Read","content":"<p>There is no limit to how many clauses you could put in a single if statement, although you don\u2019t \\nwant to overdo it because if you do your code will become difficult to follow. You can split individual \\nconditions out into boolean variables on their own line to simplify things a bit. Example: \\n</p>","image":"<img src=\\"./images/lesson11_7.png\\"/>"},"9":{"actionType":"Read","content":"<p>When using boolean variables, such as \u201cmorning\u201d and \u201cdateIsTenthOrFifteenth\u201d previously, you don\u2019t need to use the == operators \u2013 you can simply use the variables since they evaluate to true/false already. Again, different people have different opinions on whether this makes the code more or less readable, but you need to be able to understand it either way. Here\u2019s the final if statement from before but stylized differently. This has exactly the same meaning as the final if statement from the example above:  </p>","image":"<img src=\\"./images/lesson11_8.png\\"/>"},"10":{"actionType":"Read","content":"<p>And lastly, you can use the evaluation of a statement to set the value of a boolean variable, without \\nusing if statements. The same warning about opinions on way to structure code applies. Here\u2019s an \\nexample. Note the difference between the single = sign being used to assign a variable a value, and the \\ndouble == signs being used to evaluate an expression. \\n</p>","image":"<img src=\\"./images/lesson11_9.png\\"/>"}},"The DriveStraight Project":{"11":{"actionType":"Read","content":"<p>Now that you understand what logical operators are and how they can be used to create \\ncompound conditions, let\u2019s fix that issue with the DriveStraight project. Right now, our condition is \u201cthe \\ndriver is pressing on the turning joystick\u201d, but we really want a condition along the lines of \u201cthe driver is \\npressing on the turning joystick or they were very recently pressing on the turning joystick, and that turn \\nhasn\u2019t finished yet.\u201d The second clause of that statement covers the time between when the driver \\nreleases the joystick, and the turn completes. But how do we actually write that in code? There are \\ndifferent ways one could go about defining that. We\u2019ll use a fairly simple one and just use a timer to \\ncheck how much time has passed since the driver released the joystick. Presumably, the turn will finish \\nwithin some fairly small amount of time after they release the joystick. If the drive straight code is off for \\na fraction of a second after the turn finishes, it\u2019s not a big problem, so we don\u2019t need to worry about our \\nestimate for the time being slightly off. \\n</p>"}},"The WPILib Timer Class":{"12":{"actionType":"Code","content":"<p>The WPILib has a built-in Timer class you can use for timing things in your code. The capabilities \\nof this class are fairly straightforward \u2013 you declare a Timer object, and you can start it, stop it, check \\nhow much time has elapsed, and reset it to zero. In your DriveStraight project, open Drivetrain.java, and \\nafter you declare your targetHeading variable on line 19, add a new line and declare a Timer object \\ncalled \u201cturnTimer\u201d. You\u2019ll get a red line under Timer, so use the lightbulb to import the Timer class from \\nedu.wpi.first.wpilibj. This is important because there are other Timer classes that you\u2019ll see which are \\nbuilt in to the Java programming language, but we want the WPILib one. You can initialize your Timer in \\nthe same line you declare it: \\n</p>","image":"<img src=\\"./images/lesson11_10.png\\"/>","more_images":"<img src=\\"./images/lesson11_11.png\\"/>"},"13":{"actionType":"Code","content":"<p> \\nIf you create a new line on line 52 and type \u201cturnTimer.\u201d You\u2019ll get a dropdown of various Timer \\nmethods you have access to. You can scroll through this to see the various capabilities of the Timer \\nclass. This is good for seeing what\u2019s available to you, but delete this line for now. The methods we\u2019re \\nmost interested in for the timer are start, stop, and reset. Resetting the timer is important because if we \\ndon\u2019t reset it after each turn, then the next time the user turns, the grace period we check for using the \\ntimer will have already elapsed because the timer started from a value above the grace period, instead \\nof starting from zero. \\n</p>","image":"<img src=\\"./images/lesson11_12.png\\"/>"},"14":{"actionType":"Read","content":"<div><p>There are a few conditions we need to think about in order to make this work. First off, is the  user turning? If so, we need to update the heading. We also need to reset the timer constantly when  this is true, because we want to start the grace period from when the user releases the joystick, not  from when they first press it. The amount of time they hold the joystick down for varies and can\u2019t be predicted, so timing the grace period from when they first press it won\u2019t work. Another important  condition is, is the user done turning but the time is within the grace period? If so, we want to continue updating the heading, but we do NOT want to reset the timer, because now we need to time the grace  period.  Lastly, we want to know if the timer is higher than the grace period value, because if it is, we  consider the turn to be finished. In this case we want to stop updating the heading, stop the timer, and reset the timer for future use. Here are the conditions in a list: </p><ul><li>Is the user turning? -> Update the heading, reset the timer, and start the timer</li><li>Is the user NOT turning, BUT the timer is within the grace period? -> Update the heading but DO NOT reset the timer</li><li>Is the user NOT turning, AND the timer is greater than the grace period? -> Do NOT update the heading, but DO reset and stop the timer.</li></ul></div>"},"15":{"actionType":"Read","content":"<div><p>There are a number of different ways you can implement these conditions in your code, and there isn\u2019t necessarily a single right way to do it. A good way to approach it is to identify three key boolean variables:</p><ul><li>Is the user turning?</li><li>Is the timer within the grace period?</li><li>Does the heading need to be adjusted <i>specifically because of the timer?</i></li></ul></div>"},"16":{"actionType":"Code","content":"<p>In your arcadeDrive method, try creating these three boolean variables. Note that for the third \\none you need to check if the timer is in the grace period, but you also need to check that the timer is \\ngreater than zero, because the timer starts at zero. This means that even if the user has never turned, if \\nyou simply check that the timer is less than the grace period, it will return true and your code will \\nupdate the target heading all the time, even when not turning. This would result in your code never \\ncorrecting the robot\u2019s heading because it will always set the target heading to the robot\u2019s current \\nheading. This means you have two conditions to check \u2013 that the timer is within the grace period and \\nthat the timer is greater than zero. This is a chance to try out using the and operator. For the grace \\nperiod, create a constant in Constants.java. You can play around with values to see what works best. A \\ngood starting point is .5 seconds. Here\u2019s an example of creating these three variables: \\n</p>","image":"<img src=\\"./images/lesson11_13.png\\"/>"},"17":{"actionType":"Code","content":"<p>With these three variables, you can now look back at the list of conditionals (the first list of \\nbullet points in this section) and create all the necessary if statements. Give it a try, using the variables \\nand logical operators to emulate the logic described. Inside the if statements, put the necessary logic. \\nThe only lines you need inside the statements are lines to start/stop/reset the gyro (turnTimer.start(), \\n.stop(), and .reset(), respectively) and the line to update the targetHeading. When you\u2019re done your \\ncode might look something like this: \\n</p>","image":"<img src=\\"./images/lesson11_14.png\\"/>"},"18":{"actionType":"Code","content":"<p> \\nWhen you\u2019ve done this, it\u2019s time to test your code. With the code you\u2019ve previously written in \\nthis method, your completed method might look something like this: \\n</p>","image":"<img src=\\"./images/lesson11_15.png\\"/>"},"19":{"actionType":"Read","content":"<p> \\nGo ahead and deploy this and let\u2019s test it out! \\n</p>"}},"Testing the Code":{"20":{"actionType":"Robot","content":"<p>Let\u2019s talk briefly about how to test robot code. As we do more advanced projects, testing \\nbecomes more and more important because it\u2019s often easy to make a mistake with your code and not \\nnotice it the first time you run your program. You want to test your code in as many situations as \\npossible to make sure you\u2019re not missing anything. There is a lot of thought and research dedicated \\nspecifically to testing, but for today we\u2019ll just cover some basic concepts. First, you want to test as many \\nedge cases as possible. The definition of an edge case changes slightly depending on the context, but in \\ngeneral, it\u2019s a situation that is rare and exists near the \u201cboundaries\u201d of your logic. For example, say you \\nhad an if statement that changes the behavior of your program if some variable is greater than 100. \\nSome edge cases to check would be when the variable is 99 (clearly not greater than 100), 100 (also not \\ngreater than 100, but might return true if you accidentally used \u201cgreater than equal to\u201d in your code \\ninstead of greater than), and 101, which is clearly greater than 100. For the program we\u2019re working with \\nright now, some edge cases would be to make sure that the robot works if you never turn it (e.g. to put \\nit back on the tray and rotate it around, and to make sure it maintains its orientation),  to make sure it \\nworks if you turn it very briefly, to make sure it works if you turn it for an extended period of time, and \\nto make sure it still passes the tray test after you turn it. \\n</p>"},"21":{"actionType":"Code","content":"<p> \\nAnother concept in testing is to add outputs to your program so you can see what is happening \\nin real time. Outputs can take various forms. When we turned on an LED based on the robot\u2019s \\norientation, that was an output in a literal sense \u2013 something we can see that gives us feedback on \\nwhat\u2019s going on. Other outputs are all the data you see on the Robot Simulation interface. In this case, \\nlet\u2019s add a System.out.println() to get output in the terminal. A key variable for this program is the timer. \\nIf you output the timer\u2019s value after your if statements, you will be able to see the value in the terminal \\nwhile you run your program: \\n</p>","image":"<img src=\\"./images/lesson11_16.png\\"/>"},"22":{"actionType":"Read","content":"<p>Doing this allows you to check and see that your timer is starting whenever you stop turning, and \\nresetting after it hits your Constants value. You can use this to check that everything is behaving as you \\nexpect based on the value of this variable. If your code doesn\u2019t work right after you deploy it, this will be \\na good trick to debug and figure out where your mistake is. \\n</p>"},"23":{"actionType":"Code","content":"<p> \\nBut let\u2019s say your code does work immediately after you deploy it. That\u2019s good, but it can \\nsometime lead to confusion of its own \u2013 why does the code work? Did you do everything correctly and \\nyou\u2019re now done, or are you not testing all of the cases? If you add your SOP line, you can help confirm \\nthat everything is correct. You can also test this by changing things to make it incorrect and then \\nconfirming that your code no longer works, before reverting the change. Let\u2019s try that. You declared a \\nconstant for the grace period for turning. What if we change the value of that constant? Try a few \\ndifferent values. If you set it to .05, that will be too short and you should be able to observe the same \\njerky behavior after turning. If you set it to 5, there will be a delay of several seconds after you finish \\nturning before the timer finishes, and you can observe this in the terminal as you watch your timer \\nincrease in value to 5 before resetting. During this time you should be able to physically move your \\nrobot (pick it up, rotate it, and set it back down within the 5 seconds.) It will not correct its position \\nduring this time because it\u2019s still in the turning grace period. If you observe these behaviors when you \\ntest, but you do not observe them when you set the grace period value back to something reasonable \\nlike .5, then you can be confident your code is working. \\n</p>"}},"Tidying Up":{"24":{"actionType":"Search","content":"<p>At this point, you could be done with the project, but there\u2019s a little bit of room for optimization \\nand also another chance to practice your logical operators. Right now, we have two conditionals that \\nboth update the target heading: \\n</p>","image":"<img src=\\"./images/lesson11_17.png\\"/>"},"25":{"actionType":"Code","content":"<div><p>Although there are exceptions, duplicated lines in if statements are often an indicator that you  could optimize your code. If we rephrase our conditional slightly, we can eliminate this. Try writing three  if statements using the following conditions:</p><ul><li>If the user is turning, reset and start the timer</li><li>If the user is turning OR you need to adjust the heading due to the timer, update the heading</li><li>If the timer is greater than the grace period, stop and reset the timer</li></ul><p>After you do this, your conditionals might look something like this:</p></div>","image":"<img src=\\"./images/lesson11_18.png\\"/>"},"26":{"actionType":"Robot","content":"<p> \\nNotice how not only did you shave one line of code off of your program, but there\u2019s less text \\noverall. In software development, less is usually better, because the more code you have, the more \\nwork you have to do to read through it, test it, make changes, etc. Less is good. Once you\u2019ve made \\nthese changes, test your code (with or without the SOP statement), and when it works, you\u2019re done! \\n</p>"}},"totalParagraphs":27},"Lesson 12 - Inheritance & Polymorphism":{"Introduction":{"0":{"actionType":"Read","content":"<p> \\nIn this lesson we\u2019ll focus on a couple more critical OOP concepts, and finally cover the keyword \\n\u201cextends\u201d, which you\u2019ve seen when working with commands but haven\u2019t had explained to you yet. We\u2019ll \\ndo a quick review of a few classes in your XRPReference project so you understand how the concepts \\nrelate, and then do a desktop project without the XRP to get some practice. \\n</p>"}},"Composition, Inheritance, & Polymorphism":{"1":{"actionType":"Read","content":"<p>There are three main concepts to cover right now: composition, inheritance (extension), and \\npolymorphism. \\n</p>"},"2":{"actionType":"Search","content":"<p><i>Composition</i> is pretty simple and you\u2019ve already seen a number of examples of it. It\u2019s the idea that classes can be composed of other classes. You use this every time you declare an object of as a class field in an object of another type. For example, here\u2019s a snippet from the Drivetrain class in lesson 11:  </p>","image":"<img src=\\"./images/lesson12_0.png\\"/>"},"3":{"actionType":"Read","content":"<p> \\nAmong other objects, the Drivetrain class is composed of a Timer object and two Spark objects, \\nrepresenting the timer we use for driving straight, and the left and right motors. Composition is simple \\nbut powerful as it allows for complexity to be broken into simpler pieces, and for code reusability as \\nclasses tend to be self-encapsulated units that can be used in more than one place. \\n</p>"},"4":{"actionType":"Search","content":"<p><i>Inheritance</i> is the idea that you can define a class (called a \u201csubclass\u201d or \u201cchild\u201d class) which has all the characteristics of its \u201cparent\u201d class, and then additional characteristics as well. If you have a lot of classes which share common functionality, this is useful, because that way you don\u2019t need to re-write the same functionality. You\u2019ve already used inheritance too although you probably haven\u2019t realized it. Every time you see the keyword <i>extends</i>, you\u2019re using inheritance. A class that extends another class,  inherits attributes from that class. In the last image, Drivetrain extends SubsystemBase. SubsystemBase is a class the CommandScheduler recognizes as a subsystem. So when Drivetrain extends SubsystemBase, Drivetrain is also recognized as a subsystem, which allows you to run commands that require it, such as the autonomous commands you wrote in lesson 11 and also the ArcadeDrive command. Drivetrain also literally does extend the SubsystemBase class, because you add a  bunch of functionality. When you need a Drivetrain class, you need a Drivetrain class \u2013 not any random Subsystem. If you got some SubsystemBase object that didn\u2019t have, for example, left and right motors, it wouldn\u2019t do you any good.</p>"},"5":{"actionType":"Read","content":"<p><i>Polymorphism</i> is a fancy word for an important concept. It basically means that an object of a certain class can exist as a few different kinds of objects. Let\u2019s again use our subsystems and commands as examples. The CommandScheduler runs your commands by calling their execute method constantly. It knows that it\u2019s calling the execute method of a command. However it does not know if it\u2019s calling the execute method of an ArcadeDrive command, a DriveDistance command, a TurnDegrees command, or something else. From its point of view, it\u2019s simply calling the execute method of a Command object. In reality that Command object might be of any of the types of command just listed, or something different. This is polymorphism: all the different types of commands are each, well, commands, and so a generic Command object could end up being any of those types, and that\u2019s fine since they all have the same initialize, execute, end, and isFinished methods. This will make more sense as you see more examples of it.</p>"},"6":{"actionType":"Code","content":"<p>That\u2019s a brief introduction to these concepts. For a deeper study including lots of examples of code, read sections 1-4 (NOT 1.1-1.4, the full sections 1-4) on this page. You may want to open the code in a desktop app in VSCode and follow along, since the text portion is fairly short and they rely on code examples: <a href=\'https://www3.ntu.edu.sg/home/ehchua/programming/java/J3b_OOPInheritancePolymorphism.html\'>https://www3.ntu.edu.sg/home/ehchua/programming/java/J3b_OOPInheritancePolymorphism.html</a></p>"}},"Examples in the XRPReference Project":{"7":{"actionType":"Search","content":"<p>Now that you\u2019ve learned more about these concepts, let\u2019s see how they apply to our robot \\ncode. Open a default XRPReference project, open DriveDistance.java, and look at line 10. You\u2019ll see the \\ntext \u201cextends CommandBase\u201d. You learned before that the extends keyword is how Java knows your \\ncommand is actually a command, and now you understand why. CommandBase is a command, so any \\nclass that extends CommandBase is also a command. A command is defined as having the four methods \\nwe\u2019ve talked about \u2013 initialize, execute, isFinished, and end \u2013 so DriveDistance has these methods, and \\nthey\u2019re tagged with @Override as explained in the reading. We\u2019ll talk about how a command is defined \\nas having these four methods in an upcoming lesson. \\n</p>"},"8":{"actionType":"Search","content":"<p> \\nThere are numerous similar examples in the XRPReference object but let\u2019s look at just one \\nmore. Open Robot.java. In a previous lesson you learned about how there are methods in this class that \\nrun constantly depending on what mode the robot is in (disabled, teleoperated, etc.) There\u2019s also the \\nrobotPeriodic() method that runs all the time regardless of which mode you\u2019re in. Why do these \\nmethods run all the time? Look at line 17 where the class is defined: \\n</p>","image":"<img src=\\"./images/lesson12_1.png\\"/>"},"9":{"actionType":"Search","content":"<p> \\nThe Robot class extends TimedRobot. If you click on TimedRobot and press F12, you\u2019ll be taken \\nto the class definition for TimedRobot. You\u2019ll notice that TimedRobot extends IterativeRobotBase: \\n</p>","image":"<img src=\\"./images/lesson12_2.png\\"/>"},"10":{"actionType":"Read","content":"<p>This is a good example of how you can make a <i>hierarchy</i> by extending classes. Your Robot class extends TimedRobot, which extends IterativeRobotBase. Therefore your Robot class is a TimedRobot, and is also an IterativeRobotBase. This allows you to go from general to specific. In the case of the XRP, the general classes are all written for you and wouldn\u2019t modify them unless you\u2019re doing something quite advanced. When you write your own programs from scratch, you\u2019ll create your own hierarchies.</p>"},"11":{"actionType":"Search","content":"<p>For now, if you once again F12 on IterativeRobotBase, you\u2019ll again be taken to a class definition. \\nIn this file, you can ctrl-f and search for \u201cperiodic\u201d, and you\u2019ll find all of the period methods we were just \\ntalking about. Don\u2019t worry about most of the code you see in this file, but let\u2019s take one quick peek at \\nthe teleopPeriodic() method: \\n</p>","image":"<img src=\\"./images/lesson12_3.png\\"/>"},"12":{"actionType":"Search","content":"<p>On line 182, as shown in the previous image, you\u2019ll notice there\u2019s an SOP saying \u201cOverride me!\u201d. When the people writing the WPILib were making these general classes that get extended, they included this line so that if you run code without realizing you need to override these periodic methods, when you run your code the default, or super, method will be called and it will tell you to override it. In the XRPReference project these methods are already overridden \u2013 in this case on line 85 of Robot.java \u2013 but this is just an example of how the hierarchy works. Looking through the code like this gives you a deeper understanding of exactly how your Java program works.</p>"}},"RobotComposition Project":{"13":{"actionType":"Read","content":"<div><p>When modifying an already-existing XRPReference project, most of the hierarchy work is already done for you. It\u2019s important to understand it, and when doing advanced work with your robot you will even add to it. However, for solidifying your understanding of these concepts, it\u2019s best to make your own hierarchies from scratch, so we\u2019ll do a desktop project for this lesson. In this project you\u2019ll create the hierarchy for defining robots that can participate in various FIRST Robotics Competition (FRC) games. If you aren\u2019t familiar with FRC, here are some links to YouTube videos that show how the games work. FRC robots are programmed using the same exact WPILibrary that you\u2019re using to learn programming, so if you have the opportunity to join a team at your school or in your community, not only will you have bigger and stronger robots to play with than the XRP, but you\u2019ll already be ready to dive right into programming them. Here are the videos for the 2018, 2019, and 2020 editions of the competition. Pay attention to the possible different mechanisms on the robots. They all have drivetrains, along with other mechanisms that depend on the robot and the game. Some robots might have elevators, some might have ball shooters, and some might have climbers. You don\u2019t need to worry about the point values</p><ul><li>2018, Power Up: <a href=\'https://www.youtube.com/watch?v=HZbdwYiCY74\'>https://www.youtube.com/watch?v=HZbdwYiCY74</a></li><li>2019, Destination: Deep Space: <a href=\'https://www.youtube.com/watch?v=Mew6G_og-PI\'>https://www.youtube.com/watch?v=Mew6G_og-PI</a></li><li>2020, Infinite Recharge: <a href=\'https://www.youtube.com/watch?v=gmiYWTmFRVE\'>https://www.youtube.com/watch?v=gmiYWTmFRVE</a></li></ul></div>"},"14":{"actionType":"Read","content":"<div><p>Now that you\u2019ve seen the games, let\u2019s define a hierarchy for <i>composing</i> some robots in code. For the sake of this project, we will assume that robots from the following games have the following types of manipulators. All robots will have drivetrains:</p><ul><li>Power Up: a climber and an elevator.</li><li>DeepSpace: a climber and an elevator.</li><li>InfiniteRecharge: a climber and ball shooter.</li></ul></div>"},"15":{"actionType":"Code","content":"</p><ol><li>Create a new desktop project called RobotComposition and then create the following classes: RobotComposition (which will contain your main method), Robot, Drivetrain, GamePieceManipulator, CubeElevator, BallShooter, HatchPanelPlacer, PowerUpRobot, DeepSpaceRobot, InfiniteRechargeRobot</li><li>In your robot class, define two protected class fields, called \u201cdrivetrain\u201d and \u201cmanipulator\u201d. Make their variable types \u201cDrivetrain\u201d and \u201cGamePieceManipulator\u201d, respectively. We haven\u2019t  talked about protected, but it is in between public and private. With protected variables, other  classes cannot access them, but subclasses can, making them handy for use when creating  hierarchies.  </li><li>In your PowerUp, DeepSpace, and InfiniteRecharge robot classes, use the extends keyword to make these classes inherit from the class \u201cRobot\u201d. We will refer to these three classes \u2013 but not  Robot itself - as \u201cgame robot classes\u201d.</li><li>Make your CubeElevator, HatchPanelPlacer, and BallShooter classes extend the class \u201cGamePieceManipulator\u201d. We will refer to these three classes \u2013 but not GamePieceManipulator  itself - as \u201cmanipulator classes\u201d.</li><li>In each of your game robot classes, create a constructor method that has no parameters. Inside your constructor, create an object of the class of the manipulator that best corresponds to that game. Then set the game robot\u2019s manipulator class field <i>(which it inherited from Robot, and therefore you don\u2019t see in the code file you\u2019re looking at)</i>, to the newly created object. Note how the \u201cmanipulator\u201d variable is of type GamePieceManipulator, but across our three game robot classes, we were able to set it equal to objects of three different classes. That is because all of these classes, despite being different from each other, are still GamePieceManipulators.</li></ol></div>"},"16":{"actionType":"Code","content":"<p>Example: DeepSpaceRobot constructor. Note how we can set this.manipulator, despite it not \\nbeing defined inside of the file. \\n</p>","image":"<img src=\\"./images/lesson12_4.png\\"/>"},"17":{"actionType":"Code","content":"<div><p>6. Go into GamePieceManipulator and create a method called \u201cmanipulate\u201d that SOP\u2019s s message.</p><p>7. Go into Robot and create a method called \u201cmanipulateGamePiece calls the manipulator.manipulate() method.</p><p>8. In your main method, create a robot object and a GamePieceManipulator object. Set the Robot object\u2019s manipulator variable equal to your newly created GamePieceManipulator object. Then call your robot\u2019s manipulateGamePiece method. Now is a good chance to run your code and check that everything is working \u2013 if it is, you\u2019ll see the SOP line you added to  GamePieceManipulator.manipulateGamePiece get called and you\u2019ll see the output in your terminal.</p></div>","image":"<img src=\\"./images/lesson12_5.png\\"/>"},"18":{"actionType":"Code","content":"<div><p>9. Go into your three manipulator classes and create manipulate() methods there. These methods should output something identifying what kind of manipulator they are, e.g. \u201cnow shooting power cells.\u201d</p><p>10. In your main method, create three new objects, one for each type of robot.</p><p>11. Call the manipulateGamePiece method for each of your robot objects. Example:</p></div>","image":"<img src=\\"./images/lesson12_6.png\\"/>"},"19":{"actionType":"Read","content":"<p>You will have four lines of output, each of which is a message describing a type of manipulator. \\nNote a couple things: \\n</p>"},"20":{"actionType":"Read","content":"<p>1. We defined a \u201cmanipulate\u201d method for Robot.java so all robots can \u201cmanipulate\u2019, even if \\nthe output is generic. \\n</p>"},"21":{"actionType":"Read","content":"<p>2. We overrode \u201cmanipulate\u201d in our manipulator subclasses, so when we called .manipulate() \\nin Robot.java, it was able to perform more specific functionality. (Polymorphism.) \\n</p>"},"22":{"actionType":"Read","content":"<p>3. In Robot.java, we created a manipulateGamePiece() method, which we never overrode. \\nSince we extended Robot.java with our robot classes, they already had access to the \\nmanipulateGamePiece() method, despite us never defining it in those classes. \\n</p>"}},"totalParagraphs":23},"Lesson 13 - Arrays":{"Introduction":{"0":{"actionType":"Read","content":"<p><i>Note: there is no included solution program for lesson 13.</i></p>"},"1":{"actionType":"Read","content":"<p> \\nFor this lesson we\u2019ll step back from object-oriented programming for just a bit and go back to \\nsome more basic syntax/variable/data stuff. Specifically, arrays, and the \u201cArrayList\u201d syntax. The concept \\nof arrays is general to most programming languages, but \u201cArrayList\u201d is specific to Java. Other languages \\nhave similar constructs. \\n</p>"},"2":{"actionType":"Read","content":"<p> \\nAn array is a set of variables of the same type. For example, you could make an array of days \\nthat has seven items, and call it a week. Or you could make an array of months with 12 objects, and call \\nit a year. \\n</p>"},"3":{"actionType":"Read","content":"<p> \\nOf course, you could create whatever variables you want to create without putting them in an \\narray. For example, if you had a class called \u201cDay\u201d and you wanted to make a week, you could declare \\nseven different Day objects, and you could call them monday, tuesday, etc. However, arrays let you \\ngroup objects together and perform operations on the set. For example, you could write a for loop that \\ndoes some action on every item in an array. For example, in our week array, it could output the weather \\nfor each day. If you have a bunch of individual variables you declared that aren\u2019t grouped, this would be \\ndifficult or even impossible. For example, you could write seven lines to output the weather for each day \\nof a week, since every week has seven days. But imagine trying to do this for a month. Not only would \\n31 lines of output be awful to write, but some months don\u2019t even have 31 days. The code might work for \\nJanuary but you\u2019d get an error when you tried to output the 30th day of February. \\n</p>"},"4":{"actionType":"Code","content":"<div><p>Read through the following page for how to create and use arrays:  <a href=\'https://www.tutorialspoint.com/java/java_arrays.htm\'>https://www.tutorialspoint.com/java/java_arrays.htm</a> Pay careful attention to the \u201cprocessing arrays\u201d section as this shows you how to access individual elements and use the .length property of the array to set up a for loop. You can use the syntax to access an index or an array both to read values and to update them. Array Exercises</p><ol><li>Create an integer array with 70 values called \u201ctestScores\u201d. Populate the array with values; it doesn\u2019t matter what the values are. (You may want to use a loop to do this.)</li><li>Write a loop that calculates and outputs the mean value of the test scores.</li><li>Write a foreach loop that outputs every value in the array.</li><li>Create a new integer array, also with 70 values, called \u201ctestScoresWhenYouDontStudy\u201d. Copy the values from \u201ctestScores\u201d into your new array, but subtract 25 from each value.</li><li>Create an array of seven strings called \u201cdays\u201d that has each day of the week as a variable. Output this array using a for loop.</li></ol></div>"}},"ArrayLists":{"5":{"actionType":"Read","content":"<p> \\nIn Java, arrays are useful but have some limitations. They are of a fixed size, which means that \\nonce you create them, you can\u2019t change how big they are. This sometimes isn\u2019t an issue \u2013 for example, if \\nyou\u2019re trying to keep track of days in a year, you can know that ahead of time and declare your array to \\nbe 365 items. However, for some things it\u2019s problematic. Say you have a program that calculates a \\nstudent\u2019s grade by simply calculating the mean of all their assignment scores. Every time a new \\nassignment is graded, that score gets added to the array. You decide to store all the scores in an array, \\nbut it\u2019s impossible to know how many scores there are going to be ahead of time. In this situation, every \\ntime you want to make the array bigger, you would need to declare a new array of a larger size, copy the \\nold array into the new array, and delete the old array. An alternative to this is to use Java\u2019s ArrayList, \\nwhich is basically a convenient wrapper for the basic array syntax. The ArrayList is going to do the \\nactions just described, but it will do it behind the scenes so you don\u2019t have to manually do it yourself. \\n</p>"},"6":{"actionType":"Read","content":"<p> \\nThe following page shows the syntax for setting up ArrayLists. ArrayLists are objects so you will \\nuse methods on them, e.g. .size() and .get(), instead of just calling .length or accessing an index directly. \\nYou don\u2019t need to memorize all of these methods just yet, but you should at least read through the page \\nuntil you get to the part where it says \u201cCollections.min, max.\u201d The most basic methods \u2013 size, get, set \u2013 \\nyou do need to know. Note how they use \u201c<\u201d and \u201c>\u201d as part of the syntax. This is kind of weird, but \\ndon\u2019t worry about it for now. Just go with it and put an object type in between. In this case we\u2019ll use \\n\u201cInteger\u201d.  \\n</p>"},"7":{"actionType":"Code","content":"<p>You might wonder why we use the word \u201cInteger\u201d instead of \u201cint\u201d, which we use to declare  integer variables. Don\u2019t worry about this for now \u2013 just know that Java will automatically convert  between \u201cint\u201d and \u201cInteger\u201d. <a href=\'https://www.dotnetperls.com/arraylist-java\'>https://www.dotnetperls.com/arraylist-java</a></p>"},"8":{"actionType":"Code","content":"<p>ArrayList Exercises: now, do the array exercises from earlier in the lesson, but use ArrayLists instead of arrays.</p>"}},"Two-dimensional Arrays":{"9":{"actionType":"Code","content":"<div><p>A two-dimensional array is basically an \u201carray of arrays\u201d. If instead of making an array of integers, you made an array of <i>arrays of integers</i>, you would end up with, essentially, a square or grid of integers. For example, you could make an 8x8 two-dimensional array to represent a chessboard. In Java, 2d arrays don\u2019t actually need to be squares. The first dimension must have some length \u2013 how long your array of arrays is \u2013 but the second dimension, the length of <i>each array within the array</i>, can vary. Read through this link for some examples and the syntax for how to set these up. <a href=\'http://www.java67.com/2014/10/how-to-create-and-initialize-two-dimensional-array-java-example.html\'>http://www.java67.com/2014/10/how-to-create-and-initialize-two-dimensional-array-java-example.html</a></p><p>Two-Dimensional Array Exercises</p><p>1. Create a 10x10 array of integers, and populate it with the numbers 1 to 100. Then print the array, with a new line after each multiple of 10. So your output should look as follows:</p><p>1 2 3 4 5 6 7 8 9 10</p><p>11 12 13 14 15 16 17 18 19 20</p><p>etc.</p><p>2. Create an 8x8 \u201cchessboard\u201d, by making a 2d array of Boolean values. For this, the value \u201ctrue\u201d will represent a black square, and \u201cfalse\u201d will represent a black square. Then output the results. It should look as follows:</p><p>false true false true false true false true</p><p>true false true false true false true false</p><p>etc.</p></div>"}},"totalParagraphs":10},"Lesson 14 - Abstract Classes & Interfaces":{"Introduction":{"0":{"actionType":"Read","content":"<p>In this lesson we will just about finish up with object-oriented programming. There will be a couple small things left to cover in lesson 15 but you\u2019re almost done. The two big topics in this lesson are <b>abstract classes</b> and <b>interfaces</b>. Both of these concepts are somewhat similar to what you learned in the inheritance lesson, but they have slightly different use cases.</p>"},"1":{"actionType":"Read","content":"<p>One quick note \u2013 a class can only inherit from, or extend, one class. E.g. you can\u2019t do class Dog \\nextends Animal, extends Pet, etc. You have to choose one. \\n</p>"},"2":{"actionType":"Code","content":"<p>Watch this video \u2013 it does a good job of explaining abstract classes. Pay close attention to the example with the array at the end. Being able to group different kinds of objects together and perform operations on all of them because it\u2019s known they extend the same base class is critically important. This ability to group things based on parent class (or interface) is one of the biggest advantages to using inheritance, abstract classes, and interfaces, as opposed to just typing out the methods, but NOT creating the parent class/abstract class/interface. Here\u2019s the video: <a href=\'https://www.youtube.com/watch?v=pt1S11yX-7k\'>https://www.youtube.com/watch?v=pt1S11yX-7k</a></p>"},"3":{"actionType":"Code","content":"<p>Here\u2019s a link to the other site we\u2019ve been referencing\u2019s explanation of abstract classes. It\u2019s not bad (I think the shape example is a good one to show how sometimes you need to define that methods exist, but can\u2019t logically be implemented in the parent class), but you\u2019ll have to read through the code a little bit. For abstract classes, read sections 5.1 through 5.3. <a href=\'https://www3.ntu.edu.sg/home/ehchua/programming/java/J3b_OOPInheritancePolymorphism.html#zz\'>https://www3.ntu.edu.sg/home/ehchua/programming/java/J3b_OOPInheritancePolymorphism.html#zz</a></p>"},"4":{"actionType":"Code","content":"<p>For interfaces, watch this video: <a href=\'https://www.youtube.com/watch?v=NnZQ-C0x4hs\'>https://www.youtube.com/watch?v=NnZQ-C0x4hs</a>  and read sections 5.4 through 5.10 of the document linked previously.</p>"},"5":{"actionType":"Code","content":"<p>There are a few more important points about interfaces that warrant some extra explanation. \\nFirst and foremost, interfaces are similar in concept to abstract classes, so if you\u2019ve noticed some \\noverlapping concepts, you\u2019re right. But they have slightly different applications. Classes can implement \\nany number of interfaces, whereas like said, they can only extend one. This is useful because classes can \\nbe some individual thing, but do multiple things. For example, a class Dog might extend animal, but \\nimplement \u201cPettable\u201d, \u201cCanWalk\u201d \u201cCanMakeNoise\u201d, etc. In Java people often name interfaces either by \\nending them with \u201cable\u201d, or prefacing them with \u201cCan\u201d. You\u2019ll see this if you look at some of the \\ninterfaces in the XRPReference project, for example the CommandScheduler class implements two \\n\u201cable\u201d interfaces: \\n</p>","image":"<img src=\\"./images/lesson14_0.png\\"/>"},"6":{"actionType":"Read","content":"<p>You might notice that pet, walk, and bark are all verbs. So are \u201csend\u201d and \u201cauto-close\u201d. This isn\u2019t \\na coincidence. As stated, inheritance/extension is often used to specify what something is, and \\ninterfaces to designate what it can do. If you\u2019re confused about whether inheritance or an interface is a \\nbetter option for any given task, this is probably the best way to think about it. Is your class a more \\nspecific instance of something, for example a dog being an animal, or is it something that can do \\nsomething, but that thing isn\u2019t necessarily related to what it is? For example, a ton of things make noise, \\nbut that\u2019s not something that is related to being a dog (or an animal.) In addition to a dog, a robot could \\nalso implement a CanMakeNoise interface. (If your XRP has ever gotten low on batteries, you may have \\nnoticed that it will start singing.) \\n</p>"},"7":{"actionType":"Read","content":"<p>This might sound a bit repetitive, but it\u2019s important to understand the advantages of interfaces, \\nabstract classes, and inheritance as opposed to just typing out all the methods you need in each class. \\nOne big advantage is organizationally, it makes your code easier to think about and organizes your \\nclasses and methods. Especially when you\u2019re working with other people on a project, this makes life \\neasier. However, it also gives you the ability to write more functional code. \\n</p>"},"8":{"actionType":"Read","content":"<p>Interfaces and parent classes (either abstract or concrete) are types that the compiler \\nrecognizes. The compiler is the program that reads your code and turns it into something that a \\ncomputer or robot can execute. The compiler recognizing a type lets you group by that type \u2013 for \\nexample, you can make an array of GamePieceManipulator objects, even if each of those objects \\nbelongs to a different class. (E.g. one belongs to \u201cWobblyArm\u201d, one belongs to \u201cBrokenShooter\u201d, etc.) \\nEven if WobblyArm and BrokenShooter have the exact same methods, if you make an array of \\nWobblyArm objects, you can\u2019t add any BrokenShooter objects to that array. But by making the array of \\nGamePieceManipulator objects, you can add both those types, and use all the common functionality. So \\nthe interface or parent class is where you define what the common functionality is. You\u2019ve heard the \\nterm polymorphism \u2013 this is one of the prime examples. If this is confusing, go back and watch 9:04 to \\n13:37 of the abstract classes video from this lesson. You\u2019ll gain better understanding over time, but that \\nat least illustrates the concept. \\n</p>"},"9":{"actionType":"Code","content":"<p>Lastly, read sections 6.1 and 6.2 here: <a href=\'https://www3.ntu.edu.sg/home/ehchua/programming/java/J3b_OOPInheritancePolymorphism.html#zz\'>https://www3.ntu.edu.sg/home/ehchua/programming/java/J3b_OOPInheritancePolymorphism.html#zz</a></p>"},"10":{"actionType":"Read","content":"<p>\u201cEncapsulation\u201d is a fancy word but the concept should look familiar (think getters and setters). \\n\u201cCoupling\u201d is new but the explanation they give makes sense. Same with \u201ccohesion\u201d, but phrased \\ndifferently, cohesion means that if your class shouldn\u2019t represent multiple things \u2013 if it does, it should be \\nsplit up into multiple classes until each class only represents one thing. For example you would not make \\na class called \u201cDogAndCat\u201d, you would make a Dog class and a Cat class. \\n</p>"},"11":{"actionType":"Code","content":"<div><p>For this lesson you\u2019ll set up classes and interfaces for a two-dimensional sprite game. We\u2019re not  actually going to program the game (although you could do this on your own if you want), but we\u2019ll use  it as an example of how these concepts interact.</p><ol><li>Create a new desktop Java project called \u201cSpriteGame\u201d. If you do this in VSCode and VSCode adds an App.java file, you can delete that file. Add the following classes:  SpriteGame (your main method will go here), Character, Enemy, Player, NPC</li><li>Create two <i>interfaces</i>. You can do this the same way you create a class \u2013 right click, add a Java file, and type in the name of the file, followed by \u201c.java\u201d. VSCode will default to creating a class but it will give you the option to create an interface right after you create the file. You can click  \u201cinterface\u201d in the drop down to change it. Alternatively, simply replace the word \u201cclass\u201d with the  word \u201cinterface\u201d . Name your two interfaces as follows: <i>Fightable</i> and <i>Movable</i></li></ol></div>","image":"<img src=\\"./images/lesson14_1.png\\"/>"},"12":{"actionType":"Code","content":"<div><p>3. Let\u2019s start by fleshing out what our interfaces do. Then we can ensure that our classes comp This is a handy way of thinking about/designing your program. Give the fightable interface the \\nfollowing methods. Remember, in interfaces you just create stubs with semicolons, you don\u2019t \\nfully define the method.</p><ol><li>public void attack();</li><li>public void takeDamage(int damage);</li><li>public int getMaxHp();</li><li>public int getHpRemaining();</li></ol></div>"},"13":{"actionType":"Code","content":"<div><p>4. Now let\u2019s define movable. Since we\u2019re making a 2d sprite game, \u201cmovable\u201d just means up, down, left, and right, or x and y coordinates. Let\u2019s make the following methods:</p><ol><li>public void moveNorth();</li><li>public void moveEast();</li><li>public void moveSouth();</li><li>public void moveWest();</li><li>public int getXPosition();</li><li>public int getYPosition();</li></ol></div>"},"14":{"actionType":"Code","content":"<p>5. Now let\u2019s set up our Player and Enemy classes so that they can fight each other. We have a \u201cCharacter\u201d class, and both the player and enemies are characters. So let\u2019s make Player and Enemy extend Character. While we\u2019re at it, make NPC do the same.</p>"},"15":{"actionType":"Code","content":"<p>6. Right now extending Character doesn\u2019t do much, since there\u2019s nothing in Character. So let\u2019s flesh that out. All characters are going to have a name, so let\u2019s make a private String class field called \u201cname\u201d. Since this is private, let\u2019s also add a method called printName that SOP\u2019s the name field. Let\u2019s also add a method called setName that takes a string and sets the name field.</p>"},"16":{"actionType":"Code","content":"<p>7. Since we added a name field and a couple methods to our Character class, and Player, Enemy, and NPC all extend Character, we have access to the new Character methods in those classes. Let\u2019s create constructor methods for these three subclasses that take advantage of this to set the name. In each of these classes, create a constructor method that takes a string and calls the setName method. <b>Protip:</b> while in a subclass, you can type \u201cthis.\u201d to bring up an intellisense menu that includes parent class methods. So if you type \u201cthis.\u201d in Player or Enemy, the Character class setName will appear on the menu.</p>"},"17":{"actionType":"Code","content":"<p>8. Now that our Character class does something, let\u2019s go to our main method in SpriteGame and write some code to test that Character is working. Create a player object, two enemy objects, and an NPC object using the constructors that set the names. You can name them whatever you want.</p>"},"18":{"actionType":"Code","content":"<p>9. Let\u2019s create a method that outputs the names of all our characters, even though we have different kinds of characters. To do this we\u2019re going to need to store our characters in an accessible way. In your main method, create an ArrayList<Character> and add your four characters to it. You will need to import ArrayList from java.util.</p>"},"19":{"actionType":"Code","content":"<p>10. Now create a method called \u201coutputCharacterNames\u201d that takes an ArrayList<Character> as a parameter, and prints all their names. This will be a public static void method in your SpriteGame class. (We\u2019ll talk about static in the next lesson.) Go ahead and add a call to your new method in your main method, and confirm that it outputs three names. The method is working on objects of different classes, pretty cool!</p>"},"20":{"actionType":"Code","content":"<p>11. Now that we have characters that are working, let\u2019s get back to our interfaces. NPCs don\u2019t fight, but the player and enemies do. So go into player and enemy and make them both implement Fightable. This will give you a syntax error on the class name. Mouse over and select \u201cadd unimplemented methods.\u201d Easy! Since we\u2019re not fully programming this game, we don\u2019t actually care about implementing these methods for now. But, just so we can demo that they run, add a SOP to the attack() method in each that says \u201cNow attacking.\u201d You could go one step further and use the SOP to differentiate between the player and the enemy attacking.</p>","image":"<img src=\\"./images/lesson14_2.png\\"/>"},"21":{"actionType":"Code","content":"<p>12. This example illustrates how interfaces are different than subclasses. Enemies, Players, and NPCs are all characters, but they don\u2019t all fight. So if we had put the Fightable methods inside of character, we would have a bunch of methods for NPCs that wouldn\u2019t make any sense to call. And if we had put the Fightable methods in both Player and Enemy, we\u2019d have code duplication.</p>"},"22":{"actionType":"Code","content":"<p>13. Go into your main method and create another ArrayList, this time of type Fightable, and put your player and enemies in there. Make another method like you did with outputCharacterNames but instead this one calls the Fightable attack method.</p>"},"23":{"actionType":"Code","content":"<p>14. We want our player to move, so make it implement Movable in addition to Fightable. Again, you can have VSCode implement the methods for you, in particular since we\u2019re not going to implement them for real. Similar to how we did not make NPCs fightable, this shows how you can use interfaces to extend the functionality of certain parts of the class hierarchy, but not others.</p>"},"24":{"actionType":"Code","content":"<p>15. Let\u2019s do an example of how interfaces can be applied to completely unrelated classes. Create a class called \u201cDestructibleObject\u201d.</p>"},"25":{"actionType":"Code","content":"<p>16. DestructibleObjects, at least in this game, are not \u201cCharacters\u201d \u2013 they are walls, rocks, etc., that can be destroyed. So they won\u2019t move, don\u2019t have a name, etc., and should not inherit from Character. However, they can be destroyed, so they are Fightable. Make DestructibleObject implement Fightable and create the method stubs.</p>"},"26":{"actionType":"Code","content":"<p>17. In the \u201cattack\u201d method for DestructibleObject, let\u2019s make it a little more clear that it\u2019s not a normal player or enemy. Instead of SOP\u2019ing \u201cNow attacking.\u201d, SOP \u201cObject destroyed!\u201d.</p>"},"27":{"actionType":"Code","content":"<p>18. In your main method, create a DestructibleObject object, and add it to your fightables array. Then re-run your program to see the output.</p>"},"28":{"actionType":"Code","content":"<p>19. Almost done, but let\u2019s differentiate our characters just a little bit. So far, we\u2019ve instantiated objects of Player, Enemy, and NPC types, but never a base \u201cCharacter\u201d object. This is because Character is designed just to give attributes and methods to these subclasses, not exist itself. So let\u2019s go ahead and make it abstract.</p>"},"29":{"actionType":"Code","content":"<p>20. Making Character abstract doesn\u2019t give us any errors, because we haven\u2019t added any abstract methods yet. Let\u2019s add a new abstract method that all our classes have to implement. We\u2019ll give our characters some personality by creating a method called \u201cintroduce()\u2019. This will be public, abstract, and void. Create this method. Remember, an abstract method is created similarly to how they are done in interfaces.</p>"},"30":{"actionType":"Code","content":"<p>21. If you complete step 20 correctly and save, you\u2019ll get syntax errors in your three character subclass files. Go to one of these files and mouse over the error. It will look familiar from when we were implementing interface. Have VSCode implement the method in all your files, but once it creates the stub, go into the method yourself and add a SOP that gives some context to the character. For example, the player character could say \u201cI save villages!\u201d, the NPC could be \u201cI sell protective footwear!\u201d, and the enemy could be \u201cI mindlessly follow AI without having clear motives, while letting the player grind experience!\u201d</p>"},"31":{"actionType":"Code","content":"<p>22. In your SpriteGame class, create one more method, like you did for the character names and the fightables, to output each character\u2019s introduction. Note that you already have an ArrayList with all your characters to use.</p>"},"32":{"actionType":"Read","content":"<p>That\u2019s all we\u2019ll do with this. If you wanted to complete the game, you\u2019d have to make all the methods that implement the interfaces actually do things instead of just being empty. However, this shows how you can use interfaces, inheritance, and abstract classes to set up hierarchies and relationships, and define what classes are and what classes can do. It also shows how you can use polymorphism to group objects in a way such that you can use functionality that is common to those classes, even though they are of different types.</p>"}},"totalParagraphs":33},"Lesson 15 - Static & Super":{"Introduction":{"0":{"actionType":"","content":"<p>In this lesson we round out the last couple small concepts of OOP that we\u2019ve skipped thus far \\nand do another code review of some XRP code because after this lesson you\u2019ll understand every \\nconcept that you need to, to grasp everything that goes on in the XRP code, at least from a Java \\nperspective. (You will still run into WPILib methods that you might need to check the documentation on \\n\u2013 but at least you\u2019ll understand all the Java code that they\u2019re made from.) After the code review you\u2019ll \\ndo some small desktop projects. After this lesson, the remaining lessons in the course will all be \\nadvanced projects with the XRP that will give you a chance to flex your knowledge and understanding. \\nThe two concepts left to cover are static and super. \\n</p>"}},"Static":{"1":{"actionType":"Read","content":"<p>One of the main concepts in object-oriented programming is that objects have state. That \\nmeans there exists some object of some class, it has some variables, and cumulatively they define that \\nobject. If you have multiple objects of a given class, they probably have different values in their \\nvariables, thus differentiating them. If you were to access the variables of the objects directly, you \\nwould get a different value depending on which object you accessed. If you were to call a method of the \\nobject, you would again get a different value depending on which object you called the method for, \\nbecause the variables would have different values. E.g., if in a fantasy game if you called getLevel() on an \\norc, you might get a different result than if you called getLevel() on a dragon. \\n</p>"},"2":{"actionType":"Read","content":"<p>However, there are sometimes instances where a class field or method will return the same \\nresult regardless of which object it came from. For example, consider the following method: \\n</p>","image":"<img src=\\"./images/lesson15_0.png\\"/>"},"3":{"actionType":"Read","content":"<p> \\nThis method could exist in any class, but no matter where it exists, or the state of any objects \\nbelonging to the class where it exists, it will always return the same result for any given numbers as \\ninput. Nothing else about the class it exists in, or any objects of that class, matter \u2013 it will simply add the \\ntwo numbers and return the result. The state of the object that the method is being called from does not \\nmatter. When a method or variable fits this description, you can use the static keyword in its signature. \\nIt\u2019s not mandatory to do so \u2013 you could remove the static keyword from the method above and the \\nmethod would still function the same way. However, the static keyword grants a special ability \u2013 you can \\ncall the method without instantiating an object of the class. This can be illustrated with a couple \\nexamples because you\u2019ve already used this functionality numerous times during this course. Think about \\nevery time you\u2019ve used System.out.println(). System is a class, but you\u2019ve never declared a System \\nobject. Turns out that the out portion of \u201cSystem.out\u201d refers to a static object, so you can use the \\nfunctionality of System.out without declaring an object. This is handy, because it would be annoying to \\ndeclare System objects every time you wanted to do something as simple as output a line of text. \\n</p>"},"4":{"actionType":"Search","content":"<p> \\nAnother example is the Constants file you\u2019ve used in your XRP code. Here are a couple lines \\nfrom the ArcadeDrive method in your DriveStraight project (Lesson 11 version): \\n</p>","image":"<img src=\\"./images/lesson15_1.png\\"/>"},"5":{"actionType":"Search","content":"<p> \\nThese lines reference values from the Constants file, but you never create a Constants object. \\nOpen Constants.java and you can see that these values are declared statically: \\n</p>","image":"<img src=\\"./images/lesson15_2.png\\"/>"},"6":{"actionType":"Read","content":"<p> \\nThe static declaration lets these constants be accessed anywhere without declaring a Constants \\nobject. This is possible because, as static constants, they do not rely on the state of any object \u2013 they will \\nalways return the specified value. \\n</p>"},"7":{"actionType":"Search","content":"<p> \\nStatic works for both methods and values, as shown in the examples above. The only factor is \\nthat anything declared as being static can\u2019t rely on the state of the class in which it\u2019s declared. Let\u2019s look \\nat a counterexample of this to demonstrate the point. Here are some lines the ArcadeDrive method \\nfrom the DriveStraight project again: \\n</p>","image":"<img src=\\"./images/lesson15_3.png\\"/>","more_images":"<img src=\\"./images/lesson15_4.png\\"/>"},"8":{"actionType":"Search","content":"<p>Note how on lines 53, 54, 57, and 58, the method relies on turnTimer, which is a class variable \\ndeclared on line 20 in Drivetrain.java. A static method can neither read nor write to such a variable, \\nbecause doing either of those things requires a class state \u2013 either by reading an existing state or \\ncreating a state by writing one. That could not be done without an existing Drivetrain object. Another \\nexample is on line 62, arcadeDrive updates the value of targetHeading, which is another class variable. \\nNeither of these operations could work without maintaining the state of these variables, so arcadeDrive \\ncould never be a static method. \\n</p>"},"9":{"actionType":"Search","content":"<p>You\u2019ve probably observed by now how class names are capitalized, like Constants, Drivetrain, \\nand System, but variable names start with lowercase letters. This makes it easy to tell, for any given text \\nsnippet, if it\u2019s referring to a variable or a class itself. If you look at lines 52 and 53 in the previous image, \\nyou\u2019ll notice that \u201cConstants\u201d is capitalized \u2013 this is because it\u2019s referring to the class itself. Static fields \\nand methods are accessed in this manner, using the proper class name instead of a specific object. \\n</p>"},"10":{"actionType":"Search","content":"<p>Another fun example of static methods and variables in Java is the \u201cMath\u201d class. Anywhere in \\nyour code, you can type \u201cMath.\u201d and see a big list of static methods and values you can use, for example \\nMath.PI or Math.abs, which you\u2019ve used before. \\n</p>","image":"<img src=\\"./images/lesson15_5.png\\"/>"},"11":{"actionType":"Read","content":"<p>As a general rule, static values are great for declaring program-wide constants, which is literally \\nwhy the Constants.java file exists in the XRPReference project. Static methods are great for helper \\nmethods that perform operations on inputs. For example, you could have made a static method when \\nyou did the CutPower project that would have looked something like this: \\n</p>","image":"<img src=\\"./images/lesson15_6.png\\"/>"},"12":{"actionType":"Search","content":"<p>That may or may not have been overkill for such a simple operation, but it demonstrates the \\npoint \u2013 this method could be called from anywhere in the program because it simply performs an \\noperation and it doesn\u2019t rely on the state of anything in your program. Let\u2019s look at one final example \\nfrom robot code, in Drivetrain.java: \\n</p>","image":"<img src=\\"./images/lesson15_7.png\\"/>"},"13":{"actionType":"Read","content":"<p>These values are declared statically because they describe physical characteristics about the \\nrobot. For example, line 18 is telling the code what the diameter of the XRP\u2019s wheels is, which is used \\nin calculations for how far the XRP has driven, but never changes and while it is related to the \\ndrivetrain, does not rely on anything in the Drivetrain class because it\u2019s simply a physical truth about the \\nrobot.</p>"}},"Super":{"14":{"actionType":"Read","content":"<p>Using inheritance creates a scenario where for a given class, there can be more than one version \\nof a given method. One version of the method can belong to the subclass, and one can belong to its \\nparent class, or \u201csuperclass\u201d. In fact there could be many versions, as there could be a long chain of \\ninherited classes, and every class in the chain could have their own version. The same situation can \\nhappen with constructors \u2013 you know that a constructor gets called whenever an object is created, but, \\nlooking at your project from last lesson, if an object of type \u201cPlayer\u201d is created, and Player objects are \\nalso \u201cCharacter\u201d objects, which constructor gets called? \\n</p>"},"15":{"actionType":"Read","content":"<p> \\nJava has default behavior to handle this situation but also gives you the ability to control what \\nhappens more directly. When a method is called for an object, it will use the method defined for the \\nsubclass. In a long chain, it will use the lowest-level class it can (that is, if the lowest-level class does not \\nhave that method defined, it will use the direct parent\u2019s version. If the direct parent does not have that \\nmethod defined, it will use the grandparent\u2019s, etc.) This gives you the power to override parent class \\nmethods but use them as defaults if you don\u2019t want to override them. \\n</p>"},"16":{"actionType":"Read","content":"<p> \\nHowever, parent versions of methods are accessible from within a subclass by using the super \\nkeyword. The super keyword is not a variable, but it almost acts like one \u2013 if you\u2019re in a class method (go \\ninto your Player class, inside a method, and try this) and you type \u201csuper.\u201d, VSCode will pull open a \\nmenu of methods that you can call, the same as if you typed the name of an object variable that has \\nmethods. From super, you can find any method defined in your parent class and call it directly. \\n</p>"},"17":{"actionType":"Code","content":"<p> \\nThe same syntax can be used for constructors. Every time you create an object using the \u201cnew\u201d \\nkeyword, you call a constructor. Also remember that every class has a default constructor method, even \\nif you don\u2019t define it. Remember, a \u201cdefault\u201d constructor is one that takes no parameters. When an \\nobject of a child class is created, you call the child class\u2019s constructor using the new keyword. Java will \\nthen automatically call the superclass\u2019s default, or parameterless, constructor. This is referred to as \\ncalling the constructor \u201cimplicitly\u201d. Often such a constructor does nothing so you would never notice, \\nbut you can try this out. Go into your Character class from lesson 14 and add the following method:</p>","image":"<img src=\\"./images/lesson15_extra.png\\"/>"},"18":{"actionType":"Code","content":"<p> \\nIf you run your program, you will see this printout for each of the character objects you created, \\ndespite you never manually calling this constructor. Since you called your subclass constructor, and Java \\nimplicitly called the superclass constructor, that means that for subclass objects, more than one \\nconstructor is called. \\n</p>"},"19":{"actionType":"Read","content":"<p> \\nBy default Java will call the parameterless superclass constructor. But if you have custom \\nconstructors defined in your superclass and want to call a specific one, you can again use the super \\nkeyword. In this case, super is the name of a method and you give it parameters directly \u2013 for example, \\n\u201csuper(name, hitPoints);\u201d. If you find that you have similar constructors among your different \\nsubclasses, creating a superclass constructor and then referencing it from the subclasses can be a good \\nstrategy. The call to the superclass constructor goes in the subclass constructor, which can then do other \\nthings. For example, if all Character subclasses need to set the character\u2019s name, you could create a \\nCharacter superclass constructor to do that. But then maybe Enemy class objects need some additional \\nwork \u2013 say, initializing a \u201cdifficultyLevel\u201d variable. In your Enemy class constructor, you would call \\nsuper(name) to set the name, and then set the difficultyLevel like normal. \\n</p>"},"20":{"actionType":"Code","content":"<div><p>1. Create a new desktop project and a class called \u201cBasicOperations\u201d. Then define and \\nimplement the following four static methods. Each class is to take two integer parameters \\nand return and integer, except for \u201cdivide\u201d which will take two doubles and return a double. \\n</p><ol><li>add()</li><li>subtract()</li><li>multiply()</li><li>divide()</li></ol></div>"},"21":{"actionType":"Code","content":"<p>2. In your main method, call each of your newly created methods in a static fashion. That is, do \\nnot create an object of the class type BasicOperations \u2013 simply call the static methods. \\n</p>"},"22":{"actionType":"Code","content":"<div><p>3. Call the following methods from the java \u201cMath\u201d class (e.g. double varName = \\nMath.cos(10);) and output their values: \\n</p><ol><li>Math.cos</li><li>Math.sin</li><li>Math.PI (this is a constant, not a method)</li><li>Math.random (read the description VSCode gives to see what this method does)</li></ol></div>"},"23":{"actionType":"Code","content":"<p>4. In the lesson 14 exercises, you created constructors for Player, NPC, and Enemy that all \\ncalled the Character.setName method. Instead of using these constructors, create a single \\nconstructor in the Character class that accepts a String parameter and sets its name \\nvariable. Then, in your subclasses, call this new superclass constructor. \\n</p>"}},"totalParagraphs":24},"Lesson 16 - Manual Drive Methods":{"Introduction":{"0":{"actionType":"","content":"<p> \\nThroughout the prior 15 lessons, you\u2019ve learned an immense amount about the Java \\nprogramming language, WPILib, and how to program robots. You\u2019ve learned all the concepts you need \\nto understand the code you see in the XRPReference project and develop your own features. Over the \\nnext five lessons, the focus will shift from learning more about Java as a programming language, to \\ndeveloping your skills modifying and writing code. While projects have been developed thus far with \\nclear lists of steps, over the next five projects, the lessons will describe goals and outcomes instead of \\nguiding you specifically on how to accomplish them. There will not be images with exact code solutions, \\nso you will need to use your own skills. There will also not be solution programs provided. Feel free to \\nrefer back to prior lessons and projects for both a review of concepts, and examples of how to use \\ncertain features of code. We\u2019ll step into this slowly. This lesson will still give you some specific pointers, \\nbut not all of them, and starting with lesson 17 there will be very few specific pointers. At first this may \\nbe difficult for you, but with time and practice you will succeed. \\n</p>"}},"Creating Homemade Drive Methods":{"1":{"actionType":"","content":"<p>So far, you\u2019ve relied on pre-coded methods to make your robot move, specifically the \\narcadeDrive method in the DifferentialDrive class, which you access through the arcadeDrive method in \\nthe Drivetrain class. You\u2019ve modified the values that are sent to this method, thereby affecting drive \\nbehavior, but you\u2019re still using this method to make the robot move. This is fine \u2013 the DifferentialDrive \\nclass is pretty good for making your robot move. However, as you get more advanced, you\u2019ll want a finer \\ndegree of control over your robot, and the first step in achieving that is creating your own methods that \\ndrive the robot. In this lesson you\u2019ll create those. First, you\u2019ll create a simple \u201ctank drive\u201d method and \\nassociated commands, and then implement your own arcade drive. Tank drive is easier to code because \\nthere is less math, whereas for arcade drive you need to convert a rotation value coming from the \\njoystick into power outputs to both wheels. Thankfully you can copy this math from the pre-existing \\narcadeDrive method in DifferentialDrive, but since tank drive is easier, that\u2019s where we\u2019ll start. \\n</p>"},"2":{"actionType":"","content":"<p> \\nOne quick note \u2013 we\u2019ve briefly discussed deadbanding, or removing joystick input that is close \\nto, but not exactly equal to, zero. The DifferentialDrive class adds deadbanding by default, but as soon \\nas you stop using DifferentialDrive, you won\u2019t have deadbanding anymore. You\u2019ll implementing \\ndeadbanding yourself in the next lesson but keep in mind that your robot might have a tendency to \\n\u201ccrawl\u201d whenever it is enabled during this lesson, in particular if your controllers are old and don\u2019t do a \\ngreat job of physically re-zeroing themselves when you release the joysticks. Just watch out and don\u2019t let \\nyour robot crawl off your desk and fall. \\n</p>"}},"Creating Tank Drive":{"3":{"actionType":"","content":"<p>Tank drive gets its name from tank vehicles, and their drive setups with treads on each side. \\nEach side of the tread can drive independently. Powering them both forward makes the tank move \\nforward, powering them both in reverse drives the tank backward, and powering them in opposite \\ndirections makes the tank spin, or if done in a controlled manner, turn. Although you have a XRP and \\nnot a tank, any drivetrain that has two independently powered sides of its drivetrain can follow this \\ncontrol scheme, and your XRP of course has that. (Compare this to a front-wheel drive car, where the \\ndrive wheels are powered together.) \\n</p>"},"4":{"actionType":"","content":"<p> \\nTank drive is easy to program because there\u2019s basically no math required to do so. Instead of \\nusing one joystick axis for robot speed and one for turning, you use one joystick axis to power the left \\nside, and one to power the right side. This makes setting your motor outputs as simple as sending the \\ninput from the joystick directly to the motors. Complete the following steps to create your own tank \\ndrive setup: \\n<ol><li>Create a new XRPReference project called \u201cManualDrive\u201d.</li><li>In Drivetrain.java, comment out or delete the line where the DifferentialDrive object is declared. This will cause a syntax error later on where that object is used, and you can delete that line as \\nwell. \\n</li><li>Crete a public void method called \u201ctankDrive\u201d that accepts two doubles, one for the left power and one for the right power. \\n</li><li>In the tankDrive method, simply set the outputs of the two Spark objects using their .set method. Here\u2019s an example of a completed tankDrive method: \\n</li></p>","image":"<img src=\\"./images/lesson16_0.png\\"/>"},"5":{"actionType":"Code","content":"<p>5.  You now have a method that will drive your robot using a tank drive setup, but it\u2019s not be called from anywhere. Right now your drivetrain subsystem runs the ArcadeDrive command by \\ndefault, which calls the arcadeDrive method in Drivetrain.java, but since you deleted the line of \\ncode that told the DifferentialDrive object to drive, that arcadeDrive method no longer has any \\nfunction and if you were to deploy your robot code, you would not be able to drive your robot in \\nteleop. We\u2019ll fix the arcadeDrive method when we get to the arcade drive portion of this \\nproject. For now, create a new command in the commands folder called TankDrive.java.</p>"},"6":{"actionType":"Code","content":"<p>6. Flesh out your TankDrive command. You can mostly copy the ArcadeDrive command, but change the names of the variables as appropriate. For example, you\u2019re taking in two power \\nvariables instead of a power variable and a rotation variable. That\u2019s the only real difference.</p>"},"7":{"actionType":"Code","content":"<p>7. With the TankDrive command completed, go to RobotContainer.java, find where you set the default command for your drivetrain, and update it to use your new TankDrive command. To do \\nthis you\u2019ll need to create a new \u201cgetTankDriveCommand()\u201d method in RobotContainer.java. \\nCreate this method. You can copy the getArcadeDriveCommand() method and rename it. Note \\nthat after creating the method, you\u2019ll still need to update the line that sets the default \\ncommand, or it will still use the old getArcadeDriveCommand method.</p>"},"8":{"actionType":"Code","content":"<p>8. At this point you could deploy and drive, but it wouldn\u2019t control very well because you\u2019re still using the default axes for driving. You\u2019ve had to change the default axes (on line 95 of \\nRobotContainer.java) a number of times in various projects throughout the course, and you\u2019ll \\nneed to do it again here. The only difference is that you may not want to use the same axes for \\ntank drive as you did for arcade drive. If you\u2019re using a single joystick, there is no comfortable \\nway to do tank drive, so it won\u2019t matter too much which axes you pick. But if you\u2019re using more \\nthan one joystick (either two physical sticks, or a controller with more than one joystick such as \\na gamepad or Xbox controller), you\u2019ll probably want to use the forward/backward axis of two \\nseparate joysticks, with the joystick on your left controlling the left speed and the joystick on \\nyour right controlling the right speed. You can figure out which axis is which by running your \\ncode and using the Joysticks window in the Robot Simulation interface, as you\u2019ve done \\npreviously throughout this course. Once you figure out which joysticks to use, update the \\ndefault joysticks in RobotContainer, deploy your code, and test it. You\u2019ll now have a working \\ntank drive setup!</p>"}},"Creating Arcade Drive":{"9":{"actionType":"","content":"<div><p>Creating your own arcadeDrive method is a little bit trickier since there\u2019s some math involved, \\nbut you can copy the math from the arcadeDrive method declared on line 179 of DifferentialDrive.class. \\nNote that there are multiple arcadeDrive methods in DifferentialDrive because it is an overloaded \\nmethod; the one declared on line 179 is the one you want to look at. The easiest way to open this file is \\nto use F12; you may have an unused import referring to this class roughly around line 10 of \\nDrivetrain.java (it became unused when you deleted the DifferentialDrive object declaration), but if you \\ndon\u2019t, you can declare another such object, F12 into the class, and then undo the change you made to \\ndeclare the object. Either way, once you get into DifferentialDrive, the lines you\u2019ll want to copy are 199 \\nthrough 222. We won\u2019t discuss exactly how these lines work, but the general gist is that they do a little \\nbit of math to figure out how much power to send to each wheel, based on the speed of the robot and \\nhow much turning power to apply. The part you need to recognize is that two important variables and \\ncreated and initialized by this code: leftMotorOutput and rightMotorOutput. These are the variables you \\nwill need to send to the motor outputs. One last thing \u2013 since your motors face in opposite directions \\nthe way they are physically mounted on the XRP, one of them needs to run in reverse, or your robot will \\nspin in circles when you tell it to go forward. In this case, you\u2019ll want the motor that runs in reverse to be \\nthe right motor. To make it run in reverse, simply multiply its output by -1 before sending it to the \\nmotor. Here are a list of steps to complete creating your own arcade drive setup: </p><ol><li>Open DifferentialDrive.class as described above, and copy lines 199 through lines 222.</li><li>Paste the copied lines into your arcadeDrive method in Drivetrain.java.</li><li>You\u2019ll have a couple mismatched variable names after pasting the code (for example, xaxisSpeed vs. xSpeed.) It doesn\u2019t matter which of these names you choose, but fix the mismatches so you \\nno longer have any syntax errors. \\n</li><li>At the bottom of your method, after all the code you pasted in, update the value of rightMotorOutput by multiplying it by -1. \\n</li><li>Set the left and right motors to their respective outputs.</li><li>Test your code and ensure that arcade drive works. When it does, you\u2019re done with this project!</li></ol><p>Here is an example of a completed Drivetrain.arcadeDrive method: \\n</p></div>","image":"<img src=\\"./images/lesson16_1.png\\"/>"}},"totalParagraphs":10},"Lesson 17 - Deadbanding & Turn Scaling":{"Introduction":{"0":{"actionType":"Read","content":"<p><i>Reminder: from lesson 16 onwards, the projects are aimed for you to do with less guidance, \\nfewer or no direct steps, and without solution projects provided.</i></p>"},"1":{"actionType":"Read","content":"<p> \\nIn lesson 9, we briefly talked about the concept of deadbanding, or creating a zone of input from \\nthe joysticks which register as zero, even if the input is not literally zero. You may recall that this can be \\nuseful because the joysticks don\u2019t physically return to a perfect zero and might register some value like \\n.05 instead when at rest. If you don\u2019t remember much about deadbanding, you\u2019ll want to review lesson \\n9. In this project, you\u2019ll add code to your arcadeDrive method from lesson 16 to create a deadband on \\nthe user input. You\u2019ll also scale the rotation value based on the magnitude of the speed value. That is \\nsimilar to what you did when you implemented cut power mode, except instead of a boolean value of \\neither cutting the power or not, you\u2019ll scale the turning power dynamically based on the speed. For \\nexample, if the speed is 0, you would not want to scale down the turning at all, but if the speed was 1, \\nyou might want to scale it down by some amount, say 50%. In that case, you\u2019d be scaling down the \\nturning power by .5 multiplied by the speed value. So a speed value of 1 would be a 50% reduction in \\nturning power, a speed value of .8 would be a 40% reduction in turning power, a speed value of .2 would \\nbe a 10% reduction in turning power, etc. \\n</p>"}},"Deadbanding":{"2":{"actionType":"Code","content":"<p>To complete the deadbanding portion of this project, create a method in Drivetrain.java called \\n\u201capplyDeadband\u201d that accepts a double representing the input value, and returns a double that is the \\ninput value after deadbanding is applied. Create a value in Constants.java that specifies what the \\nminimum threshold for input from the joysticks needs to be in order to pass the deadband filter. A \\ndecent first guess might be .1, but you\u2019ll have to determine this for yourself based on the joysticks \\nyou\u2019re working with. Then, your method simply has to check if the magnitude of the input exceeds the \\ndeadband threshold, or not. If it does, you can simply return the input. If it does not, you return 0. Make \\nsure your applyDeadband method returns the input with the same sign that was passed into it \u2013 that is, \\nif a positive value was passed in, a positive value (or 0) should be returned, and if a negative value was \\npassed in, a negative value (or 0) should be returned. When your method is done, go back to your \\narcadeDrive method and pass your input values to your new method, and update their values to \\nwhatever the method returns. That\u2019s a mouthful but this is very simple, because you can update the \\nvalue of a variable, and pass that variable into a method, all in one line of code. Your lines that call \\napplyDeadband should look like this: \\n</p>","image":"<img src=\\"./images/lesson17_0.png\\"/>"}},"Turn Scaling":{"3":{"actionType":"Code","content":"<div><p>To complete the turn scaling portion of this project, create a method in Drivetrain.java called \\napplyTurnScaling that takes two doubles, one for speed, and one for rotation, and returns a double that \\nis the scaled turning value. You can update your zaxisRotate value in arcadeDrive the same way you \\nupdated it for the deadbanding portion, except by calling applyTurnScaling in your drive method. Inside \\nthe applyTurnScaling method, you need to figure out how much to reduce the turning, which you can do \\nby multiplying the speed value by a new Constants.java value you\u2019ll create that represents how much \\nyou want to scale the turning down, for example .5 if you want to scale the turning down by 50% at max \\nspeed as explained in the example at the start of this lesson. This represents the percent you want to \\nreduce the turn power by \u2013 for example, if your speed is .8 and you\u2019re using .5 as your constant, you\u2019d \\nwant to scale down the turning by 40%. \\nOnce you\u2019ve determined your percentage reduction in turning, you can subtract that number from 1 to \\ncreate a turn scaling coefficient. For example \u2013 let\u2019s again say the speed is .8 and the scale factor is .5. \\nThen, .8 * .5 = .4, which is your turn reduction percentage. 1 - .4 = .6, so .6 is your turn scaling \\ncoefficient. The last step is to multiply your turn input value by your coefficient to determine the final \\nturning value. Here\u2019s a full example, written out in English and shown with numbers: \\n</p><ol><li>Multiply by the speed by the Constants.java turn scaling value, and save this value to a variable called \u201cturnReductionPercent\u201d. For the example, assume the speed is .8 and the turn scaling \\nvalue is .5. --\x3e .8 * .5 = .4</li><li>Subtract the turnReductionPercent variable from 1, and save this to a variable called \u201cturnCoefficient\u201d. --\x3e 1 - .4 = .6</li><li>Scale (multiply) the original turn value by the turnCoefficient. Assume the original turn value is 1. --\x3e 1 * .6 = .6</li><li>Return the final result, in this case .6.</li></ol></div"}},"Testing":{"4":{"actionType":"Robot","content":"<p>Once you\u2019ve created your two methods and utilized them in your arcadeDrive method, make \\nsure to test them by driving the XRP around. The deadband method can be tested by trying to drive \\nyour robot while looking closely at the Robot Simulation interface. Pick the XRP up and hold it in your \\nhand so there is no friction on the wheels, and slowly start pressing on the joystick while looking at the \\njoystick values on the interface. The wheels should start spinning right as you cross the deadband \\nthreshold. \\n</p>"},"5":{"actionType":"Robot","content":"<p> \\nTo test turn scaling, put the XRP back down and start spinning it in circles without giving it any \\nforward/backward speed. Then start giving it forward/backward speed. You should see the rate of \\nturning decline as you give it more speed. You can increase the value of the turn scaling constant in \\nConstants.java to see a more drastic effect, which is useful for testing. \\n</p>"}},"totalParagraphs":6},"Lesson 18 - Exponential & Linear Control":{"Exponential vs. Linear Control":{"0":{"actionType":"Read","content":"<p>This lesson will build upon lessons 16 and 17 by further enhancing your arcadeDrive method. \\nYou\u2019ll change it from using a linear mapping of the joystick value to the motor outputs, to an exponential \\none, and compare how the drive characteristics feel with each control scheme. \\n</p>"},"1":{"actionType":"Read","content":"<p> \\nA linear mapping of the joystick values is straightforward \u2013 a .25 value on the joystick translates \\nto .25 motor output, .5 to .5, and so forth. This makes sense, but it isn\u2019t necessarily the best way to \\ncontrol a robot. Often, when the driver wants to go fast, they want to go fast \u2013 they\u2019re probably going to \\napply full power to the robot. It\u2019s often rare that a driver will want to drive at, say, 80% power. However, \\nwhen they want to go slowly, they might want to go at different slow speeds. For example, they might \\nwant to barely move, or cruise but slowly, or move just slow enough to maintain full turning control. \\nExample desired motor outputs in these cases might be .25, .33, or .5. However, for a human driver, it \\ncan be difficult to physically create the difference these values on a joystick, since the distance between \\n.25 and .33 on a joystick is fairly small. \\n</p>"},"2":{"actionType":"Read","content":"<p> \\nWith an exponential mapping, the input from the joystick is raised to some power, typically two \\n(or in other words, squared) before being sent to the motors. So a value of .1 would become .01, .5 \\nwould become .25, a value of .75 would become .5625, and a value of 1 would stay 1. The fact that 1 still \\ncorresponds to 1 is important, so that you don\u2019t lose any of your maximum output range. \\n</p>"},"3":{"actionType":"Read","content":"<p>When you square the inputs, a much larger portion of the physical joystick range corresponds to \\nthe smaller range of possible outputs. For example, with linear control, the physical range between 0 \\nand .5 is, of course, 50% of the joystick\u2019s travel distance in a single direction. (Ignore deadbanding for \\nthis example.) With exponential control, a value of .707 corresponds to 50% (.707^2 = .5), so you have \\nalmost 71% of the joystick\u2019s travel distance covering the same range. \\n</p>"},"4":{"actionType":"Search","content":"<p>Exponential control is not necessarily \u201cbetter\u201d than linear control, but many drivers do feel that \\nit improves robot handling when they try it. The XRP is fairly small, low speed, and easy to control \\neither way, but you can make the decision for yourself after you try both out. The XRP actually uses \\nexponential drive by default but you can change this by changing the \u201ctrue\u201d value on line 167 of \\nDifferentialDrive.class (accessible by F12\u2019ing on the \u201cDifferentialDrive\u201d class found in the class fields of \\nDrivetrain.java) to false, as this variable corresponds to a the boolean parameter \u201csquareInputs\u201d in the \\narcadeDrive method declared on line 179 of DifferentialDrive.class and does exactly what is described in \\nthe prior section. Or, you can skip that, implement it yourself, and try it out after doing so, because \\nregardless of which one you prefer you\u2019ll implement both in this project. \\n</p>"},"5":{"actionType":"Search","content":"<p>The arcadeDrive method declared on line 179 of DifferentialDrive.class has all the logic that \\nmakes the robot drive and turn, so you can use that as a reference as you complete this project. Note \\nthat there are multiple arcadeDrive methods in this file because of overloading, but the one declared on \\nline 179 is where the important logic is. Lines 204 through 222 handle combining the rotation value with \\nthe speed value to create the net values sent to the motors, and lines 224-226 handle setting the \\nmotors. (Line 225 multiplies one side by -1 if necessary, because one motor is functionally driving in \\nreverse, because the motors are physically pointed in different directions on the robot.)</p>"}},"Doing the Project":{"6":{"actionType":"Code","content":"<p>For your project, implement your own arcadeDriveCustom method in Drivetrain.java. You\u2019ll \\nneed to copy some of the code mentioned above unless you want to do the math yourself. In theory you \\ncould copy the whole method if you want, but even if you do this you\u2019ll still have some work to do \\nbecause this method exists within the DifferentialDrive class and you\u2019re going to make your method in \\nDrivetrain.java. To start, comment out this line in Drivetrain.java: \\n</p>","image":"<img src=\\"./images/lesson18_0.png\\"/>"},"7":{"actionType":"Code","content":"<p>This will give you a syntax error because you won\u2019t have an m_diffDrive object anymore:\\n</p>","image":"<img src=\\"./images/lesson18_1.png\\"/>"},"8":{"actionType":"Code","content":"<p>Instead of calling the arcadeDrive method of the DifferentialDrive class, you\u2019ll replace the line \\nthat now gives a syntax error with a call to your newly created method. The goal will be to do that and \\nhave your robot still drive. Here\u2019s what your new method call should look like. Of course, if you type this \\nin right away you\u2019ll get a syntax error, but the project is to create this method and make it drive your \\nrobot. \\n</p>","image":"<img src=\\"./images/lesson18_2.png\\"/>"}},"A Few Pointers":{"9":{"actionType":"Code","content":"<ul><li>The hardest part is getting started so here are a few pointers to help you out.</li><li>You can start by commenting out the lines as shown above and replacing them with the \\narcadeDriveCustom method call. As soon as you define that method, your syntax errors will go \\naway, but your robot won\u2019t drive anymore until you fill in your new method with code.</li><li>The Spark objects declared in Drivetrain.java have \u201cset(double speed)\u201d methods that will send \\noutput to the motors, so for example you could use the following lines to set them to full power: </li></p>","image":"<img src=\\"./images/lesson18_3.png\\"/>"},"10":{"actionType":"Code","content":"<ul><li>Since you need to implement both linear and exponential control, it\u2019s probably easiest to start with linear control and get your robot moving before tackling exponential control.</li><li>An easy test to confirm that you\u2019re reading in your input the right way, and setting output the right way, is setting the left motor to the speed value and the right motor to the turn value. This won\u2019t be \u201carcade drive\u201d anymore, it will be \u201ctank drive\u201d, so feel free to try driving your robot like that. It will work well on an Xbox controller but not a single joystick. It will still work on a joystick, it just won\u2019t be comfortable to drive. Also, the variable names \u201cxaxisSpeed\u201d and \u201czaxisRotate\u201d would become incorrect, as the values would represent \u201cleftSpeed\u201d and \u201crightSpeed\u2019. But, it will confirm for you that you\u2019re properly getting the joystick values and outputting them to the motors. You don\u2019t have to do this, it\u2019s just an option for getting starting.</li><li>As stated, you can copy most or all of the arcadeDrive method from DifferentialDrive if you want. But you don\u2019t need all of it to complete the project, as that method has a lot of additional stuff. All you need to do is do the math to create linear and exponential drives. As mentioned before, lines 204-222 are the lines that combine the speed and rotation variables into left and right motor output values, which you would then use in your m_left and m_rightMotor.set() methods.</li></ul>"},"11":{"actionType":"Code","content":"<ul><li>You don\u2019t need to worry about any of the code from the DriveStraight project in this project, although you could implement that if you want.</li><li>When you square inputs for the exponential control mode, make sure you don\u2019t turn negative numbers into positive numbers. Remember, 1 squared equals one, but -1 squared also equals one. There are a couple different ways to account for this. You can use if statements to multiple negative values by -1 after you square them, but a better way is demonstrated on lines 195 and 196 of DifferentialClass.java.</li></ul>"}},"totalParagraphs":12},"Lesson 19 - Parallel Command Groups":{"Introduction":{"0":{"actionType":"Read","content":"<p> \\nIn lesson 10 you learned about commands and command groups and created some autonomous \\nroutines, by modifying a sequential command group, where commands are run in sequence, with the \\nnext one starting automatically after the last one finishes. In this lesson you\u2019ll utilize parallel command \\ngroups, where multiple commands can run at the same time across different subsystems. You may want \\nto open lesson 10 for review as you complete this project. \\n</p>"},"1":{"actionType":"Read","content":"<p> \\nIn the XRPReference project there are two subsystems, the drivetrain and the on-board IO \\nsystem, which, among other capabilities, has LED lights that you\u2019ve used a couple times throughout this \\ncourse. You\u2019ll use these two subsystems in concert to create a parallel command group that runs \\ncommands on both systems. \\n</p>"}},"Parallel Command Groups":{"2":{"actionType":"Code","content":"<p>Parallel command groups (PCGs) are fundamentally pretty similar to sequential command \\ngroups. The main difference is that the commands you add to the group using the addCommands \\nmethod will all begin at the same time. There are a couple different types of PCGs, which you can see \\nbrief descriptions of in the dropdown interface you see when you create a new command. To get \\nstarted, create a new XRPReference project called \u201cParallelLights\u201d, right click on the commands folder, \\nand choose to create a new command. Type \u201cparallel\u201d into the filter bar and you\u2019ll see three options: \\n</p>","image":"<img src=\\"./images/lesson19_0.png\\"/>"},"3":{"actionType":"Code","content":"<p> \\nThe simplest type of PCG is the default \u201cParallelCommandGroup\u201d. With this type, the command \\ngroup will finish when all of the commands in it finish. With the Race group, the command will end as \\nsoon as any command finishes, and with the Deadline group, you can specify a specific command, and \\nwhen that command finishes, the group will finish. Go ahead and create a PCG; it doesn\u2019t matter what \\nyou name it because you\u2019ll delete it and re-create it later when you do the project. \\n</p>"}},"Combining Command Types":{"4":{"actionType":"Search","content":"<p>Now that you understand class hierarchies in Java, let\u2019s take a moment to reason about \\ncommand groups and commands. In your newly created PCG, on the line declaring the class, you\u2019ll see \\nthat it extends ParallelCommandGroup, meaning that it is a child class of the parent class, \\nParallelCommandGroup. Example: \\n</p>","image":"<img src=\\"./images/lesson19_1.png\\"/>"},"5":{"actionType":"Search","content":"<p> \\nIf you F12 into ParallelCommandGroup, you\u2019ll see that this, in turn, extends \\nCommandGroupBase: \\n</p>","image":"<img src=\\"./images/lesson19_2.png\\"/>"},"6":{"actionType":"Search","content":"<p> \\nBoth the ParallelCommandGroup and SequentialCommandGroup classes extend \\nCommandGroupBase, meaning that both of these types of objects are also CommandGroupBase objects. \\nIf you F12 into CommandGroupBase, you\u2019ll that it extends CommandBase and implements Command. \\nImplementing Command is the key thing to notice here. Anything that implements Command can be \\nused as a Command, because implementing Command tells Java that the class has the critical Command \\nmethods such as initialize, execute, etc. Since all the different types of command groups extend \\nCommandBase, and CommandBase implements Command, all the command groups also implement \\nCommand, meaning that all command groups can also function as Commands. This is important because \\nthis means that when you\u2019re adding a command to a command group, you can add a command group \\ninstead of a basic command. \\n</p>"},"7":{"actionType":"Read","content":"<p>Let\u2019s look at an example. There is a lot of text to take in here, so feel free to read this a couple \\ntimes until you wrap your head around it. The XRPReference project has a command group called \\n\u201cAutonomousDistance\u201d, which you\u2019ve worked with in the past. It has four sub-commands that are \\nadded using the addCommands method. You could add additional commands to it, and those \\ncommands could themselves be command groups. This lets you combine various command types to \\ncreate complex behaviors. For example, you could create a ParallelCommandGroup that turns lights on \\nthe OnBoardIO to turn on, while telling the Drivetrain to drive. You could then add that command to the \\nsequential AutonomousDistance command group. Then as AutonomousDistance runs, it will start going \\nthrough its commands in sequence. When it gets to your parallel command, it will run all the sub-\\ncommands of your parallel command. When all of those sub-commands finish, it will resume its original \\nsequence. \\n</p>"},"8":{"actionType":"Read","content":"<p>The combination of parallel commands, sequential commands, and sub-commands gives you \\nvery granular control over all the subsystems on your XRP and lets you easily build complex \\nautonomous modes, once the commands themselves have been coded. It lets you re-use your base \\ncommands in different orders and sequences to create different autonomous modes. Mastering parallel \\nand sequential commands, and how to combine them, is an important skill. It also takes a bit of practice \\nso it\u2019s time for you to start getting that practice with the project. \\n</p>"}},"Project \u2013 AutonomousDistanceWithLights":{"9":{"actionType":"Read","content":"<div><p>For the project you\u2019ll implement the example described above. The goal is to create a sequential \\ncommand group that mimics the behavior of the pre-existing AutonomousDistance command group, but \\nreplace the sub-commands in AutonomousDistance with ParallelCommandGroup commands that both \\ndo the action the original sub-command did (either driving or turning), and also turn the on-board IO \\nLED lights on or off. For this project, you can use the green and red LEDs on the XRP. You can refer back \\nto lesson 3 to see how to create a command to turn the lights on and off. The final sequence of events \\nshould be as follows: \\n</p><ol><li>The XRP drives forward ten inches while turning its lights off.</li><li>The XRP turns its lights on while turning 180 degrees.</li><li>The XRP turns its lights off while once again driving ten inches (repeating step 1.)</li><li>The XRP turns its lights on while turning 180 degrees (repeating step 2.)</li><li>The XRP turns its lights off.</li></ol></div>"},"10":{"actionType":"Read","content":"<p>Steps 1 through 4 will be parallel command groups. Step 5 is a basic command, not a group. The five \\nsteps combine to form a sequential command group. When you\u2019re done, your autonomous mode \\nshould drive ten inches, turn the lights on while turning, turn the lights off while driving back, turn the \\nlights on while turning again, and then turn the lights off and stop. Here are some steps you can take to \\ndo this project...</p>"},"11":{"actionType":"Code","content":"<p>1. Create and implement two commands, TurnLedsOn.java and TurnLedsOff.java. Again, lesson \\n3 has an example of how to do this. Use the red and green LEDs. \\n</p>"},"12":{"actionType":"Code","content":"<p>2. Create a new sequential command group called AutonomousDistanceWithLights.java that \\nwill replace AutonomousDistance.java. \\n</p>"},"13":{"actionType":"Code","content":"<p>3. Update RobotContainer.java to use your new command group as the default autonomous \\ncommand (you can ctrl+f \u201cAutonomousDistance\u201d to see where the default autonomous \\ncommand is specified.) \\n</p>"},"14":{"actionType":"Code","content":"<p>4. Create two parallel command groups that you\u2019ll use as replacements for the old driving and \\nturning commands. You can call these \u201cDriveDistanceAndTurnOffLights\u201d and \\n\u201cTurnDegreesAndTurnOnLights\u201d respectively. \\n</p>"},"15":{"actionType":"Code","content":"<p>5. Implement your two commands by adding their sub-commands. In this case the sub-\\ncommands will be the old methods they\u2019re replacing (DriveDistance and TurnDegrees, \\nrespectively) plus the correct command that turns the LEDs on or off. You\u2019ll need to pass in \\nthe right subsystems (Drivetrain and OnBoardIO) to your command groups and sub-\\ncommands. \\n</p>"},"16":{"actionType":"Code","content":"<p>6. Now that all your commands are created, go back to your new sequential command group, \\nAutonomousDistanceWithLights, and add all the commands that it needs to complete the \\nroutine. \\n</p>"},"17":{"actionType":"Code","content":"<p>7. Before you run your program, you\u2019ll need to specify that the LEDs should function as output, \\njust like you did in prior lessons where you used the LEDs. You can find the line where this is \\ndone in RobotContainer.java by ctrl+f\u2019ing \u201cChannelMode.\u201d. Update the two ChannelModes \\nto ChannelMode.OUTPUT. Example: \\n</p>","image":"<img src=\\"./images/lesson19_3.png\\"/>"},"18":{"actionType":"Robot","content":"<p>8. Once you\u2019ve completed all these steps, you\u2019re ready to run and test your autonomous \\nroutine! \\n</p>"}},"totalParagraphs":19},"Lesson 20 - Integrating Commands In Teleop":{"Introduction":{"0":{"actionType":"Read","content":"<p> \\nYou\u2019ve made it through 19 lessons of XRP programming and there\u2019s only one lesson to go! In \\nthis lesson, we\u2019ll combine a lot of the concepts you\u2019ve learned over the last few months into a single \\nproject. There isn\u2019t much new content to learn here, but it will take you some time to piece together all \\nthe different pieces of the project from prior projects and make them work seamlessly together. \\n</p>"}},"Issuing Commands in Teleop":{"1":{"actionType":"Read","content":"<p>You learned how to bind a command to a button on the joystick in teleoperated mode in lesson \\n3, but the commands we used there acted on the on-board IO subsystem and not the drivetrain. One \\ncapability you have that can be useful is to bind commands that act upon your drivetrain to buttons in \\nteleop. This lets your robot automatically perform actions for you, instead of forcing you as a driver to \\ndo them yourself. If you do this, while the command is running, you will lose control of the robot, \\nbecause as soon as your command starts running, it will interrupt the default command that the \\ndrivetrain is running. When your command finishes, the drivetrain will resume running its default \\ncommand, which is your drive code, and you\u2019ll re-gain control. As a general rule this is not a problem, \\nbut you do need to be careful not to issue any commands that take longer than expected or don\u2019t end \\nproperly, or you could lose control of your robot. This also means you need to be ready to disable your \\nrobot all the time while testing so it doesn\u2019t accidentally drive away from you or fall off your desk onto \\nthe floor. \\n</p>"},"2":{"actionType":"Read","content":"<p> \\nIn lesson 3 you used the \u201cwhenActive\u201d and \u201cwhenInactive\u201d methods of the JoystickButton class \\nto bind commands to run while the button was held down, or not held down. Sometimes you want \\ncommands to run a single time when the button is pressed. For that, there is the \u201cwhenPressed\u201d \\nmethod. Here\u2019s an example of using the whenPressed method to bind the built-in TurnDegrees \\ncommand to a button press in RobotContainer: \\n</p>","image":"<img src=\\"./images/lesson20_0.png\\"/>"},"3":{"actionType":"Read","content":"<p> \\nThis code will make the robot turn 180 degrees whenever you press the button. You will not be \\nable to drive the robot while it is turning but will regain control as soon as it finishes. You can test this \\nout for yourself in a XRPReference project by copying the code above (you\u2019ll need to import the \\nTurnDegrees command using the lightbulb.) Some examples of useful commands you might bind to \\nbuttons for teleop would be to turn left or right a fixed number of degrees, or to turn to a known \\norientation. Say you were completing a timed challenge that involved a series of 45 degree turns. You \\ncould certainly complete the challenge manually by controlling the robot, but if you bound a button to \\nturning 45 degrees, you could complete it faster because your code would automatically turn the right \\namount. Another example might be driving a fixed distance \u2013 say you were supposed to move back and \\nforth between two points exactly 20 inches apart. Why force yourself to do all the work when you could \\njust bind that to a button? As you spend more time writing code and playing with robots, you\u2019ll find \\nmore examples of things you can automate for yourself. \\n</p>"}},"Project \u2013 Automating Teleop":{"4":{"actionType":"Read","content":"<p>For the final project of the course, you\u2019ll combine what you\u2019ve learned and coded in prior \\nprojects into a single program. Build off your code from projects 16-18, and create a program that does \\nthe following... </p>"},"5":{"actionType":"Code","content":"<div><p>\u2022 Has four different functions bound to buttons in teleoperated mode:</p><ul><li>One turns the robot left 90 degrees</li><li>One turns the robot right 90 degrees</li><li>One turns the robot around (180 degrees)</li><li>One returns the robot to its starting orientation (the orientation it was in when the program began running.)</li></ul></div>"},"6":{"actionType":"Code","content":"<p>\u2022 Uses your custom arcadeDrive code to drive while not executing one of the functions in the prior bullet point.</p>"},"7":{"actionType":"Code","content":"<p>\u2022 Has drive straight code implemented and passes the \u201ctray test\u201d where you rotate the robot around and it maintains its orientation.</p>"},"8":{"actionType":"Code","content":"<p>\u2022 Does not automatically revert to a prior orientation after you execute one of the button press commands. That means you will need to update the target heading while these commands are running, or at the very least when they finish running.</p>"},"9":{"actionType":"Code","content":"<p>\u2022 Successfully passes off control between the default drive command and the button-issued commands. You can test this by driving the robot forward at a slow speed, confirming that it\u2019s behaving as expected, and then issuing a button command but still attempting to drive forward at slow speed while the button-issued command is running. The robot should complete the button-issued command instead of driving forward, and then immediately resume driving forward after the button-issued command is completed.</p>"},"10":{"actionType":"Read","content":"<p>Once you\u2019ve implemented and tested all these features, congratulations, you have finished the course! You\u2019ve gained a lot of knowledge and developed some strong skills. This course is meant to be a challenge, so even if you found these projects difficult, do not worry \u2013 as you continue to gain practice, you will continue to increase your understanding, you\u2019ll be able to write code faster, and you\u2019ll gain confidence in your abilities. If you enjoyed working with the XRP, the next step for you would be to find a local FIRST team at your school or in your community competing in either FIRST Robotics Competition or FIRST Tech Challenge. Another step would be to continue learning Java and to take the AP Computer Science exam to get college credit. Software programming takes time to learn, but you are well on your way and if you continue your learning you will find it to be a challenging, profitable, and most importantly fulfilling skill to master.</p>"}},"totalParagraphs":11}}');var Ja=function(){var e={};for(var t in $a){var o=$a[t];for(var a in e[t]={},o){e[t][a]={};var r=$a[t][a];for(var i in r){var s=r[i].content,l=r[i].image,u=r[i].actionType,c=r[i].more_images;switch(u){case"Search":u=Ga.Search;break;case"Read":u=Ga.Read;break;case"Robot":u=Ga.Robot;break;default:u=Ga.Code}e[t][a][i]={actionType:u,content:n(854)(s)},"string"==typeof l&&(e[t][a][i].image=n(854)(l)),"string"==typeof c&&(e[t][a][i].more_images=n(854)(c)),console.log(e[t][a][i].content)}}var d=Number(o.totalParagraphs);e[t].totalParagraphs=d}return console.log(e),e},Qa=Ja(),Ka={"Lesson 1 - Getting Started":{totalParagraphs:50,Introduction:{0:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"Welcome to learning programming with the XRP robot! In this course, you\u2019ll learn how to program robots for fun or for competition, and how to write software, which you\u2019ll be able to do for robots, and for other uses as well. This course assumes no prior experience of writing software. If you have some prior experience and know the basics, you will still find value in this course as it relates to programming robots and the XRP in particular. If you\u2019re familiar with FIRST Robotics and want to learn how to program robots that compete in FIRST competitions, this is the perfect course for you. By the time you finish this course you\u2019ll have built up skills to contribute to any team you\u2019re a part of and created a foundation for yourself for future learning, leading you on a path to becoming an expert software developer. In this first lesson, we\u2019ll focus on setting up the XRP and making it move."})},1:{actionType:Ga.Read,content:(0,Ra.jsxs)("p",{children:[(0,Ra.jsx)("strong",{children:"Setting up your robot and getting the first program to run can be the most frustrating part of programming."})," Unfortunately, there is no way around this. But, if you follow the steps here, you will succeed, and you\u2019ll be driving by the end of this lesson. If something fails the first time you try it, don\u2019t give up \u2013 once you make it through this lesson, the succeeding lessons will be more interactive and fun. Also note that although this lesson seems long by page count, most of the pages are filled up with  images, so it will be faster than you might think."]})}},"Necessary Materials":{2:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"To complete this course, you\u2019ll need the following things..."})},3:{actionType:Ga.Read,content:(0,Ra.jsxs)("p",{children:[(0,Ra.jsx)("strong",{children:"A XRP robot"})," (of course)"]})},4:{actionType:Ga.Read,content:(0,Ra.jsxs)("p",{children:[(0,Ra.jsx)("strong",{children:"The data USB cable that comes with the XRP kit."})," It\u2019s important to use this specific cable, as some USB cables are for power only and will NOT work. "]})},5:{actionType:Ga.Read,content:(0,Ra.jsxs)("p",{children:[(0,Ra.jsx)("strong",{children:"One or more joysticks/controllers for driving the robot."})," This course uses a gamepad-style controller (such as an Xbox controller, Logitech F310, or similar) for the examples, but you can use any controller recognized by your computer, as long as it has at least two joystick axes. The course explains how to account for differences in controllers, although there are some instances where driving may feel uncomfortable if you only have a single joystick."]})},6:{actionType:Ga.Read,content:(0,Ra.jsxs)("p",{children:[(0,Ra.jsx)("strong",{children:"A supply of AA batteries."})," You will likely want rechargeable batteries because you will go through a lot of batteries in this course, and it will be expensive and wasteful if you can\u2019t recharge them. The XRP uses two batteries at once and a full charge will last up to a few hours under normal use where you spend more time writing code than driving but can run out faster than that if you spend a lot of time driving. The XRP comes with two batteries, so you can get started on the first couple lesson with those batteries while waiting for a rechargeable kit to kit to arrive, if you purchase a kit online."]})},7:{actionType:Ga.Read,content:(0,Ra.jsxs)("p",{children:[(0,Ra.jsx)("strong",{children:"A computer with wireless internet access."})," If you have a computer without wireless access, you can buy a wireless adapter for less than $20. You need wireless internet to connect to the XRP to deploy code and drive."]})},8:{actionType:Ga.Read,content:(0,Ra.jsxs)("p",{children:[(0,Ra.jsx)("strong",{children:"An internet connection."})," In addition to connecting to the XRP, this course has links to external materials you\u2019ll need to access. In this lesson, you\u2019ll need to download two files which are each about a gigabyte, which can take a few minutes on slower connections. These are the only large  downloads in the course."]})}},"Setting Up Your XRP":{9:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"There are two main steps in getting started, both of which are explained in detail below: installing VSCode with the WPILib library, and installing firmware onto your XRP. If you know that one or both of these steps have been done for you already, you can skip that step accordingly. If you aren\u2019t sure, then do not skip the step."})}},"Turning your XRP On and Off":{10:{actionType:Ga.Robot,image:(0,Ra.jsx)("img",{src:"./images/lesson1_12.png"}),content:(0,Ra.jsxs)("p",{children:["The XRP has a single power switch, as shown in the image below (sourced from ",(0,Ra.jsx)("a",{href:"https://docs.wpilib.org/en/stable/docs/xrp-robot/hardware-and-imaging.html",children:"WPILib"}),'). To turn it on, you simply have to flip the switch to the \u201con\u201d position and flip it to the "off" position to turn it off. Remember to turn off your XRP when you\'re not using it to avoid draining the batteries.']})}},"Video Tutorial":{11:{actionType:Ga.Read,content:(0,Ra.jsxs)("p",{children:["[Note: The video below is not for the XRP. The video will be corrected during the spring/summer of 2024] If you prefer videos over text instruction, you can follow this link to see a video of how to set up a XRP. If you prefer to follow a list of steps, or are unclear about any part of the video, you can follow the text steps outlined below. Video: ",(0,Ra.jsx)("a",{href:"https://www.youtube.com/watch?v=mop51tpWWcA",target:"_blank",children:"https://www.youtube.com/watch?v=mop51tpWWcA"})]})}},"Step 1 \u2013 Installing VSCode and the WPILib":{12:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"Programming the XRP is done using a library known as \u201cWPILib\u201d. WPILib is built into an installation of an application called \u201cVSCode\u201d, which is what you will use to write and deploy code to the XRP. There is documentation for the WPILib which includes guides on how to get started. To begin, follow the guide linked in the next screen to download VSCode. Note that the VSCode download and the XRP images are about 1-2 gigabytes each and may take a few minutes to download."})},13:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["1. Start by opening this link: ",(0,Ra.jsx)("a",{href:"https://docs.wpilib.org/en/stable/docs/zero-to-robot/step-2/wpilib-setup.html",target:"_blank",children:"https://docs.wpilib.org/en/stable/docs/zero-to-robot/step-2/wpilib-setup.html"})," You\u2019ll be using Java."]})},14:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson1_17.png"}),content:(0,Ra.jsx)("p",{children:"2. There will be a link to GitHub which you need to follow:"})},15:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson1_18.png"}),content:(0,Ra.jsx)("p",{children:"3. Once on GitHub, the actual downloads are at the bottom of the page; you\u2019ll need to select the proper one based on which operating system you\u2019re using (Windows, Mac, or Linux) and whether your system is 32-bit or 64-bit. You don\u2019t need to read any of the other text on this page, you just need to find the right download. If you\u2019re on Windows and unsure which one to download, look at sub-point on the next screen."})},16:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson1_19.png"}),content:(0,Ra.jsx)("p",{children:"On a Windows computer, if you are unsure of whether it\u2019s 32- or 64-bit, press the Windows key (or click on the start menu), type \u201cThis PC\u201d or \u201cComputer\u201d, and click the \u201cProperties\u201d link that appears in the search menu. Then, in the \u201cSystem\u201d section, look at the \u201cSystem type\u201d field, which will tell you if your system is 32- or 64-bit."})},17:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["4. Once you have the right file downloaded from GitHub, go back to the WPILib documentation using the same link as before: ",(0,Ra.jsx)("a",{href:"https://docs.wpilib.org/en/stable/docs/zero-to-robot/step-2/wpilib-setup.html",children:"https://docs.wpilib.org/en/stable/docs/zero-to-robot/step-2/wpilib-setup.html"})]})},18:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"5. In the documentation, follow all the steps on the page, starting with the \u201cExtracting the Installer\u201d step. There are images to guide you. If you are unsure what options to choose at any point through the setup, follow the default recommendations that the documentation gives you. If you\u2019re unsure about \u201cInstall for this User\u201d or \u201cInstall for all Users\u201d, you can choose \u201cInstall for this User\u201d."})},19:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"6. Partway through the page you\u2019ll notice a green warning similar to the one pictured below. If this is your first time installing VSCode, you probably don\u2019t need to worry about this warning  too much, but if for any reason you have a version of VSCode installed your computer already, pay attention to this. Only the new version that you\u2019re installing will work \u2013 any prior installation will NOT work, even if it was done for a robotics team."})},20:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"7. Make sure to read through the page thoroughly while you follow the steps. It is easy to make a mistake, but if you do follow the steps exactly, it will work. If it does not work, you can attempt to backtrack and see what step you missed. Starting over from scratch can sometimes be an easier option as well."})}},"Step 2 \u2013 Setting Up Your XRP":{21:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"To set up your XRP, you need to download and install firmware on it. You can think of firmware as kind of like an operating system for the XRP. It needs to have firmware installed in order to execute the programs that you write. There are a lot of details in the documentation during this section, but you don\u2019t need to read all of them. Follow the steps listed here to successfully install the firmware and configure your robot for use."})},22:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["1. Start by following this link: ",(0,Ra.jsx)("a",{href:"https://docs.wpilib.org/en/stable/docs/xrp-robot/index.html",target:"_blank",children:"https://docs.wpilib.org/en/stable/docs/xrp-robot/index.html"})," You don\u2019t actually need to read the information on this page, but keep this link as a reference because if you want to do more advanced things with the XRP after reading through this course, you can refer back to it."]})},23:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson1_26.png"}),content:(0,Ra.jsx)("p",{children:"2. On the page linked above, click the \u201cNext\u201d button in the bottom-right corner."})},24:{actionType:Ga.Robot,content:(0,Ra.jsx)("p",{children:"3. You\u2019ll now be on a page describing how to assemble the XRP. If your XRP is not assembled, follow all the steps here. If your XRP came pre-assembled, you can immediately scroll to the  bottom and click next."})},25:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"4. The next section is titled \u201cImaging your XRP\u201d. This page is important for ALL users, regardless of whether your XRP came pre-assembled. The first think you\u2019ll need to do is download the XRP WPILib image. The steps to do this are a little confusing so follow closely:"})},26:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"4a. Click on the \u201cXRP-WPILib Firmware\u201d link which takes you to a GitHub page:"}),image:(0,Ra.jsx)("img",{src:"./images/lesson1_4a.png"})},27:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["4b. There will be a large link on the top of this page that looks similar to the image below, although the exact numbers and dates may have changed relative to the image. ",(0,Ra.jsx)("strong",{children:"Make sure you\u2019re at the top of the page and that you did not scroll down."})," Before clicking on this link, look at the scrollbar in the upper right corner of your browser \u2013 it should be quite small. After looking at it and visualizing how large it is, click the big XRP-WPILib link. ",(0,Ra.jsx)("strong",{children:"It may appear as though nothing on your screen has changed."})]}),image:(0,Ra.jsx)("img",{src:"./images/lesson1_4b.png"})},28:{actionType:Ga.Search,content:(0,Ra.jsx)("p",{children:"4c. After clicking on the link, check your scrollbar again. It should now be larger."}),image:(0,Ra.jsx)("img",{src:"./images/lesson1_4c.png"})},29:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["4d. If the scrollbar grew in size ",(0,Ra.jsx)("strong",{children:"and"})," the XRP-WPILib link stayed the same, you\u2019re on the right path. If the numbers in the XRP-WPILib link changed after you clicked the link, then go back and make sure you\u2019re scrolled to the top of the page before you click the link. But if it stayed the same, you\u2019re good to go. Now scroll down to the bottom of this page and you\u2019ll see a list of files. Click the xrp-wpilib-firmware file. Again, the numbers may be slightly different on your screen, compared to the image below:"]}),image:(0,Ra.jsx)("img",{src:"./images/lesson1_4d.png"})},30:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["4e. Once you\u2019ve downloaded this image file, go back to the WPILib documentation, to the section titled \u201cImaging your XRP\u201d: ",(0,Ra.jsx)("a",{href:"https://docs.wpilib.org/en/stable/docs/xrp-robot/hardware-and-imaging.html",about:"_blank",children:"https://docs.wpilib.org/en/stable/docs/xrp-robot/hardware-and-imaging.html.html"})]})},31:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:'4f. Follow steps 2 through 6 under the "Imaging" subheading exactly as they are written. The file referenced in step 5 is the xrp-wpilib-firmware file you just downloaded.'})},32:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:['4g. Now you can connect to your XRP wirelessly the same way you would connect to any other wifi network on your computer. Unplug the robot from your computer then flip the power switch to "on". After a few seconds, a new network should pop up called "XRP-" followed by a number ID. Use the password "xrp-wpilib" to connect. To confirm that you have established a connection, open this webpage: ',(0,Ra.jsx)("a",{href:"http://192.168.42.1:5000",about:"_blank",children:"http://192.168.42.1:5000"}),". If it loads, you were successful!"]})},33:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"There are a couple things to note about connecting to the XRP over wifi. First, when you do so, you will disconnect from any other wifi networks you\u2019re connected to, meaning you will probably lose internet access if you\u2019re connected to your internet over wifi. You can maintain internet access and connect to the XRP at the same time if you connect to your internet with an ethernet cable, but if you\u2019re not connecting to the internet with a cable, be prepared to lose access. Third, sometimes on Windows the network connection screen might look like the first image below while you are connected. If your screen sits with scrolling white dots, you\u2019re probably connected after a few seconds. It might also say \u201cNo Internet\u201d (second image), while in reality, you\u2019re still connected to the XRP \u2013 you just don\u2019t have access to the internet, because your XRP is just a robot, not a router that connects you to the outside world like you\u2019re usually connected to with wifi."}),image:(0,Ra.jsx)("img",{src:"./images/lesson1_4q.png"}),more_images:(0,Ra.jsx)("img",{src:"./images/lesson1_4q1.png"})},34:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"Congratulations! You\u2019re finally done setting up your XRP. It\u2019s time to make it move!"})}},"Part 2 - Running Your First Program":{35:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["Navigate to this page in your browser: ",(0,Ra.jsx)("a",{href:"https://docs.wpilib.org/en/stable/docs/xrp-robot/programming-xrp.html",about:"_blank",children:"https://docs.wpilib.org/en/stable/docs/xrp-robot/programming-xrp.html"})," and open VSCode. Make sure you\u2019re connected to your XRP through your wifi network."]})},36:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson1_31.png"}),content:(0,Ra.jsx)("p",{children:"Follow the steps in the linked page all the way to the end. There are a couple items that you\u2019ll need to specify that are not covered by the linked page. First, when it asks you to select a language, pick Java (as shown below). Head to the next screen on this interactive course before moving on."})},37:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson1_32.png"}),content:(0,Ra.jsx)("p",{children:"For the \u201cBase Folder\u201d field, you can choose whatever you want in your filesystem, but it might be a good idea to create a folder called \u201cDevelopment\u201d in an easy-accessible location, where you put all your XRP projects. For the project name, you can again enter whatever you want. \u201cExampleProgram\u201d might be a good name for your first project. Leave the \u201cCreate a new folder?\u201d checkbox checked. For \u201cTeam Number\u201d, if you belong to an FRC team, you can enter your team\u2019s number. If you do not, or you don\u2019t know what an FRC team is, you can enter \u201c0000\u201d. Do not check the \u201cEnable Desktop Support\u201d checkbox. Pictured below is an example. When you're finished with this, head to the next screen on this interactive course."})},38:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Back on the \u201cProgramming the XRP\u201d webpage, you can ignore the paragraph right near the end that says \u201cIf you changed the XRP network settings...\u201d. This means the last thing you\u2019ll do in the instructions is press F5, which will deploy the example project. Go ahead and do this! If when you press F5 you get any sort of build error (you will see red text near the bottom of your screen saying build failed), try rebooting VSCode and your XRP, re-connecting to your XRP\u2019s wifi (remember that will take a minute for the wifi network to pop up), and deploying again. Sometimes VSCode will fail to contact the XRP even if there is nothing wrong with your code, but rebooting solves this."})},39:{actionType:Ga.Search,image:(0,Ra.jsx)("img",{src:"./images/lesson1_34.png"}),content:(0,Ra.jsx)("p",{children:"After you deploy your code, VSCode will bring up a new interface (called the \u201cRobot Simulation\u201d interface) that looks something like this. Note 1: Sometimes the Robot Simulation window will not open the first time you press F5. If this happens to you, simply click the red square to end your program, and press F5 again."})},40:{actionType:Ga.Search,image:(0,Ra.jsx)("img",{src:"./images/lesson1_35.png"}),content:(0,Ra.jsx)("p",{children:"Note 2: If you have the FRC Driver Station application installed on your computer, you may not see the Robot State box in the upper left of the image below. Instead, you will use the FRC Driver Station app to enable/disable your robot and select modes. If you don\u2019t know what the FRC Driver Station is, don\u2019t worry about this note."})},41:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"This interface lets you control the XRP and see various output from the onboard sensors. But what we\u2019re most interested in right now is making it move. The simplest way to do this with the sample program is to enable its autonomous program. Enabling the autonomous program will cause the XRP to drive forward about ten inches, turn around, drive back to its original location, and then turn around again. Make sure you have the XRP somewhere where it can safely do this (not at the edge of a desk or table) and be ready to enable it. Look at the previous photo, and find the \u201cRobot State\u201d box, in the upper left, highlighted in green. Here you will see a list of four robot states \u2013 Disabled, Autonomous, Teleoperated, and Test. As soon as you click Autonomous, the XRP will enable and immediately begin its autonomous routine. When you\u2019re ready, give it a try! After the XRP finishes moving, click the Disabled option to disable it again. Although the XRP is lightweight and low power, making sure robots are disabled when not in direct use is a critical safety practice."})},42:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Now that you\u2019ve made the XRP move on its own, it\u2019s time to try driving it yourself. If you look at the window called \u201cSystem Joysticks\u201d, highlighted in red on the last image, you will see any joysticks that you have plugged in to your computer. In the example, there is an Xbox controller plugged in, but you can use anything that your computer recognizes as a joystick. There\u2019s an additional window called simply \u201cJoysticks\u201d, highlighted in yellow, and these are the joysticks that your code and XRP are looking at for input. You may not see any joysticks listed in this window. If that is the case, you can simply drag and drop your joysticks from the System Joysticks window, to the Joysticks window. In the example photo, the Xbox Controller has been dragged to joystick 0. Do likewise \u2013 drag whatever joystick you want to use as your controller to the 0 slot. If you have multiple joysticks plugged in to your computer, you may need to do some quick tests to figure out which one is which. How to do this is explained next."})},43:{actionType:Ga.Search,content:(0,Ra.jsx)("p",{children:"After dragging your joystick so the Joysticks window, try moving your joystick around and pressing some buttons. You will see the yellow squares at the bottom of the Joysticks window fill/unfill as you press and release buttons, and you can see the axis values change in value as you move the sticks around. This is how you can test which joystick in the System Joysticks is which if you are not sure. If you have one joystick dragged to the joysticks window and pressing buttons/moving the sticks doesn\u2019t change any of the values, you probably dragged a different stick."})},44:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Once you\u2019ve gotten your joystick to register, and you\u2019ve confirmed it\u2019s in the Joystick[0] slot, you\u2019re ready to enable your robot! Look back at the robot state box, and when you\u2019re ready, click Teleoperated. This will enable the robot. Now you can start trying to drive it around! If you press various buttons and/or sticks on your joystick/controller, you should be able to make the robot move. However, it may or may not control as you expect. For example, by default, if you\u2019re using an Xbox controller, the left joystick will control the robot moving forward and backward, but the left trigger will control turning, and you\u2019ll only be able to turn it one direction since the left trigger can only register positive values (as opposed to a joystick, which can register positive or negative values, e.g. if you push it forward or backward.) Now disable the robot. Your first task for you to start programming will be to fix the controls so it can drive normally. If your robot does drive as expected, which could happen for some controllers, then you can still follow the lesson. You\u2019ll simply change it to drive abnormally, and then fix it again."})}},"Ending the Executing Program":{45:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson1_40.png"}),content:(0,Ra.jsx)("p",{children:"After you press deploy your code, a small box with a few buttons will pop up in the top of VSCode. While this box is visible, you may not be able to deploy additional code to the XRP \u2013 VSCode may give you an error. When you want to deploy new code, simply click the red square in this box first, and then you can deploy your code:"})}},"Fixing the Controls":{46:{actionType:Ga.Search,content:(0,Ra.jsx)("p",{children:"As discussed above, you can look at the robot simulation interface, and see changes in the joystick section as you move the joysticks or press buttons. Decide which joystick axis you want to control turning. For example if you\u2019re using an Xbox controller, this might be the left joystick being pushed left or right, or the right joystick being pushed left or right. If you\u2019re using a single standalone joystick, you don\u2019t have as many options. But either way, decide what you want, and then start pushing the joystick that way. On the joysticks interface you will see a value change. For example, it might move from 0 to 1 or -1 depending on which direction you push it. The important thing here is to note which axis is changing. The axes are labeled from 0 to 5 in brackets, like so: Axis[4]. Determine which axis is changing, and remember this number."})},47:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson1_42.png"}),content:(0,Ra.jsx)("p",{children:"Now let\u2019s dig into the code. Back in VSCode, open the \u201cExplorer\u201d (highlighted in red, upper left, see the picture below) and then click on src, java, frc, robot, and then finally double click on RobotContainer.java to open it."})},48:{actionType:Ga.Search,image:(0,Ra.jsx)("img",{src:"./images/lesson1_43.png"}),content:(0,Ra.jsx)("p",{children:"If you\u2019re brand new to programming, there is a lot to take in here \u2013 but don\u2019t worry about that. We\u2019ll discuss everything in time, but for now let\u2019s get those controls fixed. Scroll down in RobotContainer.java until you see line number 97. The lines are numbered on the left side of the code. On line 97, you\u2019ll see this:"})},49:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"At the end of the line, you\u2019ll see \u201c-m_controller.getRawAxis(2))\u201d, highlighted in red in the previous image. This line sets which axes of the joystick are being used to control the robot. Change the 2 to whatever axis you identified when testing the controls. If your controls were already correct, try changing it to something else, following the next step, and then changing it back. Once you do this, you can press ctrl+s to save, and F5 to deploy your code to the XRP again. Once the code finishes deploying, you can enable it again and try out your new controls. If you put the right axis, you\u2019ll be able to drive your robot comfortably! If the controls aren\u2019t what you expected, double check your axes again when you push on them using the joysticks interface, and make sure you changed the correct value in the code. Now that you have your XRP driving around, have some fun with it! You\u2019ve taken your first steps into writing code and you already have a robot driving around."})}}},"Lesson 2 - Intro to Java - Variables":{totalParagraphs:20,Introduction:{0:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"In Lesson 1, you got your XRP driving around and made a small code change. In this lesson, we\u2019ll talk a little bit about Java as a programming language so you can start to make sense of all the folders and files you see in VSCode."})}},"Printing Output":{1:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson2_1.png"}),content:(0,Ra.jsx)("p",{children:"One of the simplest things you can do in Java is tell the program to output text. You can do this by calling one of two \u201cmethods\u201d. We will talk about what a method is shortly, but for now just think of it as some piece of code can you \u201ccall\u201d, or invoke, to do something. Java executes code starting at the top of the file, and then executes lines one by one from top to bottom of the file. So, inserting lines into a program will result in them being executed. The two methods to output text are:"})},2:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson2_2.png"}),content:(0,Ra.jsxs)("p",{children:["In both the method calls above, the text in quotation marks will be outputted. In the second one, a line break will be added to the end of the text. The only difference is the addition of \u201cln\u201d (with a lowercase L) after \u201cprint\u201d, which is abbreviation for \u201cline\u201d. So, in English, system-dot-out-dot-print, and system-dot-out-dot-print-line. You can add these lines of code to your XRP program and try them out for yourself. Open Main.java, which is in the same location as RobotContainer.java from the previous lesson (explorer-",">","src-",">","main-",">","java-",">","frc-",">","robot) and scroll down to line 23. Here you can insert these lines. Make sure to put them before the line that says RobotBase.startRobot(Robot::new);. Here is an example:"]})},3:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson2_3.png"}),content:(0,Ra.jsx)("p",{children:"After you do this, you press F5 to run your program and click on the TERMINAL output window example shown below. (It will take a few seconds to compile and run. You do not need your XRP powered on to do this test. You may need to scroll up in the terminal window, but if you look closely, you will see your output text. Here\u2019s the output from running the example above; you can see the difference between print and println because some of the outputs create new lines and some do not.)"})},4:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"In general, you do not want to put code in the location where we put these output statements, so after you run your test and get it working, delete these lines. We will talk more about why this is later."})}},Methods:{5:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"With the output statements above, you\u2019ve added your first method calls. In Java and most other programming languages, complex programs are broken down into many smaller chunks of code by writing methods. While we used a built-in method with System.out.println, you can also write and call your own methods. Almost everything that happens in a Java program is a compilation of methods, because methods can call other methods. As an example of this, think about a laptop computer, when you turn it on. When it turns on, a lot of things need to happen \u2013 it needs to start powering its hardware, it loads its operating system, it turns on the screen, etc. \u2013 but you only push one button to make all of this happen. You can think of pushing the button as calling a method that turns on the computer. That method might call some of sub-methods, for example one to power the hardware, one to load the operating system, and so forth. The code to do each of these individual tasks is localized in their own methods, and the person calling the method (in this case you, when you power on the machine) doesn\u2019t really care about how those things work, you just call the method by pushing the power button and everything works. Methods are a critical building block of programs because they allow code to be re-used \u2013 the code to, for example, open a web browser window might be called when you click on the browser icon on your desktop, but also if you click a link in this document and it opens a window on its own. In both cases, a method to open a browser window was called, but the person programming that functionality only had to write that method once \u2013 they did not have to re-write it for every possible way to open a browser window."})}},Variables:{6:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"We\u2019ll talk more about methods in a bit, but before we do that, let\u2019s talk about another concept called a \u201cvariable\u201d. A variable is some value that exists in your program that has a name and can be changed and used. For example, you could have a variable called \u201crobotSpeed\u201d that represents the current speed of your XRP in inches per second. Since the XRP has encoders on the drive motors, which measure the rate of rotation, you could do some math to determine the current speed at which the wheels are spinning, and then store that value in robotSpeed. Then you could do something like outputting the speed to the terminal using System.out.println (SOP) and get a real-time update of your robot\u2019s speed. You could even write a method that does all of this for you!"})},7:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"Variables have different data types. For example a data could be an integer, in Java called an int, or it could be a decimal, which in Java could be called a double. There are other ways to represent these numbers in Java, but for now we\u2019ll focus on int and double."})},8:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson2_8.png"}),content:(0,Ra.jsx)("p",{children:"To create, or declare, a variable you give it a name and a data type. In Java you do this like so:"})},9:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson2_9.png"}),content:(0,Ra.jsx)("p",{children:"You can assign values to variables using the assignment operator, which is an equal sign. If you\u2019ve taken algebra in school, then you\u2019ll be used to the equal sign meaning something slightly different \u2013 it signifies that two halves of an equation are, in fact, equal. In Java, it sets the first half of the equation equal to the second half. (If you haven\u2019t had algebra yet, don\u2019t worry about this comparison.) Here\u2019s an example of assigning values to variable:"})},10:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson2_10.png"}),content:(0,Ra.jsx)("p",{children:"You can also declare and initialize, or set a value, for a variable in a single line of code:"})},11:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson2_11.png"}),content:(0,Ra.jsx)("p",{children:"Once variables exist, they can be changed. For example, a robot\u2019s speed changes frequently during operation, so if you were to have a variable representing the robot\u2019s speed, it would need to constantly updated. You do this the same way as you did when you assigned the variable\u2019s value, using the equal sign. Here is a short sample program that declares and initializes two variables, outputs their values, and then updates one of them and outputs its value again. There are a couple important things to notice here. First, we\u2019re declaring and initializing variables. Then we use SOP to output the values, but instead of a hardcoded text string, we\u2019re using a variable when we call SOP. Then, we change the value of one of the variables and output it again. Also, we change between using print and println, when we want to have text on the same line vs using line breaks. Try writing this program for yourself in the same place in Main.java where you tested your SOP statements earlier."})},12:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson2_12.png"}),content:(0,Ra.jsx)("p",{children:"If you haven\u2019t clicked the red square toward the top of your screen to stop your prior program from running yet, do so now. As mentioned in lesson 1, you\u2019ll want to click the red square to stop the already-running program each time you want to deploy a code change, so keep that in mind going forward. Here is the output from that program in the terminal (again, you may need to scroll up to see it):"})},13:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"The last thing you might notice about this short program is that on line 32, there is text in green that reads as an English sentence, not Java code. The line is prefaced by two forward slashes - //. Putting two forward slashes in a line indicates that the rest of that line is a comment \u2013 Java will ignore it, so you can type whatever you want without causing an error. This is a helpful tool for writing text that explains what the code does, for humans to read. We\u2019ll talk more about comments later. For now, undo all your new additions to Main.java, because as mentioned before we generally don\u2019t want to put code here. Next we\u2019ll do a small project to get you a little bit more practice with methods and variables so you can see how you can use them to modify the behavior of your XRP."})}},"Modifying Your XRP\u2019s Drive Behavior":{14:{actionType:Ga.Search,content:(0,Ra.jsx)("p",{children:"Let\u2019s take a look at how you can use variables in code to change the behavior of your robot. Open the file called Drivetrain.java. You can find it in the \u201cSubsystems\u201d folder in src/main/java/frc/robot. On lines 58-60 there is a method called arcadeDrive. Unlike System.out.println, this method is a custom-created method in our code, as opposed to a method native to the Java programming language. We will talk more about user-created methods soon. For now, take a look at line 58. There are parentheses, inside of which you see \u201cdouble xaxisSpeed, double zaxisRotate\u201d. These are variables that are being declared. This is a slightly different way to declare variables which we\u2019ll talk more about soon. What\u2019s important about these variables is when this code runs, they are assigned values dynamically. This is different than when you declared variables above and set them equal to a value. Again, we\u2019ll discuss it more soon, but for now, just know that whenever this code runs, these variables are assigned the values that are read from the joysticks. Remember, the joysticks range from -1 to 1, so that\u2019s the possible range these variables could receive. If one joystick axis is halfway forward and the other is all the way back, they would have values of .5 and -1, respectively."})},15:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"On line 46, we call another method, and pass in the same variables. We didn\u2019t really talk about \u201cpassing in\u201d when we were using SOP, but to pass in means to send some information to a method. With SOP, you\u2019re passing in the text you want to print. The method prints whatever it\u2019s given, so you give it what you want to print. Line 46 functions the same way, except you\u2019re passing in joystick values instead. We want to get some practice seeing how variables can affect our robot. If you press F5 right now and deploy your code to your XRP, you can try driving it around for a moment. Get a feel for how fast it goes when you give it full throttle, half throttle, etc. We\u2019re going to modify the throttle power and then you can compare the two."})},16:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson2_16.png"}),content:(0,Ra.jsx)("p",{children:"In this method, the throttle output is represented by the variable called \u201cxaxisSpeed\u201d. To modify the power, simply insert an additional line on line 46, before the previously existing line 46, that looks something like this:"})},17:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"You don\u2019t have to use .5, but it\u2019s a good choice to make the effect obvious. Do choose a number between 0 and 1. Then run your code and try driving your robot around. You\u2019ll notice that the power output is scaled by whatever number you chose. Thinking about the code, this makes sense \u2013 you took the power and multiplied it by some coefficient. Now try a few other values. Try a number greater than one, try zero, and try a negative number. Before you deploy each change, try to predict what will happen. Were your predictions correct?"})},18:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"A number greater than one will not increase the maximum speed of the robot, because that is physically limited by the hardware, however it will reduce controllability because even a small amount of joystick input will result in sending maximum power output. Zero will make any input from that joystick irrelevant. A negative number will scale the output by whatever coefficient you chose and also invert forward and backward. If you want, you can also try playing around with the zaxisRotate variable, or even both variables at once."})},19:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"Playing with these variables demonstrates how you can use variables to control your robot. For example, with the default code, the turning controls are pretty sensitive \u2013 if you\u2019re going full power forward and try to turn at all full power at the same time, your robot will turn, but it will stop moving forward at all. It might be more comfortable to drive if the robot turned while still moving forward if both joystick axes are given max power. Scaling the rotate by .65 and leaving the speed at full power, for example, would achieve this, although it would reduce the max speed at which one could turn even when not driving forward. In a future lesson we\u2019ll cover how we could get the benefits of the scaled turn at full power without sacrificing anything. For now, you\u2019ve developed an understanding of what variables are and how you can use them, and we\u2019ll keep building upon this knowledge."})}}},"Lesson 3 - Methods, Classes, and Objects":{totalParagraphs:21,Introduction:{0:{content:(0,Ra.jsx)("p",{children:"In Lesson 2 you learned what methods are, but we only scratched the surface. In this lesson we\u2019ll introduce two more critical concepts \u2013 classes and objects. We\u2019ll learn how to utilize the buttons on your joystick and make the on-board lights on the XRP turn on and off. Start off by creating a new XRPReference project called \u201cLights\u201d."}),actionType:Ga.Code}},"Classes & Objects":{1:{content:(0,Ra.jsx)("p",{children:"Java is what is known as an \u201cobject-oriented\u201d programming language, or OOP. The basic concept behind OOP is that there are classes, which represent real-world idea or concepts, that can be described in code. For example, you could have a \u201cCar\u201d class, and in code, you could describe a car, by doing things like keeping track of its model, make, max speed, current speed, etc. Structuring code like this makes it easy to think about because your code relates to your real-life concept of what you\u2019re working with. An object is an instance of a class. For example, you could have a Car class, and then individual objects that represent individual cars. In Java, each class is typically represented by one file, and each file represents one class. This is why you in the explorer you see filenames that correspond to concepts and ideas that make sense in English. For example, there is \u201cRobot.java\u201d which represents a robot, \u201cDrivetrain.java\u201d that represents a drivetrain, and so forth. We\u2019ll do a deep dive on classes and objects soon, but for today we\u2019ll keep moving quickly and get you writing code before going too in-depth. As you read through the next few paragraphs, think about the big picture and don\u2019t worry too much about remembering each specific keyword, because you\u2019ll remember them better after we go in more depth, and you can refer back to this lesson and re-read the following paragraphs as needed until then."}),actionType:Ga.Read},2:{image:(0,Ra.jsx)("img",{src:"./images/lesson3_2.png"}),content:(0,Ra.jsx)("p",{children:"You can create classes by defining them in files. For example, the Drivetrain.java file defines the Drivetrain class as mentioned above. If you open Drivetrain.java and look at line 14, you\u2019ll see the text \u201cpublic class Drivetrain\u201d which, declares the Drivetrain class. Then you\u2019ll see several lines that look like normal variable declarations \u201cdouble kWheelDiameterInch = 2.75591;\u201d, but with extra words in front. Don\u2019t worry about those extra words for now. These are variables that belong to the Drivetrain class and help create a logical model of a drivetrain. Classes can be composed of variables that are relevant to the class, which can then later be accessed when using the class."}),actionType:Ga.Search},3:{actionType:Ga.Search,image:(0,Ra.jsx)("img",{src:"./images/lesson3_3.png"}),content:(0,Ra.jsx)("p",{children:"If you look at lines 20 and 21, you\u2019ll see two more variables declared \u2013 m_left and m_rightMotor. This makes sense \u2013 thinking about the XRP, it has two motors, one on each side. However, these variables are unlike variables you\u2019ve seen before. Instead of being of type int or double, they\u2019re of type XRPMotor. What is a XRPMotor? Well, turns out you can hover your mouse over the word XRPMotor to get a brief description. There\u2019s a lot of technical information in the pop-up that you can ignore for now, but the key part is the first sentence: \u201cREV Robotics XRPMotor Speed Controller.\u201d A XRPMotor represents a real-world object called a speed controller, which physically handles outputting voltage to motors to make them spin. In this case it\u2019s called a XRPMotor and manufactured by the company REV Robotics."})},4:{actionType:Ga.Search,content:(0,Ra.jsx)("p",{children:"The Java programming language is used worldwide for billions of devices and programs, and certainly cannot natively support every piece of hardware ever manufactured, like a XRPMotor motor controller. So how can we declare a variable of type XRPMotor? The answer is, once a class is created in Java, you can declare variables of that type. So, somebody made a class called XRPMotor, just like we have a class called Drivetrain. Once the XRPMotor class exists, we can create XRPMotor variables. These variables are different than more \u201cbasic\u201d variables like ints and doubles. Ints and doubles are called primitive variables because they are inherent to Java. There are a few other primitive variable types, for example boolean variables which represent either \u201ctrue\u201d or \u201cfalse\u201d. But variables of non-primitive types, or in other words variables that are of the type of a class, are called objects. Once a class exists, objects of that class can be created. An object of a class is called an instance of that class. So, referencing the Drivetrain class we\u2019re looking at, on line 15 the class is declared. On lines 16 through 20, four primitive variables are declared of type double, and on lines 24 and 25 two objects are defined of type XRPMotor. The XRPMotor class is defined somewhere else, but we\u2019re not worried about there here. Someone else did the work of making the XRPMotor class work, and now you get to use it. Notice how when variables that are objects are created, they use an additional keyword \u201cnew\u201d, and then repeat the object name \u2013 for example on line 24 when declaring the m_leftMotor XRPMotor object, it says \u201cnew XRPMotor(0)\u201d. Again, we\u2019ll talk about this more later on but for now, when you see the \u201cnew\u201d keyword, that\u2019s your clue that it\u2019s an object being created instead of a primitive. Another clue is that for objects the variable type is capitalized \u2013 e.g. XRPMotor instead of xrpMotor, but not for primitive variables (e.g. int instead of Int.)"})},5:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"That\u2019s a lot of information to take in so let\u2019s do a quick recap. In Java there are classes, which can be defined, and after doing so they can be used by creating an instance of the class, which is called and object. Classes can be given variables which describe the class, for example describing a drivetrain by declaring that it has a left and a right motor. These variables can then be used when working with the class. Let\u2019s show how that happens."})},6:{actionType:Ga.Search,content:(0,Ra.jsx)("p",{children:"You already saw how on lines 24 and 25, two XRPMotor objects are created. On line 33, these objects are used to create a \u201cDifferentialDrive\u201d object. DifferentialDrive is another class that has been created for us that has some built-in functionality that handles the math that converts joystick values to motor outputs. For this class to work it needs motors to output to, which is why you can see at the end of line 33 that the two XRPMotor objects are being used to create the DifferentialDrive object, called m_diffDrive. Scroll down and on line 59 you\u2019ll see m_diffDrive.arcadeDrive(xaxisSpeed, zaxisRotate), which you\u2019re familiar with from lesson 2. This is an example of using an object to do something \u2013 in this case, the m_diffDrive object, and we\u2019re using the \u201carcadeDrive\u201d method that has been declared as part of the DifferentialDrive class. This is another critical concept when it comes to classes and objects \u2013 methods can be defined as part of the behavior for the class. Then those methods can be called using objects of that class."})},7:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"We\u2019ll go in more depth soon but now let\u2019s dive into our project of using buttons on the joystick to turn a light on and off. To do this there are a couple steps. First, we\u2019re going to have to create two commands, one to turn the light on, and one to turn it off. Commands are another concept we\u2019ll talk about soon but for now you can think of a command as \u201csomething the robot can do\u201d. For example, you could make a command to drive forward, a command to stop, a command to toggle a light, etc. In this case we\u2019ll make two; one each for turning the light on and off. Let\u2019s walk through it step by step. After the commands are created, you\u2019ll need to add a couple lines of code that tell the commands to run when a button on the joystick is pressed. Let\u2019s get started."})},8:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson3_8.png"}),content:(0,Ra.jsx)("p",{children:"The first thing is to create the commands. Let\u2019s start with the command to turn the light on. Navigate to the \u201ccommands\u201d folder in src/main/java/frc/robot. Right click on the folder itself in VSCode and select \u201cCreate a new class/command\u201d at the bottom of the popup."})},9:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"This will bring up a dropdown with a list of options. Select \u201cCommand\u201d. This brings up a prompt to type a class name. Type \u201cTurnLedOn\u201d and press enter. This brings up a new file with some method stubs \u2013 a stub is a method without any contents. Lines 17, 21, 25, and 29 are examples of this. Now follow these steps to create this command. Note that you need to follow the steps in order, or the line numbers won\u2019t sync up, because the line numbers assume that you have entered the lines described in the previous steps."})},10:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"1. Move your cursor to the very end of line 7, after the semicolon, press enter, and then type \u201cimport edu.wpi.first.wpilibj.xrp.XRPOnBoardIO;\u201d. This line tells the program that it will need to use the robot\u2019s on-board IO (input/output) subsystem. This is the subsystem that has the lights we\u2019re going to turn on. Note how the line ends with a semicolon. Most lines of code in Java end with semicolons; this is how you tell Java that the line is finished. The exceptions are lines that end with opening and closing curly brackets, for example lines 10, 14, and 18 in the image in step 3. You\u2019ll learn more about the difference between these kinds of lines soon."})},11:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"2. Put your cursor at the end of line 10 and press enter, and then type \u201cprivate final XRPOnBoardIO m_io;\u201d, then press enter. Again \u2013 don\u2019t forget the semicolon. In step 1 we told our program that it will need to use an XRPOnBoardIO subsystem, and on this line we declare that XRPOnBoardIO subsystem for it to use."})},12:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson3_12.png"}),content:(0,Ra.jsxs)("div",{children:[(0,Ra.jsx)("p",{children:"3. Put your cursor inside the parentheses on line 14 (NOT the curly bracket at the end) and type \u201cXRPOnBoardIO io\u201d. Then go to the end of line 15 (the next line), press enter, and add one line of code. This line initializes the XRPOnBoardIO object."}),(0,Ra.jsxs)("ol",{type:"a",children:[(0,Ra.jsx)("li",{children:"m_io = io;"}),(0,Ra.jsx)("li",{children:"When you\u2019re done with these steps, lines 10-18 should look like this:"})]})]})},13:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson3_13.png"}),content:(0,Ra.jsx)("p",{children:"4. Move your cursor to inside the curly brackets on line 25 (this time NOT the parentheses.) Press enter and then add a line of code by typing \u201cm_io.setLed(true);\u201d. Your execute method should now look like this:"})},14:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Congratulations! You\u2019ve now created your first robot command. Unfortunately, there\u2019s no way to activate this command yet, but we\u2019ll add that in a moment. First, let\u2019s create the sister command that turns the LED off. Follow the steps above again to create another command in the same folder, but call it \u201cTurnLedOff\u201d. Follow all the same steps to add the code to the new command, but when you get to line 27 where you do m_io.setLed(true);, use \u201cfalse\u201d instead of \u201ctrue\u201d. Once you\u2019ve created the second command, it\u2019s time to hook them up to a joystick button."})},15:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson3_15.png"}),content:(0,Ra.jsx)("p",{children:"The first step in hooking them up to a joystick button is figuring out which joystick button is which. This is a similar process to how you figured out which joystick axis was which in lesson one. Open the robot simulator interface if you don\u2019t already have it open (you can press F5 to deploy your code right now if you\u2019re connected to the XRP) and look at the joysticks window. You might need to re-drag your joystick from the Systems Joystick window, to the Joysticks window. Press whatever button on your controller you want to control the light turning on and off, and look at the yellow squares in the joystick window. One of them will light up. Count which number it is, from upper left, starting at one. For example, in this image, button 3 is lit up. Make note of which button lights up as you will need to remember the number in your code."})},16:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson3_16.png"}),content:(0,Ra.jsx)("p",{children:"Now go to RobotContainer.java, put your cursor at the end of line 57, press enter twice, and type out code to match the image below. However, where there are red boxes, change the number 1 to whatever number your button is. These lines of code create a \u201cJoystickButton\u201d object and bind the commands you created to execute when you press and release the button, respectively. You\u2019ll see the red underlines indicating you have errors, and we\u2019ll fix those next. Note that it\u2019s possible that VSCode will fix the red underline under \u201cJoystickButton\u201d on its own. If it does so, that red underline will go away, and all the line numbers in your code will increase by one relative to the image below."})},17:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson3_17.png"}),content:(0,Ra.jsx)("p",{children:"If VSCode does not fix the red underline under JoystickButton automatically, you\u2019ll need to do so yourself. To do so, click on the green text JoystickButton, and you\u2019ll see a little yellow lightbulb pop up to the left. VSCode has limited capabilities to fix common problems for you, and you can access this functionality by clicking on yellow lightbulbs when they appear. Do so and then click \u201cImport \u2018JoystickButton\u2019. This will add a line of code to the top of your program, telling the RobotContainer class to look for the JoystickButton class, which you use when you declare your button1 variable on line 67 above (now 68 after it inserts a line of code.) You will have the same errors on your TurnLedOn and Off commands, because RobotContainer needs to look for those files as well. Use the same method to import those two files as well, and your errors will go away. As alluded to above, sometimes VSCode will fix these errors on its own without you needing to make these clicks, but often you\u2019ll have to do this."})},18:{actionType:Ga.Search,image:(0,Ra.jsx)("img",{src:"./images/lesson3_18.png"}),content:(0,Ra.jsx)("p",{children:"When you\u2019re done importing the classes using the lightbulb, your code should be error-free and look like the photo below:"})},19:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Now you\u2019re done! You can deploy your code to your XRP, enable it, and try pressing your button. You will notice that a light near the back of the XRP lights up while you\u2019re holding the button down, and turns off when you release it."})},20:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"Congratulations on finishing the first three lessons. You\u2019ve now learned a lot of the basics of Java and robot programming. There\u2019s still a lot to learn but if you\u2019ve made it this far, you\u2019re doing well and you should have a basic understanding of how software can be used to effect the behavior of the robot. Over the next lessons we\u2019ll build on that understanding, which will increase both your skills and your confidence in writing your own programs."})}}},"Lesson 4 - Methods Deep Dive":{totalParagraphs:15,Introduction:{0:{content:(0,Ra.jsx)("p",{children:"Over the past two lessons you\u2019ve learned what methods are and used them, but you\u2019ve probably noticed a lot of things that you don\u2019t understand about them. In this lesson we\u2019re going to start building your understanding. Remember, methods are basically self-contained chunks of code that can be called in some other location, so the code doesn't need to be repeated. There are built-in methods (for example System.out.println) and you can also write your own methods. To do this lesson, we\u2019re going to want a clean workspace in VSCode that doesn\u2019t interact with the XRP, so we can write some basic methods and run them without needing to connect to the robot. Then in the next lesson we\u2019ll switch back to working with the XRP and you\u2019ll write some code that gives the XRP a slightly different control scheme while you hold down a button."}),actionType:Ga.Read}},"Setting Up a New Workspace":{1:{image:(0,Ra.jsx)("img",{src:"./images/lesson4_1.png"}),content:(0,Ra.jsx)("p",{children:"To set up a new workspace in VSCode, click on the \u201cJava Projects\u201d button in the lower-left corner of your screen. Then click the \u201c+\u201d icon. If you don\u2019t see the Java Projects button, click the Explorer icon in the upper-left corner of your screen, and it will appear."}),actionType:Ga.Code},2:{image:(0,Ra.jsx)("img",{src:"./images/lesson4_2.png"}),content:(0,Ra.jsx)("p",{children:"After clicking the plus, select the \u201cNo build tools\u201d option from the drop down:"}),actionType:Ga.Code},3:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson4_3.png"}),content:(0,Ra.jsx)("p",{children:"A window will pop up asking you to designate a folder for the project. You can choose whatever folder you want. You might find it helpful to create a folder somewhere on your computer to hold all of your programming projects. Regardless of where you locate it, select a folder for the project location. Type a name for your project and press enter; a good name to use is \u201cMethodsScratch\u201d. After you press enter, you\u2019ll be greeted with a new instance of VSCode and you won\u2019t see any code, but your project will already have a file called App.java. You can open it by drilling into the \u201csrc\u201d folder in explorer on the left. Open it and you\u2019ll see something like this"})},4:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Go ahead and press F5 and you\u2019ll see \u201cHello, World!\u201d output in the terminal at the bottom of your screen. Outputting \u201chello world\u201d is a common first program to write and is often used in examples and teaching. Try typing something else in the quotes in the SOP on line 3 and running your program again, just to prove that the code you\u2019re running is the code you\u2019re looking at. Now that you\u2019re set up, you\u2019ll be able to try out writing your own programs from scratch and running them here!"})}},"The Main Method":{5:{actionType:Ga.Search,image:(0,Ra.jsx)("img",{src:"./images/lesson4_5.png"}),content:(0,Ra.jsx)("p",{children:"Every Java program must have exactly one \u201cmain\u201d method, defined by the rather confusing-looking chain of word \u201cpublic static void main(String[] args)\u201d. Each of those words have a meeting you will learn soon \u2013 in this lesson you\u2019ll learn what \u201cvoid\u201d means, and you can ignore the other words there for now. But the word \u201cmain\u201d is the name of the method. Each program must have exactly one, because the main method is where your program starts, and every program needs a defined starting point. In practice there\u2019s usually not much code in main methods; it simply calls some other method with a single line. As an example here\u2019s the main method of your XRP project (you can find this in Main.java in java/frc/robot if you want to look for yourself.) Having only one line of code in your main method is a good practice to follow although for the sample programs you\u2019ll write today it\u2019s not super important"})}},"YouTube Videos":{6:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson4_6.png"}),content:(0,Ra.jsx)("p",{children:"Now that you have a work environment setup where you can code, it\u2019s time to get some practice. Throughout this course there will be links to various YouTube videos. There are a couple things to keep in mind with YouTube videos. First, they\u2019re often in a different application for writing code. You might see the author use keyboard shortcuts or interface buttons that don\u2019t exist in VSCode. However, the code itself runs the same way, so don\u2019t worry about matching the keyboard shortcuts. Second, you may find it beneficial to change the playback speed to go either faster or slower depending on your prior experience and understanding. You can change the playback speed by clicking the gear in the lower-right corner and selecting a speed."})}},"Method Types":{7:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["Watch this video on YouTube for a walkthrough on writing some simple methods, and follow along by writing out and running the methods yourself in VSCode: ",(0,Ra.jsx)("a",{href:"https://www.youtube.com/watch?v=-IJ5izjbWIA",children:"https://www.youtube.com/watch?v=-IJ5izjbWIA"})," In the video, two different kinds of methods are used \u2013 some that perform some action without returning any data, and some that return data. This is where the void keyword comes in. A method that does not return any data is declared using the void keyword. A method that does return data is declared using the type of data it returns. Thus far we\u2019ve worked with ints, doubles, booleans (true/false), and a couple of objects. Another important data type that is used in the video is String. A string is simply text. You\u2019ll notice that unlike int and double, String is capitalized like an object. This is because Strings are in fact objects, but they are built-in objects that are part of Java. Strings being objects will matter more later but doesn\u2019t matter too much right now for following along with the video. It\u2019s simply good to know so you understand why String is capitalized while int is not."]})}},Scope:{8:{actionType:Ga.Code,content:(0,Ra.jsxs)("p",{children:["After finishing the methods video, watch one more video about variable scope, and again follow along by writing out the methods in VSCode: ",(0,Ra.jsx)("a",{href:"https://www.youtube.com/watch?v=Y2iN3TO5qOQ",children:"https://www.youtube.com/watch?v=Y2iN3TO5qOQ"}),' "Scope" is the concept of where a variable exists and for how long. Basically, variables declared in a method only exist in that method, and variables declared in a class exist throughout that entire class. A variable cannot be accessed or changed from a location in code where it does not exist']})}},"Getting User Input":{9:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson4_9.png"}),content:(0,Ra.jsx)("p",{children:"With the XRP, we got user input in the form of joystick and button presses. With this desktop app that we\u2019re working on, we don\u2019t have a joystick or buttons, but we do have our computer\u2019s keyboard. Let\u2019s write a quick program that gets input from the user and then prints the input back out. To do this, we\u2019ll use Java\u2019s built in Scanner class. The scanner accepts input in the terminal window where your output shows up. You will be able to type a number, press enter, and your program will read that number. Make sure that if your program is looking for an integer, you give it an integer! If you give it a decimal or a String (text), you will get an error. Here is a sample program you can write in VSCode:"})},10:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson4_10.png"}),content:(0,Ra.jsx)("p",{children:"Run this program and look at the terminal in the bottom of your screen, and it will be asking you for input. Type an integer, press enter, and the program will echo your input:"})}},Practice:{11:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson4_11.png"}),content:(0,Ra.jsx)("p",{children:"You\u2019re now familiar with several concepts in Java: variables, methods, classes, objects, scope, and getting user input. That\u2019s a lot of knowledge, and it\u2019s enough for you to start writing some programs on your own. We\u2019ll make a small calculator app. Create a new project in VSCode (refer back to the start of this lesson if you forget how to do so) and call it Calculator. In your main method, declare a Scanner object and use it to initialize two integer variables. For example:"})},12:{actionType:Ga.Code,content:(0,Ra.jsxs)("div",{children:[(0,Ra.jsx)("p",{style:{margin:0},children:"Now add five methods to your program as follows."}),(0,Ra.jsxs)("ol",{children:[(0,Ra.jsx)("li",{children:'A "welcome" method that takes no parameters and returns nothing, that outputs a simple "Welcome to calculator" message to the user.'}),(0,Ra.jsx)("li",{children:'An "add" method that takes two integer parameters, adds the two integers together, and outputs the result. This method does not return anything.'}),(0,Ra.jsx)("li",{children:'A "multiply" method that takes two integer parameters, multiplies them together, and then returns the result as an integer.'}),(0,Ra.jsx)("li",{children:'A "subtract" method that takes two integer parameters, subtracts them, and then returns the result as an integer.'}),(0,Ra.jsx)("li",{children:'A "cube" method that takes a single integer parameter, cubes it, and returns the result as an integer.'})]})]})},13:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson4_13.png"}),content:(0,Ra.jsx)("p",{children:"Then, in your main method, call each of these six methods using one or both numbers that the user input. For the methods that return a value instead of outputting a result, output the value they return in your main method. You can use a variable to do this like so:"})},14:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"When you're done and you run your program, it should ask for two inputs, and then have five lines of output"})}}},"Lesson 5 - If Statements & Cut-Power Mode":{totalParagraphs:21,Introduction:{0:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"In this lesson you\u2019ll learn a critical new concept in programming known as conditionals, or if statements. You use if statements to create conditional logic in your code, for example \u201cif something is true, do something, otherwise do something else\u201d. You\u2019ll then do a project where you use your new knowledge to give yourself some additional control over your robot so you can perform tricky driving maneuvers more easily."})}},"If Statements":{1:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson5_1.png"}),content:(0,Ra.jsx)("p",{children:"If statements in Java are pretty simple to code, and they tend to make a lot of sense logically as well. The basic form is pictured below. This short program declares an int called hour of day and sets its value to 6, and then checks whether that value is less than 10. If it is, it outputs a line of text. Unsurprisingly, if you run this program, it does, indeed, output \u201cGood morning!\u201d. If you were to change the value on line three from 6 to 12, it would output nothing."})},2:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson5_2.png"}),content:(0,Ra.jsx)("p",{children:"There are two additional keywords that go along with if statements: else if, and else. Else if allows you to specify a second condition, that will be checked if and only if the first if statement is false. Pictured below is an example. If you run this program, the output will again be \u201cGood morning!\u201d. Even though 6 is indeed less than 15, line 8 never runs because line 5 is true. If you change the value of hourOfDay to 11, then line 8 will be false, line 8 will run and evaluate to true, and the output will be \u201cGood day!\u201d."})},3:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson5_3.png"}),content:(0,Ra.jsx)("p",{children:"Lastly, there is \u201celse\u201d. An else clause will run if and only if all the prior clauses evaluate to false. Pictured below is an example. In this case, since hourOfDay is 20, the first three if and else if statements all evaluate to false, so the else statement runs and the output is \u201cGood evening!\u201d."})}},Operators:{4:{actionType:Ga.Read,content:(0,Ra.jsxs)("div",{children:[(0,Ra.jsx)("p",{children:"You may have noticed in the prior examples that we used the \u201c<\u201d, or \u201cless than\u201d sign, in our if statements. This is called an \u201coperator\u201d and it is used to compare two values. There are a few other operators, which you may be familiar with from math class:"}),(0,Ra.jsxs)("ul",{children:[(0,Ra.jsx)("li",{children:"<: less than"}),(0,Ra.jsx)("li",{children:">: greater than"}),(0,Ra.jsx)("li",{children:"<=: less than or equal to"}),(0,Ra.jsx)("li",{children:">=: greater than or equal to"}),(0,Ra.jsx)("li",{children:"==: equal to"})]})]})},5:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson5_5.png"}),content:(0,Ra.jsxs)("p",{children:["Notice how instead of just using one equal sign, the equal to operator uses two equal signs. This is because if you just use one equal sign, you would be assigning a value to a variable. When you write if statements you need to be careful to use both equal signs, because if you use just one, two bad things will happen. First, instead of checking the value of the variable, you will overwrite its old value with whatever you\u2019re checking against. E.g. \u201cif (hourOfDay = 10)\u201d will overwrite hourOfDay with the value 10. Additionally, ",(0,Ra.jsx)("em",{children:"the operation of overwriting the value of hourOfDay with 10"})," will be successful, and so the operation will return true. So not only will your variable be overwritten, but your if statement will return true because the overwrite was successful. This will cause errors later in your program, so be careful to always use the double equals sign when checking equality. Here\u2019s an example:"]})}},"Quick Practice":{6:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Try a quick demo for yourself using a non-XRP program, like you did in the last lesson, except instead of hourOfDay, use an int variable called \u201cdayOfWeek\u201d. A value of 1 represents Sunday, 2 Monday, etc. through all seven days. Then write an if statement and a series of else if statements that check the value until it finds what day of the week it is, and outputs a line of text saying which day of the week it is. Include an else statement that runs if the day of the week is not a sensible value, or in other words if it\u2019s any value that isn\u2019t between 1 and 7 inclusive. Then run your program and make sure it works correctly. Try it with a few different values and make sure that your code outputs the correct day, and make sure if you give it a value of, say, 12 that your else statement runs correctly."})}},"XRP Project \u2013 Cut Power Mode":{7:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"In this project we\u2019ll add a driving mode called \u201ccut power\u201d and bind it to a button on your controller. While the button is held, all power outputs to the XRP\u2019s drivetrain will be reduced, but when the button is not being held everything is normal, letting you switch between drive modes instantly on the fly. This can be useful when you want extra maneuverability while driving. To start, create a new XRPReference project."})},8:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson5_8.png"}),content:(0,Ra.jsx)("p",{children:"Create a new command called \u201cArcadeDriveCutPower\u201d in the commands folder. There\u2019s already a command called ArcadeDrive, and we could modify that one instead, but for this project we\u2019ll just create a parallel command so we don\u2019t need to update other references to the original command. After you create the new command, open the original ArcadeDrive command and copy its entire text and paste it into your new command (overwrite the default text in the new command.) After you do this you\u2019ll get a red squiggly line under \u201cArcadeDrive\u201d on line 11 because the name of the class doesn\u2019t match the filename. Click on the underlined test and a lightbulb appears. Click the lightbulb and choose the first option (\u201cRename\u2026\u201d) to let VSCode fix the class name for you, based on the filename of your command."})}},"Method Arguments":{9:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson5_9.png"}),content:(0,Ra.jsx)("p",{children:"Now that you\u2019re more familiar with methods and passing values into them, it\u2019s time to flex your knowledge by adding a parameter to your new command. You\u2019ll need an additional class variable first. We\u2019ll talk about these next lesson but for now navigate to the end of line 14, press enter, and type \u201cprivate final Supplier<Boolean> m_cutPowerModeSupplier;\u201d. Now you can add a parameter to the method on line 26 called \u201cArcadeDriveCutPower\u201d. Notice that this method actually spans a few lines with line breaks after each comma. Position your cursor immediately after \u201czaxisRotateSupplier\u201d on line 29, add a comma and press enter, and add a parameter of type \u201cSupplier<Boolean>\u201d called \u201ccutPowerModeSupplier\u201d. The \u201cSupplier<Boolean>\u201d data type is an advanced concept that we won\u2019t cover in this course, but you can essentially think of it like a boolean variable. In this case that boolean will represent true/false for whether cut power mode is activated. Now that we\u2019ve declared the parameter, it just needs to be initialized. Position your cursor at the end of line 33, press enter, and set your \u201cm_cutPowerModeSupplier\u201d variable equal to the method parameter you just created. Here\u2019s what your class should look like so far:"})},10:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson5_10.png"}),content:(0,Ra.jsx)("p",{children:"The last thing you need to do in this command is change one more line in the execute() method, on line 45. Make two changes to this line. First, make a new method, again to keep references to the original method intact. On line 45, where m_drivetrain.arcadeDrive is called, change \u201carcadeDrive\u201d to \u201carcadeDriveCutPower\u201d. Lastly, add a parameter to the method call so your execute() methods looks like this:"})},11:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"You will have a red underline on your method call because the method arcadeDriveCutPower doesn\u2019t exist yet. So far you\u2019ve done all the \u201cplumbing\u201d to make sure that the boolean for whether or not the robot is in cut power mode gets to where it needs to go. The next step will be creating this method that doesn\u2019t exist yet, which will utilize the boolean to actually apply cut power to the robot. Make sure to save your code in this file before proceeding."})}},"The arcadeDriveCutPower Method":{12:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Navigate to Drivetrain.java and find the arcadeDrive method on line 45. This is the method that is being called right now when you drive your robot, as you might remember from prior lessons when you modified the drive code. This time you\u2019re going to copy it and modify it using an if statement. You can start by copying the entire method, adding a blank line beneath it, and then pasting the code in. Then change the name of the method to match your method call from line 45 of ArcadeDriveCutPower.java above. Lastly, add a boolean parameter to the new method, to again match the parameter added in ArcadeDriveCutPower.java. Save your code and navigate back to ArcadeDriveCutPower.java. You\u2019ll notice that line 45 will no longer have a red underline, because now the method you\u2019re calling exists. Of course, since you simply copied the existing arcadeDrive method, your code won\u2019t do anything different yet. Let\u2019s modify your copied method to make it work."})},13:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"Back in Drivetrain.java in your method, add a new line at the start of the method and then add an if statement. Your method has a parameter \u201cboolean cutPowerMode\u201d. You want to check if this variable is true or not. If it is you\u2019ll want to scale the values of both xaxisSpeed and zaxisRotate, similar to how you did in the lesson about variables where you modified the drivetrain code. The exact amount to scale them by to make your cut power mode feel good will depend on what physical surface your XRP is driving on and how much friction there is. You can adjust the values after trying it out, but a decent starting point is to scale them both by .7. Creating this if statement and scaling the values is all you need to do here."})},14:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson5_14.png"}),content:(0,Ra.jsx)("p",{children:"In the prior lesson where we played with these variables, we changed their values in a very standard fashion:"})},15:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson5_15.png"}),content:(0,Ra.jsx)("p",{children:"There\u2019s another way to update variables that\u2019s slightly shorter and is nice to use when the update is pretty simple and understandable, such as multiplying by a static coefficient. You can use the \u201ctimes-equals\u201d operator, like so:"})},16:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"The lines of code in the previous two images have exactly the same function \u2013 they will both update the variables by multiplying them by .7. The second way is simply a shortcut you can use if you want. We\u2019ll use it from time to time in this tutorial. Whether you use it or not is up to you, but you need to recognize it and understand it. It\u2019s also worth noting that you can do the same with other operators, for example +=, -=, etc"})},17:{actionType:Ga.Read,image:(0,Ra.jsx)("img",{src:"./images/lesson5_17.png"}),content:(0,Ra.jsx)("p",{children:"When you\u2019re done, your method should look something like this:"})}},"Updating the Default Command":{18:{actionType:Ga.Read,content:(0,Ra.jsx)("p",{children:"Your new command and method are both ready to go, so the last thing you need to do is update the command that your drivetrain is using, to your new command. Navigate to RobotContainer.java and scroll to line 65. You\u2019ll see a method call for \u201csetDefaultCommand\u201d. This line sets the default command for the drivetrain subsystem. You can set default commands for any subsystem, of which the XRP has two - the drivetrain, and the on-board IO, which controls the lights. Default commands run all the time as long as there is no other command issued to the subsystem. Using the drivetrain as an example, this is generally the case. In teleop, you just want to drive, so there\u2019s generally no reason to issue other commands. There are exceptions to this, for example you could create a command to turn exactly 90 degrees when you press a button. If that command were issued to the drivetrain, the default drive command would stop running until the turn command finishes, and then once the turn command finishes, the default command would turn on again. Other situations where you might not want default commands to run would be during autonomous, where you want to issue specific commands. We\u2019ll do all of these things in future lessons, but for now, we\u2019re just interested in using the default command so we can drive, and we want that default command to be the new command we created."})},19:{actionType:Ga.Code,image:(0,Ra.jsx)("img",{src:"./images/lesson5_19.png"}),content:(0,Ra.jsx)("p",{children:"Looking at line 65 again, you see the setDefaultCommand method, and there\u2019s actually another method call inside of it \u2013 \u201cgetArcadeDriveCommand()\u201d. In VSCode, you can drill-in to any method by clicking on the call for that method and pressing F12. Do this on the getArcadeDriveCommand call and VSCode will navigate you to line 93. Move down one line to 94 and update the \u201cArcadeDrive\u201d command to \u201cArcadeDriveCutPower\u201d. You\u2019ll also need to add an additional parameter, since you added a parameter in your command. In order to do this you\u2019ll need to figure out which button you want to use to activate cut power mode. You can do this the same way you figured out which button to use to light up the LED, so do that. If you don\u2019t have the simulation interface open and can\u2019t deploy code because you have errors, you can simply use button 1 for now, and then change it later. Either way, decide on a number for your button, and add a parameter to your method by adding a comma after the \u201cm_controller.getRawAxis(4)\u201d, and then typing the following text: \u201c() -> m_controller.getRawButton(6)\u201d, where 6 is replaced by the number of your button. If you\u2019re using an Xbox controller, 6 will be the right bumper. The reason this line of code looks so messy has to do with the Suppliers that we mentioned earlier won\u2019t be covered in this course. Don\u2019t worry too much about this \u2013 there are ways to do all of this without Suppliers, so you aren\u2019t missing out on critical information. We\u2019ll cover this in the future but we\u2019re using them for now because that\u2019s what the example code uses. When you\u2019re done making the changes, your method should look something like this:"})},20:{actionType:Ga.Code,content:(0,Ra.jsx)("p",{children:"The last thing you\u2019ll need to do is import your new command, which you can do by clicking on the underlined command name, using the lightbulb (VSCode may do this automatically for you.) While you\u2019re there you can remove the unused import for the previous ArcadeDrive command if you want; if you don\u2019t do this, you\u2019ll have a yellow underline pointing out that the import is not used, but it doesn\u2019t affect your program. After you do this you can deploy your code and try out cut power mode! If you still need to, you may want to update which button controls cut power mode. Either way, try driving your XRP, and see how you can hold and release the cut power button to change its characteristics. If you want, you can go back to Drivetrain.java and change the values that you scale the inputs by to make cut power mode cut more or less power"})}}}};for(var Za in Qa)Ka[Za]=Qa[Za];var er=Ka,tr=n(553),nr=n.n(tr);var or=function(e){var n=u((0,t.useState)(!0),2),o=n[0],a=n[1];return(0,Ra.jsxs)("div",{className:o?"sidenavClosed":"sidenavContainer",children:[(0,Ra.jsx)("button",{className:"menuBtn",onClick:function(){a(!o);var e=document.getElementById("sidenavMenu");o?(null===e||void 0===e||e.classList.add("sidenavClosed"),null===e||void 0===e||e.classList.remove("sidenav")):(null===e||void 0===e||e.classList.remove("sidenavClosed"),null===e||void 0===e||e.classList.add("sidenav"))},children:o?(0,Ra.jsx)(Ua,{style:{margin:30}}):(0,Ra.jsx)(Va,{style:{margin:30}})}),(0,Ra.jsx)("div",{id:"sidenavMenu",className:o?"sidenavClosed":"sidenav",children:(0,Ra.jsx)("div",{className:o?"linkTextClosed":"linkText",children:function(e){var t=[];for(var n in e){var o=Number(n.split(" ")[1]),a=e[n],r=[];for(var i in a)if("totalParagraphs"!==i){var s=a[i];for(var l in r.push((0,Ra.jsx)("p",{style:{color:"cadetblue",fontSize:18,marginLeft:20,marginTop:0,marginBottom:0},children:i})),s){var u=s[l];r.push((0,Ra.jsx)("a",{style:{display:"inline-block",textOverflow:"ellipsis",width:"calc(100% - 60px)",marginLeft:40,marginTop:0,marginBottom:0,overflow:"hidden",whiteSpace:"nowrap",color:"black",maxHeight:50},href:"#/lesson-"+o+"/"+l,children:(0,Ra.jsx)("p",{children:u.content})}))}}t.push((0,Ra.jsx)(nr(),{onOpening:function(){},trigger:(0,Ra.jsxs)("p",{children:[n," ",(0,Ra.jsx)(Xa,{style:{position:"relative",transform:"translateY(25%)"}})]}),children:r.map((function(e){return e}))}))}return t}(er).map((function(e){return e}))})})]})};var ar=function(e){return(0,Ra.jsxs)("div",{className:"screenContainer",children:[(0,Ra.jsx)(or,{currentLesson:e.lesson}),(0,Ra.jsxs)("div",{className:"screenContentContainer",children:[(0,Ra.jsxs)("div",{id:"lessonAndSubheading",children:[(0,Ra.jsxs)("h1",{children:["Lesson ",e.lesson," - ",e.lessonTitle]}),(0,Ra.jsx)("h2",{children:e.subHeading?e.subHeading:null})]}),(0,Ra.jsxs)("div",{id:"contentBlock",className:"textContainer",children:[function(){switch(e.actionType){case Ga.Search:return(0,Ra.jsx)(Na,{});case Ga.Read:return(0,Ra.jsx)(La,{});case Ga.Code:return(0,Ra.jsx)(za,{});case Ga.Robot:return(0,Ra.jsx)(Ma,{});default:return(0,Ra.jsx)(Fa,{})}}(),e.content]}),(0,Ra.jsx)(Ya,{currentLesson:e.lesson,totalParagraphs:e.totalParagraphs,paragraphIndex:e.paragraphIndex})]})]})};function rr(){return(0,Ra.jsxs)("div",{className:"screenContainer",children:[(0,Ra.jsx)(or,{currentLesson:1}),(0,Ra.jsx)("div",{className:"screenContentContainer",children:(0,Ra.jsxs)("div",{id:"homeText",className:"textContainer",children:[(0,Ra.jsx)("h1",{children:"Welcome to XRP Programming Course!"}),(0,Ra.jsxs)("p",{children:["This website is an interactive version of ",(0,Ra.jsx)("a",{href:"https://github.com/czbeatty/FRC-Romi-Programming-Course",target:"_blank",children:"this PDF course"})," modified for the XRP robot. Solutions for some lessons can be accessed through the previous link. For more information about the course and the interactive version, keep reading!"]}),(0,Ra.jsx)("h2",{children:"Course Description"}),(0,Ra.jsxs)("p",{children:["This course is for learning how to program FRC robots using the WPILib and an XRP robot. It is designed for FRC teams or individual students who have access to ",(0,Ra.jsx)("a",{href:"https://www.sparkfun.com/products/22230",children:"XRP robots"})," and want to learn how to develop software for robots. This course assumes no prior knowledge of programming, but will also serve students with some prior experience. In addition to covering fundamentals of programming (in Java), this course teaches how to use the WPILib to program robots using the command-based framework. It also demonstrates a number of ways one can use software to increase the competitiveness of a robot, using practical examples that could easily be applied to FRC. Because this course uses the WPILib, projects done for this course could easily be transferred to a full-size FRC robot with only minimal changes. If all the projects in this course were applied to a robot, it would lead to a significant advantage in drivability as compared to default drive code, and provide basic autonomous capabilities, but this course stops short of advanced concepts such as motion profiling."]}),(0,Ra.jsx)("p",{children:"The course can be completed with a few hours a week over the course of a fall pre-season. Students on teams with few or no programming mentors can do this course without any adult help. FRC teams in such a position can use this to develop a few students into programmers and kickstart their programming teams. Teams that already have a number of programming students and/or mentors can use it as a way to train new students or as an introduction to more advanced concepts. Teams that already have software curriculums may find individual lessons, projects, or examples beneficial."}),(0,Ra.jsx)("h2",{children:"About the Interactive Version"}),(0,Ra.jsx)("p",{children:"If this is your first time here, click on the menu in the top left to get started. Every lesson is broken down into several screens that each contain about one paragraph of content. You can find any lesson, subheading, or paragraph in the menu. When you're on a paragraph screen, you can navigate through the lesson by clicking the left and right arrows at the bottom of the screen."}),(0,Ra.jsx)("p",{children:'Each paragraph may have one of four symbols next to it: the "keyboard", "text", "search", or "robot" symbol. The keyboard indicates a step that requires taking any action on your laptop (e.g. typing, running code, opening a link); The text icon means you only need to read the paragraph; the search symbol tells you to find something in your code, but not to make any changes; and the robot indicates any direct interaction with the XRP. Use these icons while taking the course to gain a sense of what each paragraph is asking of you before you even begin reading or to find a paragraph that you completed previously. Think you messed up a step earlier in the lesson? You can efficiently backtrack by skipping over all of the "text" and "search" paragraphs\u2014and studying the "keyboard" sections more closely.'}),(0,Ra.jsxs)("p",{children:["The goal of this is to make ",(0,Ra.jsx)("a",{href:"https://github.com/czbeatty/FRC-Romi-Programming-Course",target:"_blank",children:"the original PDF course"})," easier to absorb and navigate. As someone who took the course myself and is now helping others through it, I hope this reduces the overall time to completion and improves the general experience of those taking the course. Feedback from students in-person is already leading to further developments in this interactive version, but if you discovered this online and have suggestions, please don't hesitate to open an issue on ",(0,Ra.jsx)("a",{href:"https://github.com/milligansarah/xrp-course",target:"_blank",children:"this GitHub repository"})]}),(0,Ra.jsx)("p",{children:"Good luck!"}),(0,Ra.jsx)("p",{children:"-Sarah Milligan, Team 1188"})]})})]})}var ir=function(e){return(0,Ra.jsxs)("div",{className:"screenContainer",children:[(0,Ra.jsx)(or,{currentLesson:e.lessonCompleted}),(0,Ra.jsxs)("div",{className:"screenContentContainer",children:[(0,Ra.jsxs)("div",{id:"lessonCompleteText",className:"textContainer",children:[(0,Ra.jsx)("h1",{children:"Congrats!"}),(0,Ra.jsxs)("p",{children:["You just finished lesson ",e.lessonCompleted,". Onward to lesson ",e.lessonCompleted+1,"!"]})]}),(0,Ra.jsx)(Ya,{currentLesson:e.lessonCompleted,paragraphIndex:e.totalParagraphs,totalParagraphs:e.totalParagraphs})]})]})};Ja(),a.createRoot(document.getElementById("root")).render((0,Ra.jsx)(t.StrictMode,{children:(0,Ra.jsx)(Re,{basename:"/",children:function(e){var t=[];for(var n in e){var o=e[n],a=[],r=e[n].totalParagraphs,i=Number(n.split(" ")[1]),s=n.split(" - ")[1];for(var l in o){var u=o[l];for(var c in u){var d=u[c];a.push((0,Ra.jsx)(xe,{path:c,element:(0,Ra.jsx)(ar,{lessonTitle:s,subHeading:l,lesson:i,totalParagraphs:r,paragraphIndex:Number(c),actionType:d.actionType,content:(0,Ra.jsxs)("div",{children:[d.content,d.image,d.more_images]})})}))}}a.push((0,Ra.jsx)(xe,{path:"complete",element:(0,Ra.jsx)(ir,{totalParagraphs:r,lessonCompleted:i})}));var h=n.split(" -")[0].split(" ").join("-");t.push((0,Ra.jsx)(xe,{path:h,children:a.map((function(e){return e}))}))}return(0,Ra.jsxs)(Ce,{children:[(0,Ra.jsx)(xe,{path:"/",element:(0,Ra.jsx)(rr,{})}),t.map((function(e){return e}))]})}(er)})}))}()}();
//# sourceMappingURL=main.3fc4a2a6.js.map